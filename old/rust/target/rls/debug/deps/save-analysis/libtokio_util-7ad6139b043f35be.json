{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1","program":"C:\\Users\\takan\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=7ad6139b043f35be","-C","extra-filename=-7ad6139b043f35be","--out-dir","d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps","-L","dependency=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps","--extern","bytes=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libbytes-bc4bfd8600dd09ce.rmeta","--extern","futures_core=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libfutures_core-087913808c6bab5e.rmeta","--extern","futures_sink=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libfutures_sink-42effa7ce425dff3.rmeta","--extern","log=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\liblog-001f87f72a906807.rmeta","--extern","pin_project_lite=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libpin_project_lite-ff30721b68e4b0b5.rmeta","--extern","tokio=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libtokio-e5e47ae4186e983b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\takan\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libtokio_util-7ad6139b043f35be.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[3065074329439035858,0]},"crate_root":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src","external_crates":[{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","num":14,"id":{"name":"bytes","disambiguator":[8214264152642663491,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":15,"id":{"name":"tokio","disambiguator":[3536275244225345,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[5162435965236638425,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","num":17,"id":{"name":"futures_core","disambiguator":[1925450448152840744,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":18,"id":{"name":"mio","disambiguator":[16474443525380373958,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":19,"id":{"name":"net2","disambiguator":[17219188681156553818,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":20,"id":{"name":"winapi","disambiguator":[5933735945854501452,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":21,"id":{"name":"cfg_if","disambiguator":[3151662610743374756,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":22,"id":{"name":"iovec","disambiguator":[4551384346738622172,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":23,"id":{"name":"slab","disambiguator":[11270129971421005808,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":24,"id":{"name":"miow","disambiguator":[18078158055376840166,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":25,"id":{"name":"kernel32","disambiguator":[1694024318165654482,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":26,"id":{"name":"winapi","disambiguator":[11851110773771120866,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":27,"id":{"name":"ws2_32","disambiguator":[10237322981200719636,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","num":28,"id":{"name":"log","disambiguator":[12248921885482483060,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":29,"id":{"name":"cfg_if","disambiguator":[10169579803109374085,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":30,"id":{"name":"fnv","disambiguator":[15854033725940539635,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":31,"id":{"name":"memchr","disambiguator":[16405389548268582636,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":32,"id":{"name":"num_cpus","disambiguator":[13959434253400856960,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","num":33,"id":{"name":"futures_sink","disambiguator":[1159555140867771621,0]}}],"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918146,"byte_end":12918156,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918195,"byte_end":12918202,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918241,"byte_end":12918248,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918286,"byte_end":12918292,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918294,"byte_end":12918305,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918353,"byte_end":12918363,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918412,"byte_end":12918423,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918485,"byte_end":12918505,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918507,"byte_end":12918532,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918581,"byte_end":12918591,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918593,"byte_end":12918608,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":7}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":208,"byte_end":251,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":409,"byte_end":446,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":447,"byte_end":450,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":451,"byte_end":508,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":509,"byte_end":573,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":574,"byte_end":649,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":650,"byte_end":653,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":654,"byte_end":690,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":673}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\cfg.rs","byte_start":892,"byte_end":917,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Utilities for encoding and decoding frames.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12917698,"byte_end":12917745,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12917746,"byte_end":12917749,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12917750,"byte_end":12917818,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12917819,"byte_end":12917894,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12917895,"byte_end":12917943,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12917944,"byte_end":12917947,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12917948,"byte_end":12917987,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12917988,"byte_end":12918029,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918030,"byte_end":12918067,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918068,"byte_end":12918100,"line_start":10,"line_end":10,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919885,"byte_end":12919895,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12918737,"byte_end":12918822,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12918823,"byte_end":12918826,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12918827,"byte_end":12918865,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12918866,"byte_end":12918904,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12918905,"byte_end":12918908,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12918909,"byte_end":12918922,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12918923,"byte_end":12918926,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12918927,"byte_end":12919008,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919009,"byte_end":12919012,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919013,"byte_end":12919052,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919053,"byte_end":12919086,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919087,"byte_end":12919116,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919117,"byte_end":12919120,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919121,"byte_end":12919128,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919129,"byte_end":12919147,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919148,"byte_end":12919178,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919179,"byte_end":12919203,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919204,"byte_end":12919211,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919212,"byte_end":12919241,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919242,"byte_end":12919294,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919295,"byte_end":12919298,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919299,"byte_end":12919317,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919318,"byte_end":12919335,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919336,"byte_end":12919416,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919417,"byte_end":12919451,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919452,"byte_end":12919505,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919506,"byte_end":12919517,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919518,"byte_end":12919525,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919526,"byte_end":12919531,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(core_threads = 1)]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919532,"byte_end":12919570,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919571,"byte_end":12919624,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919625,"byte_end":12919683,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919684,"byte_end":12919763,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919764,"byte_end":12919776,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919777,"byte_end":12919784,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919785,"byte_end":12919792,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919793,"byte_end":12919796,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919997,"byte_end":12920000,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919924,"byte_end":12919985,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921312,"byte_end":12921319,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12920715,"byte_end":12920750,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12920751,"byte_end":12920754,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12920755,"byte_end":12920824,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12920825,"byte_end":12920904,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12920905,"byte_end":12920977,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12920978,"byte_end":12921002,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921003,"byte_end":12921006,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921007,"byte_end":12921075,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921076,"byte_end":12921153,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921154,"byte_end":12921215,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921216,"byte_end":12921219,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921220,"byte_end":12921256,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921257,"byte_end":12921301,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921367,"byte_end":12921371,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921326,"byte_end":12921357,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922137,"byte_end":12922142,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921378,"byte_end":12921430,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921435,"byte_end":12921438,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921443,"byte_end":12921512,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921517,"byte_end":12921587,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921592,"byte_end":12921638,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921643,"byte_end":12921646,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921651,"byte_end":12921727,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921732,"byte_end":12921807,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921812,"byte_end":12921887,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921892,"byte_end":12921932,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921937,"byte_end":12921940,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12921945,"byte_end":12922019,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922024,"byte_end":12922070,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922075,"byte_end":12922078,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922083,"byte_end":12922127,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925078,"byte_end":12925084,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922166,"byte_end":12922231,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922236,"byte_end":12922239,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922244,"byte_end":12922318,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922323,"byte_end":12922395,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922400,"byte_end":12922473,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922478,"byte_end":12922521,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922526,"byte_end":12922529,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922534,"byte_end":12922607,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922612,"byte_end":12922675,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922680,"byte_end":12922755,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922760,"byte_end":12922835,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922840,"byte_end":12922863,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922868,"byte_end":12922871,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922876,"byte_end":12922948,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12922953,"byte_end":12923027,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923032,"byte_end":12923102,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923107,"byte_end":12923110,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923115,"byte_end":12923183,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923188,"byte_end":12923259,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923264,"byte_end":12923344,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923349,"byte_end":12923361,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923366,"byte_end":12923369,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923374,"byte_end":12923444,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923449,"byte_end":12923524,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923529,"byte_end":12923566,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923571,"byte_end":12923574,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923579,"byte_end":12923615,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923620,"byte_end":12923664,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923669,"byte_end":12923672,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923677,"byte_end":12923700,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923705,"byte_end":12923708,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923713,"byte_end":12923787,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923792,"byte_end":12923866,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923871,"byte_end":12923924,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923929,"byte_end":12923932,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12923937,"byte_end":12924008,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924013,"byte_end":12924083,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924088,"byte_end":12924104,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924109,"byte_end":12924112,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924117,"byte_end":12924130,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924135,"byte_end":12924153,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924158,"byte_end":12924163,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924168,"byte_end":12924194,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924199,"byte_end":12924236,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924241,"byte_end":12924246,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924251,"byte_end":12924272,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924277,"byte_end":12924282,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924287,"byte_end":12924317,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924322,"byte_end":12924336,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924341,"byte_end":12924372,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924377,"byte_end":12924410,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924415,"byte_end":12924418,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924423,"byte_end":12924516,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924521,"byte_end":12924539,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924544,"byte_end":12924547,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924552,"byte_end":12924624,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924629,"byte_end":12924689,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924694,"byte_end":12924746,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924751,"byte_end":12924813,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924818,"byte_end":12924885,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924890,"byte_end":12924893,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924898,"byte_end":12924926,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924931,"byte_end":12924940,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924945,"byte_end":12924950,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924955,"byte_end":12924962,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924967,"byte_end":12924970,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12924975,"byte_end":12925044,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925049,"byte_end":12925070,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925943,"byte_end":12925953,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925165,"byte_end":12925237,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925242,"byte_end":12925291,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925296,"byte_end":12925299,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925304,"byte_end":12925372,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925377,"byte_end":12925444,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925449,"byte_end":12925517,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925522,"byte_end":12925570,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925575,"byte_end":12925578,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925583,"byte_end":12925651,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925656,"byte_end":12925731,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925736,"byte_end":12925811,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925816,"byte_end":12925888,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12925893,"byte_end":12925935,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12927562,"byte_end":12927568,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12926371,"byte_end":12926451,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12926456,"byte_end":12926532,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12926537,"byte_end":12926540,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12926545,"byte_end":12926620,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12926625,"byte_end":12926695,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12926700,"byte_end":12926771,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12926776,"byte_end":12926848,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12926853,"byte_end":12926911,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12926916,"byte_end":12926919,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12926924,"byte_end":12926993,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12926998,"byte_end":12927073,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12927078,"byte_end":12927154,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12927159,"byte_end":12927181,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12927186,"byte_end":12927189,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12927194,"byte_end":12927267,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12927272,"byte_end":12927345,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12927350,"byte_end":12927426,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12927431,"byte_end":12927434,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12927439,"byte_end":12927476,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12927481,"byte_end":12927513,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":12927518,"byte_end":12927554,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12927902,"byte_end":12927909,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12927747,"byte_end":12927819,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12927820,"byte_end":12927840,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12927841,"byte_end":12927844,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12927845,"byte_end":12927891,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12928174,"byte_end":12928179,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12927922,"byte_end":12927954,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12927959,"byte_end":12927962,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12927967,"byte_end":12928044,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12928049,"byte_end":12928105,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12928110,"byte_end":12928113,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12928118,"byte_end":12928164,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12928530,"byte_end":12928536,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12928203,"byte_end":12928248,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12928253,"byte_end":12928256,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12928261,"byte_end":12928335,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12928340,"byte_end":12928420,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12928425,"byte_end":12928463,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12928468,"byte_end":12928471,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":12928476,"byte_end":12928522,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12929685,"byte_end":12929691,"line_start":31,"line_end":31,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":982}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12930127,"byte_end":12930129,"line_start":48,"line_end":48,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12930140,"byte_end":12930145,"line_start":49,"line_end":49,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931935,"byte_end":12931938,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12930593,"byte_end":12930673,"line_start":71,"line_end":71,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12930678,"byte_end":12930759,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12930764,"byte_end":12930767,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12930772,"byte_end":12930847,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12930852,"byte_end":12930922,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12930927,"byte_end":12930996,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931001,"byte_end":12931073,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931078,"byte_end":12931136,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931141,"byte_end":12931144,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931149,"byte_end":12931220,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931225,"byte_end":12931302,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931307,"byte_end":12931383,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931388,"byte_end":12931410,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931415,"byte_end":12931418,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931423,"byte_end":12931496,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931501,"byte_end":12931574,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931579,"byte_end":12931655,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931660,"byte_end":12931663,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931668,"byte_end":12931705,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931710,"byte_end":12931742,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931747,"byte_end":12931784,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931789,"byte_end":12931827,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12931832,"byte_end":12931923,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933486,"byte_end":12933499,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932090,"byte_end":12932170,"line_start":100,"line_end":100,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932175,"byte_end":12932256,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932261,"byte_end":12932310,"line_start":102,"line_end":102,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932315,"byte_end":12932318,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932323,"byte_end":12932398,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932403,"byte_end":12932473,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932478,"byte_end":12932547,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932552,"byte_end":12932624,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932629,"byte_end":12932687,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932692,"byte_end":12932695,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932700,"byte_end":12932771,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932776,"byte_end":12932853,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932858,"byte_end":12932934,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932939,"byte_end":12932961,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932966,"byte_end":12932969,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12932974,"byte_end":12933047,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933052,"byte_end":12933125,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933130,"byte_end":12933206,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933211,"byte_end":12933214,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933219,"byte_end":12933256,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933261,"byte_end":12933293,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933298,"byte_end":12933335,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933340,"byte_end":12933378,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933383,"byte_end":12933474,"line_start":123,"line_end":123,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935368,"byte_end":12935378,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933790,"byte_end":12933870,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933875,"byte_end":12933956,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933961,"byte_end":12933964,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933969,"byte_end":12934044,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934049,"byte_end":12934119,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934124,"byte_end":12934195,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934200,"byte_end":12934272,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934277,"byte_end":12934335,"line_start":142,"line_end":142,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934340,"byte_end":12934343,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934348,"byte_end":12934419,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934424,"byte_end":12934501,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934506,"byte_end":12934582,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934587,"byte_end":12934609,"line_start":147,"line_end":147,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934614,"byte_end":12934617,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934622,"byte_end":12934701,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934706,"byte_end":12934783,"line_start":150,"line_end":150,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934788,"byte_end":12934791,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934796,"byte_end":12934869,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934874,"byte_end":12934947,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12934952,"byte_end":12935028,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935033,"byte_end":12935036,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935041,"byte_end":12935078,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935083,"byte_end":12935115,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935120,"byte_end":12935158,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935163,"byte_end":12935201,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935206,"byte_end":12935260,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935265,"byte_end":12935356,"line_start":161,"line_end":161,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936067,"byte_end":12936074,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935784,"byte_end":12935847,"line_start":177,"line_end":177,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935852,"byte_end":12935865,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935870,"byte_end":12935873,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935878,"byte_end":12935953,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12935958,"byte_end":12936028,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936033,"byte_end":12936055,"line_start":182,"line_end":182,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936435,"byte_end":12936442,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936144,"byte_end":12936215,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936220,"byte_end":12936233,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936238,"byte_end":12936241,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936246,"byte_end":12936321,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936326,"byte_end":12936396,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936401,"byte_end":12936423,"line_start":192,"line_end":192,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936775,"byte_end":12936780,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936524,"byte_end":12936582,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936587,"byte_end":12936600,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936605,"byte_end":12936608,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936613,"byte_end":12936687,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936692,"byte_end":12936763,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937112,"byte_end":12937121,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936853,"byte_end":12936919,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936924,"byte_end":12936937,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936942,"byte_end":12936945,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12936950,"byte_end":12937024,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937029,"byte_end":12937100,"line_start":210,"line_end":210,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937261,"byte_end":12937272,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937206,"byte_end":12937249,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937599,"byte_end":12937609,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937334,"byte_end":12937397,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937402,"byte_end":12937405,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937410,"byte_end":12937485,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937490,"byte_end":12937560,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937565,"byte_end":12937587,"line_start":224,"line_end":224,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12938004,"byte_end":12938014,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937682,"byte_end":12937756,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937761,"byte_end":12937802,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937807,"byte_end":12937810,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937815,"byte_end":12937890,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937895,"byte_end":12937965,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12937970,"byte_end":12937992,"line_start":234,"line_end":234,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942376,"byte_end":12942387,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942101,"byte_end":12942172,"line_start":390,"line_end":390,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942173,"byte_end":12942245,"line_start":391,"line_end":391,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942246,"byte_end":12942306,"line_start":392,"line_end":392,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942307,"byte_end":12942310,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942311,"byte_end":12942347,"line_start":394,"line_end":394,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942473,"byte_end":12942475,"line_start":398,"line_end":398,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942400,"byte_end":12942464,"line_start":397,"line_end":397,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942507,"byte_end":12942512,"line_start":401,"line_end":401,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942485,"byte_end":12942498,"line_start":400,"line_end":400,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942577,"byte_end":12942585,"line_start":404,"line_end":404,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942522,"byte_end":12942568,"line_start":403,"line_end":403,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942672,"byte_end":12942681,"line_start":407,"line_end":407,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942602,"byte_end":12942663,"line_start":406,"line_end":406,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942914,"byte_end":12942917,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942862,"byte_end":12942902,"line_start":415,"line_end":415,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12943646,"byte_end":12943656,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":896}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12944114,"byte_end":12944117,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12944046,"byte_end":12944102,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12944434,"byte_end":12944447,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12944318,"byte_end":12944400,"line_start":54,"line_end":54,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12944405,"byte_end":12944422,"line_start":55,"line_end":55,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945090,"byte_end":12945097,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12944803,"byte_end":12944866,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12944871,"byte_end":12944888,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12944893,"byte_end":12944896,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12944901,"byte_end":12944976,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12944981,"byte_end":12945051,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945056,"byte_end":12945078,"line_start":75,"line_end":75,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945448,"byte_end":12945455,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945153,"byte_end":12945224,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945229,"byte_end":12945246,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945251,"byte_end":12945254,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945259,"byte_end":12945334,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945339,"byte_end":12945409,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945414,"byte_end":12945436,"line_start":85,"line_end":85,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945792,"byte_end":12945802,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945523,"byte_end":12945590,"line_start":90,"line_end":90,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945595,"byte_end":12945598,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945603,"byte_end":12945678,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945683,"byte_end":12945753,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945758,"byte_end":12945780,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945917,"byte_end":12945924,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945855,"byte_end":12945905,"line_start":99,"line_end":99,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12946053,"byte_end":12946064,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12945983,"byte_end":12946041,"line_start":104,"line_end":104,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12946190,"byte_end":12946201,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12946135,"byte_end":12946178,"line_start":109,"line_end":109,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12952117,"byte_end":12952128,"line_start":25,"line_end":25,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":810}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12952552,"byte_end":12952555,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12952483,"byte_end":12952540,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953080,"byte_end":12953087,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12952792,"byte_end":12952855,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12952860,"byte_end":12952878,"line_start":59,"line_end":59,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12952883,"byte_end":12952886,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12952891,"byte_end":12952966,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12952971,"byte_end":12953041,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953046,"byte_end":12953068,"line_start":63,"line_end":63,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953439,"byte_end":12953446,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953143,"byte_end":12953214,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953219,"byte_end":12953237,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953242,"byte_end":12953245,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953250,"byte_end":12953325,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953330,"byte_end":12953400,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953405,"byte_end":12953427,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953784,"byte_end":12953794,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953514,"byte_end":12953582,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953587,"byte_end":12953590,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953595,"byte_end":12953670,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953675,"byte_end":12953745,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953750,"byte_end":12953772,"line_start":82,"line_end":82,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953909,"byte_end":12953916,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953847,"byte_end":12953897,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12954045,"byte_end":12954056,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12953975,"byte_end":12954033,"line_start":92,"line_end":92,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":712},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":560},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":562},{"krate":0,"index":569},{"krate":0,"index":573},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960391,"byte_end":12960443,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960444,"byte_end":12960447,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960448,"byte_end":12960518,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960519,"byte_end":12960577,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960578,"byte_end":12960650,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960651,"byte_end":12960721,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960722,"byte_end":12960789,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960790,"byte_end":12960793,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960794,"byte_end":12960815,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960816,"byte_end":12960819,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960820,"byte_end":12960895,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960896,"byte_end":12960967,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12960968,"byte_end":12961039,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961040,"byte_end":12961110,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961111,"byte_end":12961151,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961152,"byte_end":12961155,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961156,"byte_end":12961163,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961164,"byte_end":12961207,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961208,"byte_end":12961266,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961267,"byte_end":12961270,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961271,"byte_end":12961326,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961327,"byte_end":12961369,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961370,"byte_end":12961375,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961376,"byte_end":12961428,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961429,"byte_end":12961434,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961435,"byte_end":12961457,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961458,"byte_end":12961465,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961466,"byte_end":12961469,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961470,"byte_end":12961542,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961543,"byte_end":12961614,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961615,"byte_end":12961634,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961635,"byte_end":12961638,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961639,"byte_end":12961650,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961651,"byte_end":12961700,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961701,"byte_end":12961750,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961751,"byte_end":12961800,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961801,"byte_end":12961808,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961809,"byte_end":12961812,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961813,"byte_end":12961851,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961852,"byte_end":12961855,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961856,"byte_end":12961863,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961864,"byte_end":12961890,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961891,"byte_end":12961949,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961950,"byte_end":12961953,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961954,"byte_end":12961979,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12961980,"byte_end":12962001,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962002,"byte_end":12962005,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962006,"byte_end":12962082,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962083,"byte_end":12962092,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962093,"byte_end":12962135,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962136,"byte_end":12962141,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962142,"byte_end":12962215,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962216,"byte_end":12962263,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962264,"byte_end":12962267,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962268,"byte_end":12962305,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962306,"byte_end":12962320,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962321,"byte_end":12962326,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962327,"byte_end":12962334,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962335,"byte_end":12962338,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962339,"byte_end":12962381,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962382,"byte_end":12962385,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962386,"byte_end":12962397,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962398,"byte_end":12962437,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962438,"byte_end":12962477,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962478,"byte_end":12962517,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962518,"byte_end":12962525,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962526,"byte_end":12962529,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962530,"byte_end":12962544,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962545,"byte_end":12962548,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962549,"byte_end":12962624,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962625,"byte_end":12962698,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962699,"byte_end":12962765,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962766,"byte_end":12962835,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962836,"byte_end":12962901,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962902,"byte_end":12962905,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962906,"byte_end":12962922,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962923,"byte_end":12962926,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12962927,"byte_end":12963003,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963004,"byte_end":12963045,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963046,"byte_end":12963049,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963050,"byte_end":12963057,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963058,"byte_end":12963089,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963090,"byte_end":12963140,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963141,"byte_end":12963182,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963183,"byte_end":12963218,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963219,"byte_end":12963267,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963268,"byte_end":12963299,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963300,"byte_end":12963348,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963349,"byte_end":12963398,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963399,"byte_end":12963421,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963422,"byte_end":12963429,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963430,"byte_end":12963452,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963453,"byte_end":12963460,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963461,"byte_end":12963464,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963465,"byte_end":12963513,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963514,"byte_end":12963517,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963518,"byte_end":12963529,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963530,"byte_end":12963582,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963583,"byte_end":12963648,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963649,"byte_end":12963714,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963715,"byte_end":12963780,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963781,"byte_end":12963788,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963789,"byte_end":12963792,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963793,"byte_end":12963869,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963870,"byte_end":12963944,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12963945,"byte_end":12964017,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964018,"byte_end":12964094,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964095,"byte_end":12964137,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964138,"byte_end":12964141,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964142,"byte_end":12964158,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964159,"byte_end":12964162,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964163,"byte_end":12964238,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964239,"byte_end":12964280,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964281,"byte_end":12964284,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964285,"byte_end":12964292,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964293,"byte_end":12964324,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964325,"byte_end":12964375,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964376,"byte_end":12964417,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964418,"byte_end":12964453,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964454,"byte_end":12964502,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964503,"byte_end":12964534,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964535,"byte_end":12964583,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964584,"byte_end":12964643,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964644,"byte_end":12964666,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964667,"byte_end":12964674,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964675,"byte_end":12964697,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964698,"byte_end":12964705,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964706,"byte_end":12964709,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964710,"byte_end":12964758,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964759,"byte_end":12964762,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964763,"byte_end":12964774,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964775,"byte_end":12964824,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964825,"byte_end":12964879,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964880,"byte_end":12964934,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964935,"byte_end":12964989,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964990,"byte_end":12964997,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12964998,"byte_end":12965001,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965002,"byte_end":12965075,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965076,"byte_end":12965143,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965144,"byte_end":12965147,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965148,"byte_end":12965164,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965165,"byte_end":12965168,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965169,"byte_end":12965245,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965246,"byte_end":12965318,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965319,"byte_end":12965358,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965359,"byte_end":12965362,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965363,"byte_end":12965370,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965371,"byte_end":12965402,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965403,"byte_end":12965453,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965454,"byte_end":12965495,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965496,"byte_end":12965531,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965532,"byte_end":12965580,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965581,"byte_end":12965612,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965613,"byte_end":12965660,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965661,"byte_end":12965681,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965682,"byte_end":12965704,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965705,"byte_end":12965712,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965713,"byte_end":12965735,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965736,"byte_end":12965743,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965744,"byte_end":12965747,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965748,"byte_end":12965796,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965797,"byte_end":12965800,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965801,"byte_end":12965812,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965813,"byte_end":12965865,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965866,"byte_end":12965931,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965932,"byte_end":12965997,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12965998,"byte_end":12966063,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966064,"byte_end":12966071,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966072,"byte_end":12966075,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966076,"byte_end":12966148,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966149,"byte_end":12966224,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966225,"byte_end":12966297,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966298,"byte_end":12966374,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966375,"byte_end":12966448,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966449,"byte_end":12966452,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966453,"byte_end":12966469,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966470,"byte_end":12966473,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966474,"byte_end":12966548,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966549,"byte_end":12966616,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966617,"byte_end":12966620,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966621,"byte_end":12966628,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966629,"byte_end":12966660,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966661,"byte_end":12966711,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966712,"byte_end":12966753,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966754,"byte_end":12966789,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966790,"byte_end":12966838,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966839,"byte_end":12966870,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966871,"byte_end":12966919,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966920,"byte_end":12966940,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966941,"byte_end":12966963,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966964,"byte_end":12966971,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966972,"byte_end":12966994,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12966995,"byte_end":12967002,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967003,"byte_end":12967006,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967007,"byte_end":12967055,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967056,"byte_end":12967059,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967060,"byte_end":12967071,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967072,"byte_end":12967098,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967099,"byte_end":12967144,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967145,"byte_end":12967190,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967191,"byte_end":12967236,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967237,"byte_end":12967240,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967241,"byte_end":12967269,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967270,"byte_end":12967315,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967316,"byte_end":12967361,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967362,"byte_end":12967407,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967408,"byte_end":12967415,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967416,"byte_end":12967419,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967420,"byte_end":12967492,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967493,"byte_end":12967569,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967570,"byte_end":12967640,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967641,"byte_end":12967710,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967711,"byte_end":12967748,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967749,"byte_end":12967752,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967753,"byte_end":12967827,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967828,"byte_end":12967882,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967883,"byte_end":12967886,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967887,"byte_end":12967903,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967904,"byte_end":12967907,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967908,"byte_end":12967981,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12967982,"byte_end":12968058,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968059,"byte_end":12968133,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968134,"byte_end":12968147,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968148,"byte_end":12968151,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968152,"byte_end":12968159,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968160,"byte_end":12968191,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968192,"byte_end":12968242,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968243,"byte_end":12968284,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968285,"byte_end":12968320,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968321,"byte_end":12968370,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968371,"byte_end":12968402,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968403,"byte_end":12968451,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968452,"byte_end":12968496,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968497,"byte_end":12968519,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968520,"byte_end":12968527,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968528,"byte_end":12968550,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968551,"byte_end":12968558,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968559,"byte_end":12968562,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968563,"byte_end":12968611,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968612,"byte_end":12968615,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968616,"byte_end":12968627,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968628,"byte_end":12968654,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968655,"byte_end":12968705,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968706,"byte_end":12968756,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968757,"byte_end":12968807,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968808,"byte_end":12968811,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968812,"byte_end":12968832,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968833,"byte_end":12968863,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968864,"byte_end":12968894,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968895,"byte_end":12968925,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968926,"byte_end":12968933,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968934,"byte_end":12968937,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12968938,"byte_end":12969011,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969012,"byte_end":12969087,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969088,"byte_end":12969160,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969161,"byte_end":12969199,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969200,"byte_end":12969203,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969204,"byte_end":12969278,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969279,"byte_end":12969355,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969356,"byte_end":12969429,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969430,"byte_end":12969458,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969459,"byte_end":12969462,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969463,"byte_end":12969479,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969480,"byte_end":12969483,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969484,"byte_end":12969557,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969558,"byte_end":12969634,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969635,"byte_end":12969709,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969710,"byte_end":12969782,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969783,"byte_end":12969794,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969795,"byte_end":12969798,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969799,"byte_end":12969806,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969807,"byte_end":12969838,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969839,"byte_end":12969889,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969890,"byte_end":12969931,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969932,"byte_end":12969967,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12969968,"byte_end":12970017,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970018,"byte_end":12970049,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970050,"byte_end":12970115,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970116,"byte_end":12970136,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970137,"byte_end":12970159,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970160,"byte_end":12970167,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970168,"byte_end":12970175,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970176,"byte_end":12970179,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970180,"byte_end":12970228,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970229,"byte_end":12970232,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970233,"byte_end":12970244,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970245,"byte_end":12970271,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970272,"byte_end":12970322,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970323,"byte_end":12970373,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970374,"byte_end":12970424,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970425,"byte_end":12970428,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970429,"byte_end":12970449,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970450,"byte_end":12970480,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970481,"byte_end":12970511,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970512,"byte_end":12970542,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970543,"byte_end":12970550,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970551,"byte_end":12970554,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970555,"byte_end":12970628,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970629,"byte_end":12970703,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970704,"byte_end":12970778,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970779,"byte_end":12970852,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970853,"byte_end":12970929,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970930,"byte_end":12970963,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970964,"byte_end":12970967,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970968,"byte_end":12970982,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970983,"byte_end":12970986,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12970987,"byte_end":12971062,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971063,"byte_end":12971135,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971136,"byte_end":12971204,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971205,"byte_end":12971281,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971282,"byte_end":12971323,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971324,"byte_end":12971327,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971328,"byte_end":12971398,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971399,"byte_end":12971417,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971418,"byte_end":12971421,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971422,"byte_end":12971429,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971430,"byte_end":12971462,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971463,"byte_end":12971513,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971514,"byte_end":12971558,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971559,"byte_end":12971572,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971573,"byte_end":12971608,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971609,"byte_end":12971640,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971641,"byte_end":12971664,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971665,"byte_end":12971672,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971673,"byte_end":12971695,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971696,"byte_end":12971703,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971704,"byte_end":12971707,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971708,"byte_end":12971758,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971759,"byte_end":12971762,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971763,"byte_end":12971774,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971775,"byte_end":12971808,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971809,"byte_end":12971842,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971843,"byte_end":12971876,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971877,"byte_end":12971884,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971885,"byte_end":12971888,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971889,"byte_end":12971969,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"/ [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12971970,"byte_end":12972012,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"/ [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12972013,"byte_end":12972057,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"/ [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12972058,"byte_end":12972103,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12972104,"byte_end":12972151,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12972152,"byte_end":12972190,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"/ [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12972191,"byte_end":12972261,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12972823,"byte_end":12972830,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12972505,"byte_end":12972560,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12972561,"byte_end":12972564,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12972565,"byte_end":12972640,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12972641,"byte_end":12972721,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12972722,"byte_end":12972781,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12973501,"byte_end":12973526,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":561}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12973416,"byte_end":12973489,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12973871,"byte_end":12973891,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12973547,"byte_end":12973621,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12973622,"byte_end":12973625,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12973626,"byte_end":12973705,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12973706,"byte_end":12973749,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12973750,"byte_end":12973753,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12973754,"byte_end":12973807,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12973808,"byte_end":12973811,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12973812,"byte_end":12973842,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974235,"byte_end":12974238,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974144,"byte_end":12974223,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974465,"byte_end":12974472,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974362,"byte_end":12974437,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974442,"byte_end":12974453,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974694,"byte_end":12974710,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974522,"byte_end":12974563,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974568,"byte_end":12974571,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974576,"byte_end":12974649,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974654,"byte_end":12974682,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12975131,"byte_end":12975151,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974775,"byte_end":12974809,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974814,"byte_end":12974817,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974822,"byte_end":12974892,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974897,"byte_end":12974972,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974977,"byte_end":12975049,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12975054,"byte_end":12975119,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980427,"byte_end":12980430,"line_start":621,"line_end":621,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12979885,"byte_end":12979960,"line_start":602,"line_end":602,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12979965,"byte_end":12979976,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12979981,"byte_end":12979984,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12979989,"byte_end":12980003,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980008,"byte_end":12980011,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980016,"byte_end":12980023,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980028,"byte_end":12980059,"line_start":608,"line_end":608,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980064,"byte_end":12980112,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980117,"byte_end":12980120,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980125,"byte_end":12980166,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980171,"byte_end":12980206,"line_start":612,"line_end":612,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980211,"byte_end":12980242,"line_start":613,"line_end":613,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980247,"byte_end":12980278,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980283,"byte_end":12980312,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980317,"byte_end":12980337,"line_start":616,"line_end":616,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980342,"byte_end":12980364,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980369,"byte_end":12980376,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980381,"byte_end":12980403,"line_start":619,"line_end":619,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12980408,"byte_end":12980415,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981615,"byte_end":12981625,"line_start":662,"line_end":662,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981094,"byte_end":12981143,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981148,"byte_end":12981151,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981156,"byte_end":12981188,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981193,"byte_end":12981196,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981201,"byte_end":12981269,"line_start":647,"line_end":647,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981274,"byte_end":12981277,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981282,"byte_end":12981296,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981301,"byte_end":12981304,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981309,"byte_end":12981316,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981321,"byte_end":12981352,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981357,"byte_end":12981405,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981410,"byte_end":12981413,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981418,"byte_end":12981459,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981464,"byte_end":12981499,"line_start":656,"line_end":656,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981504,"byte_end":12981525,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981530,"byte_end":12981552,"line_start":658,"line_end":658,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981557,"byte_end":12981564,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981569,"byte_end":12981591,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981596,"byte_end":12981603,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982257,"byte_end":12982270,"line_start":686,"line_end":686,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981724,"byte_end":12981776,"line_start":667,"line_end":667,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981781,"byte_end":12981784,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981789,"byte_end":12981827,"line_start":669,"line_end":669,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981832,"byte_end":12981835,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981840,"byte_end":12981908,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981913,"byte_end":12981916,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981921,"byte_end":12981935,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981940,"byte_end":12981943,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981948,"byte_end":12981955,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981960,"byte_end":12981991,"line_start":676,"line_end":676,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12981996,"byte_end":12982044,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982049,"byte_end":12982052,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982057,"byte_end":12982098,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982103,"byte_end":12982138,"line_start":680,"line_end":680,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982143,"byte_end":12982167,"line_start":681,"line_end":681,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982172,"byte_end":12982194,"line_start":682,"line_end":682,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982199,"byte_end":12982206,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982211,"byte_end":12982233,"line_start":684,"line_end":684,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982238,"byte_end":12982245,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982903,"byte_end":12982916,"line_start":710,"line_end":710,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982370,"byte_end":12982422,"line_start":691,"line_end":691,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982427,"byte_end":12982430,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982435,"byte_end":12982473,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982478,"byte_end":12982481,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982486,"byte_end":12982554,"line_start":695,"line_end":695,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982559,"byte_end":12982562,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982567,"byte_end":12982581,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982586,"byte_end":12982589,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982594,"byte_end":12982601,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982606,"byte_end":12982637,"line_start":700,"line_end":700,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982642,"byte_end":12982690,"line_start":701,"line_end":701,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982695,"byte_end":12982698,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982703,"byte_end":12982744,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982749,"byte_end":12982784,"line_start":704,"line_end":704,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982789,"byte_end":12982813,"line_start":705,"line_end":705,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982818,"byte_end":12982840,"line_start":706,"line_end":706,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982845,"byte_end":12982852,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982857,"byte_end":12982879,"line_start":708,"line_end":708,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12982884,"byte_end":12982891,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983997,"byte_end":12984013,"line_start":744,"line_end":744,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983085,"byte_end":12983114,"line_start":718,"line_end":718,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983119,"byte_end":12983122,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983127,"byte_end":12983199,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983204,"byte_end":12983229,"line_start":721,"line_end":721,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983234,"byte_end":12983237,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983242,"byte_end":12983314,"line_start":723,"line_end":723,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983319,"byte_end":12983388,"line_start":724,"line_end":724,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983393,"byte_end":12983466,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983471,"byte_end":12983483,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983488,"byte_end":12983491,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983496,"byte_end":12983571,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983576,"byte_end":12983637,"line_start":729,"line_end":729,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983642,"byte_end":12983645,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983650,"byte_end":12983664,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983669,"byte_end":12983672,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983677,"byte_end":12983684,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983689,"byte_end":12983720,"line_start":734,"line_end":734,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983725,"byte_end":12983773,"line_start":735,"line_end":735,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983778,"byte_end":12983781,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983786,"byte_end":12983827,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983832,"byte_end":12983867,"line_start":738,"line_end":738,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983872,"byte_end":12983907,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983912,"byte_end":12983934,"line_start":740,"line_end":740,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983939,"byte_end":12983946,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983951,"byte_end":12983973,"line_start":742,"line_end":742,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12983978,"byte_end":12983985,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984674,"byte_end":12984693,"line_start":768,"line_end":768,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984110,"byte_end":12984173,"line_start":749,"line_end":749,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984178,"byte_end":12984181,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984186,"byte_end":12984237,"line_start":751,"line_end":751,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984242,"byte_end":12984245,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984250,"byte_end":12984318,"line_start":753,"line_end":753,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984323,"byte_end":12984326,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984331,"byte_end":12984345,"line_start":755,"line_end":755,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984350,"byte_end":12984353,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984358,"byte_end":12984365,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984370,"byte_end":12984401,"line_start":758,"line_end":758,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984406,"byte_end":12984454,"line_start":759,"line_end":759,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984459,"byte_end":12984462,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984467,"byte_end":12984508,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984513,"byte_end":12984548,"line_start":762,"line_end":762,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984553,"byte_end":12984584,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984589,"byte_end":12984611,"line_start":764,"line_end":764,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984616,"byte_end":12984623,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984628,"byte_end":12984650,"line_start":766,"line_end":766,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984655,"byte_end":12984662,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985352,"byte_end":12985371,"line_start":791,"line_end":791,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984862,"byte_end":12984928,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984933,"byte_end":12984936,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12984941,"byte_end":12984996,"line_start":776,"line_end":776,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985001,"byte_end":12985004,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985009,"byte_end":12985023,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985028,"byte_end":12985031,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985036,"byte_end":12985043,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985048,"byte_end":12985079,"line_start":781,"line_end":781,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985084,"byte_end":12985132,"line_start":782,"line_end":782,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985137,"byte_end":12985140,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985145,"byte_end":12985186,"line_start":784,"line_end":784,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985191,"byte_end":12985226,"line_start":785,"line_end":785,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985231,"byte_end":12985262,"line_start":786,"line_end":786,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985267,"byte_end":12985289,"line_start":787,"line_end":787,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985294,"byte_end":12985301,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985306,"byte_end":12985328,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985333,"byte_end":12985340,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985925,"byte_end":12985942,"line_start":812,"line_end":812,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985474,"byte_end":12985547,"line_start":796,"line_end":796,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985552,"byte_end":12985570,"line_start":797,"line_end":797,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985575,"byte_end":12985578,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985583,"byte_end":12985597,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985602,"byte_end":12985605,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985610,"byte_end":12985617,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985622,"byte_end":12985653,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985658,"byte_end":12985706,"line_start":803,"line_end":803,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985711,"byte_end":12985714,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985719,"byte_end":12985760,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985765,"byte_end":12985800,"line_start":806,"line_end":806,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985805,"byte_end":12985835,"line_start":807,"line_end":807,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985840,"byte_end":12985862,"line_start":808,"line_end":808,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985867,"byte_end":12985874,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985879,"byte_end":12985901,"line_start":810,"line_end":810,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12985906,"byte_end":12985913,"line_start":811,"line_end":811,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986592,"byte_end":12986600,"line_start":836,"line_end":836,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986043,"byte_end":12986106,"line_start":817,"line_end":817,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986111,"byte_end":12986114,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986119,"byte_end":12986180,"line_start":819,"line_end":819,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986185,"byte_end":12986188,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986193,"byte_end":12986247,"line_start":821,"line_end":821,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986252,"byte_end":12986255,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986260,"byte_end":12986274,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986279,"byte_end":12986282,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986287,"byte_end":12986294,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986299,"byte_end":12986330,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986335,"byte_end":12986383,"line_start":827,"line_end":827,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986388,"byte_end":12986391,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986396,"byte_end":12986437,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986442,"byte_end":12986477,"line_start":830,"line_end":830,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986482,"byte_end":12986502,"line_start":831,"line_end":831,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986507,"byte_end":12986529,"line_start":832,"line_end":832,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986534,"byte_end":12986541,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986546,"byte_end":12986568,"line_start":834,"line_end":834,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986573,"byte_end":12986580,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987120,"byte_end":12987129,"line_start":856,"line_end":856,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986698,"byte_end":12986761,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986766,"byte_end":12986769,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986774,"byte_end":12986788,"line_start":843,"line_end":843,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986793,"byte_end":12986796,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986801,"byte_end":12986808,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986813,"byte_end":12986861,"line_start":846,"line_end":846,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986866,"byte_end":12986887,"line_start":847,"line_end":847,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986892,"byte_end":12986927,"line_start":848,"line_end":848,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986932,"byte_end":12986963,"line_start":849,"line_end":849,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12986968,"byte_end":12986999,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987004,"byte_end":12987033,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987038,"byte_end":12987058,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987063,"byte_end":12987084,"line_start":853,"line_end":853,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987089,"byte_end":12987096,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987101,"byte_end":12987108,"line_start":855,"line_end":855,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987785,"byte_end":12987793,"line_start":881,"line_end":881,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987281,"byte_end":12987334,"line_start":863,"line_end":863,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987339,"byte_end":12987342,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987347,"byte_end":12987361,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987366,"byte_end":12987369,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987374,"byte_end":12987381,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987386,"byte_end":12987417,"line_start":868,"line_end":868,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987422,"byte_end":12987470,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987475,"byte_end":12987478,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987483,"byte_end":12987524,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987529,"byte_end":12987564,"line_start":872,"line_end":872,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987569,"byte_end":12987600,"line_start":873,"line_end":873,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987605,"byte_end":12987636,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987641,"byte_end":12987670,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987675,"byte_end":12987695,"line_start":876,"line_end":876,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987700,"byte_end":12987722,"line_start":877,"line_end":877,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987727,"byte_end":12987734,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987739,"byte_end":12987761,"line_start":879,"line_end":879,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987766,"byte_end":12987773,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988366,"byte_end":12988375,"line_start":902,"line_end":902,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12987957,"byte_end":12988011,"line_start":888,"line_end":888,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988016,"byte_end":12988019,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988024,"byte_end":12988038,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988043,"byte_end":12988046,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988051,"byte_end":12988058,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988063,"byte_end":12988095,"line_start":893,"line_end":893,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988100,"byte_end":12988150,"line_start":894,"line_end":894,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988155,"byte_end":12988199,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988204,"byte_end":12988239,"line_start":896,"line_end":896,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988244,"byte_end":12988275,"line_start":897,"line_end":897,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988280,"byte_end":12988303,"line_start":898,"line_end":898,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988308,"byte_end":12988315,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988320,"byte_end":12988342,"line_start":900,"line_end":900,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988347,"byte_end":12988354,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988984,"byte_end":12988994,"line_start":924,"line_end":924,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988536,"byte_end":12988585,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988590,"byte_end":12988593,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988598,"byte_end":12988612,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988617,"byte_end":12988620,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988625,"byte_end":12988632,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988637,"byte_end":12988682,"line_start":914,"line_end":914,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988687,"byte_end":12988737,"line_start":915,"line_end":915,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988742,"byte_end":12988798,"line_start":916,"line_end":916,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988803,"byte_end":12988816,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988821,"byte_end":12988856,"line_start":918,"line_end":918,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988861,"byte_end":12988892,"line_start":919,"line_end":919,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988897,"byte_end":12988921,"line_start":920,"line_end":920,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988926,"byte_end":12988933,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988938,"byte_end":12988960,"line_start":922,"line_end":922,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12988965,"byte_end":12988972,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12990373,"byte_end":12990383,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12990130,"byte_end":12990217,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12990218,"byte_end":12990221,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12990222,"byte_end":12990260,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12990261,"byte_end":12990299,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991483,"byte_end":12991486,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991064,"byte_end":12991124,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991129,"byte_end":12991132,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991137,"byte_end":12991147,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991152,"byte_end":12991155,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991160,"byte_end":12991232,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991237,"byte_end":12991310,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991315,"byte_end":12991382,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991387,"byte_end":12991390,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991395,"byte_end":12991471,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992617,"byte_end":12992636,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991644,"byte_end":12991704,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991709,"byte_end":12991712,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991717,"byte_end":12991780,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991785,"byte_end":12991863,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991868,"byte_end":12991935,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991940,"byte_end":12992012,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992017,"byte_end":12992087,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992092,"byte_end":12992115,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992120,"byte_end":12992123,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992128,"byte_end":12992138,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992143,"byte_end":12992146,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992151,"byte_end":12992226,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992231,"byte_end":12992304,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992309,"byte_end":12992385,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992390,"byte_end":12992463,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992468,"byte_end":12992538,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992543,"byte_end":12992546,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992551,"byte_end":12992605,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12993202,"byte_end":12993212,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992764,"byte_end":12992814,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992819,"byte_end":12992822,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992827,"byte_end":12992834,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992839,"byte_end":12992858,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992863,"byte_end":12992901,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992906,"byte_end":12992909,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992914,"byte_end":12992948,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12992953,"byte_end":12993000,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12993005,"byte_end":12993012,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12993017,"byte_end":12993024,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12993029,"byte_end":12993067,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12993072,"byte_end":12993075,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12993080,"byte_end":12993133,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12993138,"byte_end":12993178,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12993183,"byte_end":12993190,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997572,"byte_end":12997593,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997526,"byte_end":12997567,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997628,"byte_end":12997630,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997599,"byte_end":12997623,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997504,"byte_end":12997519,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":765}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997422,"byte_end":12997477,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919907,"byte_end":12919917,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12920068,"byte_end":12920078,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12920405,"byte_end":12920415,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12930262,"byte_end":12930266,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12930537,"byte_end":12930543,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933771,"byte_end":12933777,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12938344,"byte_end":12938350,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12938612,"byte_end":12938618,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12939389,"byte_end":12939395,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12939755,"byte_end":12939759,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12939897,"byte_end":12939901,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12940108,"byte_end":12940112,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12940507,"byte_end":12940511,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12940792,"byte_end":12940796,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12941013,"byte_end":12941017,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12941546,"byte_end":12941550,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12941931,"byte_end":12941935,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942838,"byte_end":12942849,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12943983,"byte_end":12943993,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12944780,"byte_end":12944790,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12946282,"byte_end":12946292,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12946605,"byte_end":12946615,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12947705,"byte_end":12947715,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12948771,"byte_end":12948782,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12949300,"byte_end":12949311,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12952434,"byte_end":12952445,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12952768,"byte_end":12952779,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12954207,"byte_end":12954218,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12954929,"byte_end":12954940,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12955272,"byte_end":12955283,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12956126,"byte_end":12956138,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12956480,"byte_end":12956492,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12958752,"byte_end":12958764,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12959100,"byte_end":12959112,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12959247,"byte_end":12959259,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12959466,"byte_end":12959478,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12959873,"byte_end":12959885,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12960165,"byte_end":12960177,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974117,"byte_end":12974137,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12977490,"byte_end":12977510,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12978397,"byte_end":12978417,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12979758,"byte_end":12979778,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12979871,"byte_end":12979878,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12989477,"byte_end":12989484,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12989610,"byte_end":12989635,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12989793,"byte_end":12989818,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12989953,"byte_end":12989978,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991047,"byte_end":12991057,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12993599,"byte_end":12993609,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997020,"byte_end":12997030,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997353,"byte_end":12997363,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997668,"byte_end":12997683,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997965,"byte_end":12997980,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12998097,"byte_end":12998112,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":740,"byte_end":745,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":12918434,"byte_end":12918450,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":506}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12919907,"byte_end":12919917,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12920068,"byte_end":12920078,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":676},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":12920405,"byte_end":12920415,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":676},"to":{"krate":0,"index":74}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12930262,"byte_end":12930266,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12930537,"byte_end":12930543,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12933771,"byte_end":12933777,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12938344,"byte_end":12938350,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":979},"to":{"krate":17,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12938612,"byte_end":12938618,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":979},"to":{"krate":33,"index":17}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12939389,"byte_end":12939395,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12939755,"byte_end":12939759,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":934},"to":{"krate":1,"index":4628}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12939897,"byte_end":12939901,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":934},"to":{"krate":1,"index":4710}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12940108,"byte_end":12940112,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":934},"to":{"krate":15,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12940507,"byte_end":12940511,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":934},"to":{"krate":15,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12940792,"byte_end":12940796,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":934},"to":{"krate":1,"index":4685}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12941013,"byte_end":12941017,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":934},"to":{"krate":15,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12941546,"byte_end":12941550,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12941931,"byte_end":12941935,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":74}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":12942838,"byte_end":12942849,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12943983,"byte_end":12943993,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12944780,"byte_end":12944790,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12946282,"byte_end":12946292,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":893},"to":{"krate":17,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12946605,"byte_end":12946615,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":893},"to":{"krate":33,"index":17}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12947705,"byte_end":12947715,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":893},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12948771,"byte_end":12948782,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":12949300,"byte_end":12949311,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":848},"to":{"krate":17,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12952434,"byte_end":12952445,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12952768,"byte_end":12952779,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12954207,"byte_end":12954218,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":807},"to":{"krate":33,"index":17}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12954929,"byte_end":12954940,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":807},"to":{"krate":17,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12955272,"byte_end":12955283,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":807},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12956126,"byte_end":12956138,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12956480,"byte_end":12956492,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":770},"to":{"krate":33,"index":17}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12958752,"byte_end":12958764,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":770},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12959100,"byte_end":12959112,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":4628}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12959247,"byte_end":12959259,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":4710}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12959466,"byte_end":12959478,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":770},"to":{"krate":15,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12959873,"byte_end":12959885,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":770},"to":{"krate":15,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":12960165,"byte_end":12960177,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":770},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12974117,"byte_end":12974137,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12977490,"byte_end":12977510,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":724},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12978397,"byte_end":12978417,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":724},"to":{"krate":0,"index":74}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12979758,"byte_end":12979778,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":724},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12979871,"byte_end":12979878,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12989477,"byte_end":12989484,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12989610,"byte_end":12989635,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12989793,"byte_end":12989818,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":12989953,"byte_end":12989978,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12991047,"byte_end":12991057,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12993599,"byte_end":12993609,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":740},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997020,"byte_end":12997030,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":740},"to":{"krate":0,"index":74}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997353,"byte_end":12997363,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997668,"byte_end":12997683,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12997965,"byte_end":12997980,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":12998097,"byte_end":12998112,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":762},"to":{"krate":1,"index":2452}}]}