{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25","program":"C:\\Users\\takan\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio","--edition=2018","C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"blocking\"","--cfg","feature=\"default\"","--cfg","feature=\"fnv\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-threaded\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","-C","metadata=e5e47ae4186e983b","-C","extra-filename=-e5e47ae4186e983b","--out-dir","d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps","-L","dependency=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps","--extern","bytes=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libbytes-bc4bfd8600dd09ce.rmeta","--extern","fnv=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libfnv-31609811ac06ca54.rmeta","--extern","futures_core=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libfutures_core-087913808c6bab5e.rmeta","--extern","iovec=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libiovec-323177df825c5d67.rmeta","--extern","lazy_static=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\liblazy_static-c87288e501b1e270.rmeta","--extern","memchr=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libmemchr-ffb4c0dfbb3a768e.rmeta","--extern","mio=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libmio-ca93ee1489e546ec.rmeta","--extern","num_cpus=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libnum_cpus-76c660cc88e2767b.rmeta","--extern","pin_project_lite=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libpin_project_lite-ff30721b68e4b0b5.rmeta","--extern","slab=d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libslab-f5b038a779d400f7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\takan\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Work_Space\\etc\\calc_server\\target\\rls\\debug\\deps\\libtokio-e5e47ae4186e983b.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[3536275244225345,0]},"crate_root":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src","external_crates":[{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\try_join.rs","num":14,"id":{"name":"pin_project_lite","disambiguator":[5162435965236638425,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","num":15,"id":{"name":"bytes","disambiguator":[8214264152642663491,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","num":16,"id":{"name":"futures_core","disambiguator":[1925450448152840744,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":17,"id":{"name":"mio","disambiguator":[16474443525380373958,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":18,"id":{"name":"net2","disambiguator":[17219188681156553818,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":19,"id":{"name":"winapi","disambiguator":[5933735945854501452,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":20,"id":{"name":"cfg_if","disambiguator":[3151662610743374756,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","num":21,"id":{"name":"iovec","disambiguator":[4551384346738622172,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","num":22,"id":{"name":"slab","disambiguator":[11270129971421005808,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":23,"id":{"name":"miow","disambiguator":[18078158055376840166,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":24,"id":{"name":"kernel32","disambiguator":[1694024318165654482,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":25,"id":{"name":"winapi","disambiguator":[11851110773771120866,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":26,"id":{"name":"ws2_32","disambiguator":[10237322981200719636,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":27,"id":{"name":"log","disambiguator":[12248921885482483060,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":28,"id":{"name":"cfg_if","disambiguator":[10169579803109374085,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","num":29,"id":{"name":"fnv","disambiguator":[15854033725940539635,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_until.rs","num":30,"id":{"name":"memchr","disambiguator":[16405389548268582636,0]}},{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\mod.rs","num":31,"id":{"name":"num_cpus","disambiguator":[13959434253400856960,0]}}],"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":12967},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","byte_start":30992,"byte_end":30998,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":2,"index":46090},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","byte_start":31018,"byte_end":31021,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":2,"index":48740},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","byte_start":31042,"byte_end":31046,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","byte_start":31150,"byte_end":31160,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","byte_start":31162,"byte_end":31171,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","byte_start":31205,"byte_end":31212,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45170,"byte_end":45182,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45227,"byte_end":45236,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45281,"byte_end":45290,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45337,"byte_end":45347,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":1,"index":4047},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45499,"byte_end":45504,"line_start":201,"line_end":201,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":1,"index":10234},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45506,"byte_end":45515,"line_start":201,"line_end":201,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":1,"index":4045},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45517,"byte_end":45523,"line_start":201,"line_end":201,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":1,"index":10369},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45525,"byte_end":45533,"line_start":201,"line_end":201,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1709},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45630,"byte_end":45641,"line_start":207,"line_end":207,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45692,"byte_end":45704,"line_start":210,"line_end":210,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1926},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45936,"byte_end":45941,"line_start":226,"line_end":226,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1920},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45943,"byte_end":45951,"line_start":226,"line_end":226,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45953,"byte_end":45962,"line_start":226,"line_end":226,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1928},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46015,"byte_end":46019,"line_start":229,"line_end":229,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3282},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13389966,"byte_end":13389981,"line_start":5,"line_end":5,"column_start":33,"column_end":48},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3290},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390036,"byte_end":13390048,"line_start":8,"line_end":8,"column_start":29,"column_end":41},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390103,"byte_end":13390115,"line_start":11,"line_end":11,"column_start":29,"column_end":41},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3342},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390172,"byte_end":13390185,"line_start":14,"line_end":14,"column_start":30,"column_end":43},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":13639},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390232,"byte_end":13390241,"line_start":17,"line_end":17,"column_start":25,"column_end":34},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":13612},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390288,"byte_end":13390297,"line_start":20,"line_end":20,"column_start":25,"column_end":34},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":13562},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390344,"byte_end":13390353,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390405,"byte_end":13390409,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3392},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390411,"byte_end":13390415,"line_start":28,"line_end":28,"column_start":26,"column_end":30},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390454,"byte_end":13390459,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390461,"byte_end":13390466,"line_start":31,"line_end":31,"column_start":28,"column_end":33},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":13474},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390520,"byte_end":13390525,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390559,"byte_end":13390565,"line_start":39,"line_end":39,"column_start":19,"column_end":25},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3419},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390567,"byte_end":13390579,"line_start":39,"line_end":39,"column_start":27,"column_end":39},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390851,"byte_end":13390857,"line_start":56,"line_end":56,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390859,"byte_end":13390865,"line_start":56,"line_end":56,"column_start":30,"column_end":36},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390921,"byte_end":13390925,"line_start":61,"line_end":61,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390927,"byte_end":13390931,"line_start":61,"line_end":61,"column_start":26,"column_end":30},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":12640},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13390969,"byte_end":13390974,"line_start":64,"line_end":64,"column_start":20,"column_end":25},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13391054,"byte_end":13391067,"line_start":68,"line_end":68,"column_start":33,"column_end":46},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":12593},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13391069,"byte_end":13391081,"line_start":68,"line_end":68,"column_start":48,"column_end":60},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3756},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13391144,"byte_end":13391157,"line_start":71,"line_end":71,"column_start":33,"column_end":46},"alias_span":null,"name":"reader_stream","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":12551},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13391159,"byte_end":13391171,"line_start":71,"line_end":71,"column_start":48,"column_end":60},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":12511},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mod.rs","byte_start":13391213,"byte_end":13391217,"line_start":75,"line_end":75,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1858}},{"kind":"Use","ref_id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46075,"byte_end":46079,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46081,"byte_end":46087,"line_start":233,"line_end":233,"column_start":15,"column_end":21},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46089,"byte_end":46094,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46096,"byte_end":46102,"line_start":233,"line_end":233,"column_start":30,"column_end":36},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46104,"byte_end":46108,"line_start":233,"line_end":233,"column_start":38,"column_end":42},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3282},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46110,"byte_end":46125,"line_start":233,"line_end":233,"column_start":44,"column_end":59},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3290},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46127,"byte_end":46139,"line_start":233,"line_end":233,"column_start":61,"column_end":73},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46141,"byte_end":46153,"line_start":233,"line_end":233,"column_start":75,"column_end":87},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3342},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46155,"byte_end":46168,"line_start":233,"line_end":233,"column_start":89,"column_end":102},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":13639},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46178,"byte_end":46187,"line_start":234,"line_end":234,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":13612},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46189,"byte_end":46198,"line_start":234,"line_end":234,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":13562},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46200,"byte_end":46209,"line_start":234,"line_end":234,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3419},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46211,"byte_end":46223,"line_start":234,"line_end":234,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3392},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46225,"byte_end":46229,"line_start":234,"line_end":234,"column_start":56,"column_end":60},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46231,"byte_end":46236,"line_start":234,"line_end":234,"column_start":62,"column_end":67},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":13474},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46238,"byte_end":46243,"line_start":234,"line_end":234,"column_start":69,"column_end":74},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46245,"byte_end":46251,"line_start":234,"line_end":234,"column_start":76,"column_end":82},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46253,"byte_end":46257,"line_start":234,"line_end":234,"column_start":84,"column_end":88},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":12640},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46259,"byte_end":46264,"line_start":234,"line_end":234,"column_start":90,"column_end":95},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":12511},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46266,"byte_end":46270,"line_start":234,"line_end":234,"column_start":97,"column_end":101},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46321,"byte_end":46334,"line_start":238,"line_end":238,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":12593},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46336,"byte_end":46348,"line_start":238,"line_end":238,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3756},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46374,"byte_end":46387,"line_start":239,"line_end":239,"column_start":24,"column_end":37},"alias_span":null,"name":"reader_stream","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":12551},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46389,"byte_end":46401,"line_start":239,"line_end":239,"column_start":39,"column_end":51},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72848,"byte_end":72861,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":4374},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":13566900,"byte_end":13566908,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3955}},{"kind":"Use","ref_id":{"krate":0,"index":4380},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":13566938,"byte_end":13566946,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3955}},{"kind":"Use","ref_id":{"krate":0,"index":4387},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":13566948,"byte_end":13566957,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3955}},{"kind":"Use","ref_id":{"krate":0,"index":4394},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":13567000,"byte_end":13567013,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3955}},{"kind":"Use","ref_id":{"krate":0,"index":4398},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":13567015,"byte_end":13567029,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3955}},{"kind":"Use","ref_id":{"krate":0,"index":4403},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":13567031,"byte_end":13567043,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3955}},{"kind":"Use","ref_id":{"krate":0,"index":4404},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":13567031,"byte_end":13567043,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3955}},{"kind":"Use","ref_id":{"krate":0,"index":4372},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72992,"byte_end":73003,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":4409},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":73030,"byte_end":73039,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106381,"byte_end":106383,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106392,"byte_end":106404,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106406,"byte_end":106415,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106417,"byte_end":106427,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":5316},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13638016,"byte_end":13638025,"line_start":7,"line_end":7,"column_start":22,"column_end":31},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":4695}},{"kind":"Use","ref_id":{"krate":0,"index":5318},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13638176,"byte_end":13638186,"line_start":14,"line_end":14,"column_start":21,"column_end":31},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":4695}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114096,"byte_end":114103,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":836}},{"kind":"Use","ref_id":{"krate":0,"index":5708},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114188,"byte_end":114194,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":836}},{"kind":"Use","ref_id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114196,"byte_end":114211,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":836}},{"kind":"Use","ref_id":{"krate":0,"index":6480},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774071,"byte_end":13774081,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":6340}},{"kind":"Use","ref_id":{"krate":0,"index":6588},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774111,"byte_end":13774116,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":6340}},{"kind":"Use","ref_id":{"krate":0,"index":7258},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774118,"byte_end":13774123,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":6340}},{"kind":"Use","ref_id":{"krate":0,"index":6755},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774289,"byte_end":13774293,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":6340}},{"kind":"Use","ref_id":{"krate":0,"index":7265},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774295,"byte_end":13774299,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6340}},{"kind":"Use","ref_id":{"krate":0,"index":6903},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774409,"byte_end":13774413,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":6340}},{"kind":"Use","ref_id":{"krate":0,"index":7279},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774415,"byte_end":13774419,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":6340}},{"kind":"Use","ref_id":{"krate":0,"index":6940},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774454,"byte_end":13774461,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":6340}},{"kind":"Use","ref_id":{"krate":0,"index":7285},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774463,"byte_end":13774470,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":6340}},{"kind":"Use","ref_id":{"krate":0,"index":7292},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774510,"byte_end":13774519,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":6340}},{"kind":"Use","ref_id":{"krate":16,"index":96},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774811,"byte_end":13774817,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":6340}},{"kind":"Use","ref_id":{"krate":0,"index":9188},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892466,"byte_end":13892473,"line_start":433,"line_end":433,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":9200},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892475,"byte_end":13892492,"line_start":433,"line_end":433,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":7757},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940900,"byte_end":13940907,"line_start":70,"line_end":70,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":7612}},{"kind":"Use","ref_id":{"krate":0,"index":7751},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940909,"byte_end":13940917,"line_start":70,"line_end":70,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":7612}},{"kind":"Use","ref_id":{"krate":0,"index":7742},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940919,"byte_end":13940925,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":7612}},{"kind":"Use","ref_id":{"krate":0,"index":8123},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13941003,"byte_end":13941020,"line_start":77,"line_end":77,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":7612}},{"kind":"Use","ref_id":{"krate":0,"index":8117},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13941022,"byte_end":13941039,"line_start":77,"line_end":77,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":7612}},{"kind":"Use","ref_id":{"krate":0,"index":8108},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13941041,"byte_end":13941056,"line_start":77,"line_end":77,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":7612}},{"kind":"Use","ref_id":{"krate":0,"index":8212},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892717,"byte_end":13892722,"line_start":445,"line_end":445,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":8216},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892724,"byte_end":13892734,"line_start":445,"line_end":445,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":9331},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892736,"byte_end":13892748,"line_start":445,"line_end":445,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":8220},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892750,"byte_end":13892765,"line_start":445,"line_end":445,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":9336},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892805,"byte_end":13892811,"line_start":448,"line_end":448,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":9469},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892948,"byte_end":13892957,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":9473},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892959,"byte_end":13892974,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":9480},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892976,"byte_end":13892996,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":9490},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13893037,"byte_end":13893043,"line_start":458,"line_end":458,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":8895},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13893045,"byte_end":13893060,"line_start":458,"line_end":458,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":8922},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13893062,"byte_end":13893078,"line_start":458,"line_end":458,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":7363}},{"kind":"Use","ref_id":{"krate":0,"index":9559},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174654,"byte_end":14174668,"line_start":219,"line_end":219,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":9545}},{"kind":"Use","ref_id":{"krate":0,"index":9556},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174720,"byte_end":14174734,"line_start":222,"line_end":222,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":9545}},{"kind":"Use","ref_id":{"krate":0,"index":5316},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174795,"byte_end":14174804,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":9545}},{"kind":"Use","ref_id":{"krate":0,"index":5318},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174806,"byte_end":14174816,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":9545}},{"kind":"Use","ref_id":{"krate":0,"index":9602},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174854,"byte_end":14174859,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":9545}},{"kind":"Use","ref_id":{"krate":0,"index":9604},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174904,"byte_end":14174913,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":9545}},{"kind":"Use","ref_id":{"krate":0,"index":9602},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14601,"byte_end":14606,"line_start":390,"line_end":390,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10383},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188831,"byte_end":14188841,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":9758},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188871,"byte_end":14188880,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":9757},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188882,"byte_end":14188893,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":10425},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188895,"byte_end":14188900,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":10484},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188954,"byte_end":14188959,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":10504},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188998,"byte_end":14189005,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":10186},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14189041,"byte_end":14189049,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":10187},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14189051,"byte_end":14189062,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":10523},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14189064,"byte_end":14189072,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":10240},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14189122,"byte_end":14189129,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":10242},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14189131,"byte_end":14189141,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":10528},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14189143,"byte_end":14189150,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":11085},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14189152,"byte_end":14189159,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":10570},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14189218,"byte_end":14189226,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":0,"index":11037},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14189228,"byte_end":14189236,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":9612}},{"kind":"Use","ref_id":{"krate":2,"index":48584},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14189345,"byte_end":14189353,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":9612}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":95},{"krate":0,"index":243},{"krate":0,"index":445},{"krate":0,"index":534},{"krate":0,"index":750},{"krate":0,"index":822},{"krate":0,"index":836},{"krate":0,"index":1126},{"krate":0,"index":6340},{"krate":0,"index":7363},{"krate":0,"index":9545},{"krate":0,"index":9546},{"krate":0,"index":9612},{"krate":0,"index":1147}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n:: needless_doctest_main, clippy :: match_like_matches_macro, clippy ::\nstable_sort_primitive)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":56,"byte_end":241,"line_start":2,"line_end":8,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":242,"byte_end":348,"line_start":9,"line_end":14,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":557,"byte_end":629,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":630,"byte_end":633,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":634,"byte_end":714,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":715,"byte_end":787,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":788,"byte_end":824,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":825,"byte_end":828,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":829,"byte_end":896,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":897,"byte_end":977,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":978,"byte_end":1001,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1002,"byte_end":1089,"line_start":31,"line_end":31,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1090,"byte_end":1163,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1164,"byte_end":1242,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1243,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1324,"byte_end":1374,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1375,"byte_end":1378,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1379,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1436,"byte_end":1439,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1440,"byte_end":1472,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1473,"byte_end":1496,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1497,"byte_end":1520,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1521,"byte_end":1547,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1548,"byte_end":1569,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1570,"byte_end":1589,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1590,"byte_end":1619,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1620,"byte_end":1647,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1648,"byte_end":1667,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1668,"byte_end":1697,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1698,"byte_end":1744,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1745,"byte_end":1748,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1749,"byte_end":1770,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1771,"byte_end":1774,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1775,"byte_end":1854,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1855,"byte_end":1928,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1929,"byte_end":2008,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2009,"byte_end":2024,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2025,"byte_end":2028,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2029,"byte_end":2101,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2102,"byte_end":2139,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2140,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2144,"byte_end":2155,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2156,"byte_end":2208,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2209,"byte_end":2216,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2217,"byte_end":2220,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2221,"byte_end":2241,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2242,"byte_end":2245,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2246,"byte_end":2327,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2328,"byte_end":2406,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2407,"byte_end":2487,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2488,"byte_end":2565,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2566,"byte_end":2649,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2650,"byte_end":2727,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2728,"byte_end":2815,"line_start":73,"line_end":73,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2816,"byte_end":2897,"line_start":74,"line_end":74,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2898,"byte_end":2907,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2908,"byte_end":2911,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2912,"byte_end":2977,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/ - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2978,"byte_end":3060,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3061,"byte_end":3143,"line_start":79,"line_end":79,"column_start":1,"column_end":83}},{"value":"/ - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3144,"byte_end":3193,"line_start":80,"line_end":80,"column_start":1,"column_end":50}},{"value":"/ - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3194,"byte_end":3247,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3248,"byte_end":3299,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3300,"byte_end":3360,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3361,"byte_end":3451,"line_start":84,"line_end":84,"column_start":1,"column_end":91}},{"value":"/ - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3452,"byte_end":3501,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3502,"byte_end":3551,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/ - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3552,"byte_end":3602,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3603,"byte_end":3680,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ the built in timer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3681,"byte_end":3704,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3705,"byte_end":3753,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3754,"byte_end":3823,"line_start":91,"line_end":91,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3824,"byte_end":3870,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/ - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3871,"byte_end":3952,"line_start":93,"line_end":93,"column_start":1,"column_end":82}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3953,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4004,"byte_end":4042,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4043,"byte_end":4098,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4099,"byte_end":4177,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4178,"byte_end":4242,"line_start":98,"line_end":98,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4243,"byte_end":4246,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4247,"byte_end":4329,"line_start":100,"line_end":100,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4330,"byte_end":4352,"line_start":101,"line_end":101,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4353,"byte_end":4356,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4357,"byte_end":4382,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4383,"byte_end":4386,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4387,"byte_end":4455,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4456,"byte_end":4519,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/ dependencies. They are not included in `full`:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4520,"byte_end":4570,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4571,"byte_end":4574,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4575,"byte_end":4654,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4655,"byte_end":4732,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4733,"byte_end":4766,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4767,"byte_end":4770,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4771,"byte_end":4868,"line_start":113,"line_end":113,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4869,"byte_end":4872,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4873,"byte_end":4903,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4904,"byte_end":4907,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4908,"byte_end":4989,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4990,"byte_end":5075,"line_start":118,"line_end":118,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5076,"byte_end":5160,"line_start":119,"line_end":119,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5161,"byte_end":5191,"line_start":120,"line_end":120,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5192,"byte_end":5195,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5196,"byte_end":5212,"line_start":122,"line_end":122,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5213,"byte_end":5216,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5217,"byte_end":5283,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5284,"byte_end":5287,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5288,"byte_end":5299,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5300,"byte_end":5352,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5353,"byte_end":5360,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5361,"byte_end":5364,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5365,"byte_end":5392,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5393,"byte_end":5396,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5397,"byte_end":5476,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5477,"byte_end":5559,"line_start":133,"line_end":133,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5560,"byte_end":5641,"line_start":134,"line_end":134,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5642,"byte_end":5677,"line_start":135,"line_end":135,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5678,"byte_end":5681,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5682,"byte_end":5698,"line_start":137,"line_end":137,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5699,"byte_end":5702,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5703,"byte_end":5785,"line_start":139,"line_end":139,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5786,"byte_end":5836,"line_start":140,"line_end":140,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5837,"byte_end":5840,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5841,"byte_end":5852,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5853,"byte_end":5915,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5916,"byte_end":5923,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5924,"byte_end":5927,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5928,"byte_end":5953,"line_start":146,"line_end":146,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5954,"byte_end":5957,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5958,"byte_end":6034,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6035,"byte_end":6118,"line_start":149,"line_end":149,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6119,"byte_end":6162,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6163,"byte_end":6166,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6167,"byte_end":6246,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6247,"byte_end":6330,"line_start":153,"line_end":153,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6331,"byte_end":6409,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6410,"byte_end":6429,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6430,"byte_end":6433,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6434,"byte_end":6512,"line_start":157,"line_end":157,"column_start":1,"column_end":79}},{"value":"/ is enabled.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6513,"byte_end":6528,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6529,"byte_end":6532,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6533,"byte_end":6576,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6577,"byte_end":6609,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6610,"byte_end":6645,"line_start":162,"line_end":162,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6646,"byte_end":6689,"line_start":163,"line_end":163,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6690,"byte_end":6743,"line_start":164,"line_end":164,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6744,"byte_end":6747,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6748,"byte_end":6826,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6827,"byte_end":6883,"line_start":167,"line_end":167,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6884,"byte_end":6887,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6888,"byte_end":6961,"line_start":169,"line_end":169,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6962,"byte_end":6982,"line_start":170,"line_end":170,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6983,"byte_end":7058,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7059,"byte_end":7071,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7072,"byte_end":7152,"line_start":173,"line_end":173,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7153,"byte_end":7183,"line_start":174,"line_end":174,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7184,"byte_end":7187,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7188,"byte_end":7264,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7265,"byte_end":7277,"line_start":177,"line_end":177,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7278,"byte_end":7281,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7282,"byte_end":7314,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7315,"byte_end":7348,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7349,"byte_end":7386,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7387,"byte_end":7424,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7425,"byte_end":7456,"line_start":183,"line_end":183,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7457,"byte_end":7490,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7491,"byte_end":7494,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7495,"byte_end":7566,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7567,"byte_end":7647,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7648,"byte_end":7736,"line_start":188,"line_end":188,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7737,"byte_end":7761,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7762,"byte_end":7765,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7766,"byte_end":7841,"line_start":191,"line_end":191,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7842,"byte_end":7845,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7846,"byte_end":7878,"line_start":193,"line_end":193,"column_start":1,"column_end":33}},{"value":"/ [delay]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7879,"byte_end":7916,"line_start":194,"line_end":194,"column_start":1,"column_end":38}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7917,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7957,"byte_end":7994,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7995,"byte_end":7998,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7999,"byte_end":8077,"line_start":198,"line_end":198,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8078,"byte_end":8162,"line_start":199,"line_end":199,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8163,"byte_end":8235,"line_start":200,"line_end":200,"column_start":1,"column_end":73}},{"value":"/ required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8236,"byte_end":8313,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/ managing runtimes.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8314,"byte_end":8336,"line_start":202,"line_end":202,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8337,"byte_end":8340,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8341,"byte_end":8420,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"/ enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8421,"byte_end":8499,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8500,"byte_end":8568,"line_start":206,"line_end":206,"column_start":1,"column_end":69}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8569,"byte_end":8647,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8648,"byte_end":8718,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8719,"byte_end":8722,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8723,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8750,"byte_end":8788,"line_start":211,"line_end":211,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8789,"byte_end":8829,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8830,"byte_end":8870,"line_start":213,"line_end":213,"column_start":1,"column_end":41}},{"value":"/ [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8871,"byte_end":8920,"line_start":214,"line_end":214,"column_start":1,"column_end":50}},{"value":"/ [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8921,"byte_end":8977,"line_start":215,"line_end":215,"column_start":1,"column_end":57}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8978,"byte_end":9033,"line_start":216,"line_end":216,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9034,"byte_end":9037,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9038,"byte_end":9078,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9079,"byte_end":9082,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9083,"byte_end":9162,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9163,"byte_end":9240,"line_start":221,"line_end":221,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9241,"byte_end":9321,"line_start":222,"line_end":222,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9322,"byte_end":9396,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9397,"byte_end":9476,"line_start":224,"line_end":224,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9477,"byte_end":9554,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9555,"byte_end":9628,"line_start":226,"line_end":226,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9629,"byte_end":9709,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"/ block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9710,"byte_end":9788,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9789,"byte_end":9867,"line_start":229,"line_end":229,"column_start":1,"column_end":79}},{"value":"/ on the number of blocking threads is very large. These limits can be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9868,"byte_end":9940,"line_start":230,"line_end":230,"column_start":1,"column_end":73}},{"value":"/ configured on the [`Builder`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9941,"byte_end":9975,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9976,"byte_end":9979,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9980,"byte_end":10057,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10058,"byte_end":10061,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10062,"byte_end":10102,"line_start":235,"line_end":235,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10103,"byte_end":10156,"line_start":236,"line_end":236,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10157,"byte_end":10160,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10161,"byte_end":10168,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10169,"byte_end":10187,"line_start":239,"line_end":239,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10188,"byte_end":10209,"line_start":240,"line_end":240,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10210,"byte_end":10254,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10255,"byte_end":10258,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10259,"byte_end":10319,"line_start":243,"line_end":243,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10320,"byte_end":10372,"line_start":244,"line_end":244,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10373,"byte_end":10408,"line_start":245,"line_end":245,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10409,"byte_end":10420,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10421,"byte_end":10424,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10425,"byte_end":10480,"line_start":248,"line_end":248,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10481,"byte_end":10556,"line_start":249,"line_end":249,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10557,"byte_end":10574,"line_start":250,"line_end":250,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10575,"byte_end":10612,"line_start":251,"line_end":251,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10613,"byte_end":10618,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10619,"byte_end":10626,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10627,"byte_end":10630,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10631,"byte_end":10709,"line_start":255,"line_end":255,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10710,"byte_end":10786,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10787,"byte_end":10863,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10864,"byte_end":10888,"line_start":258,"line_end":258,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10889,"byte_end":10892,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10893,"byte_end":10927,"line_start":260,"line_end":260,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10928,"byte_end":10965,"line_start":261,"line_end":261,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10966,"byte_end":10969,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10970,"byte_end":10992,"line_start":263,"line_end":263,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10993,"byte_end":10996,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10997,"byte_end":11076,"line_start":265,"line_end":265,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11077,"byte_end":11124,"line_start":266,"line_end":266,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11125,"byte_end":11128,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11129,"byte_end":11208,"line_start":268,"line_end":268,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11209,"byte_end":11289,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11290,"byte_end":11370,"line_start":270,"line_end":270,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11371,"byte_end":11442,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11443,"byte_end":11523,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/ also provides utilities for library authors implementing I/O resources.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11524,"byte_end":11599,"line_start":273,"line_end":273,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11600,"byte_end":11603,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11604,"byte_end":11684,"line_start":275,"line_end":275,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11685,"byte_end":11745,"line_start":276,"line_end":276,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11746,"byte_end":11749,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11750,"byte_end":11829,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11830,"byte_end":11899,"line_start":279,"line_end":279,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11900,"byte_end":11977,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11978,"byte_end":12034,"line_start":281,"line_end":281,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12035,"byte_end":12115,"line_start":282,"line_end":282,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12116,"byte_end":12161,"line_start":283,"line_end":283,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12162,"byte_end":12241,"line_start":284,"line_end":284,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12242,"byte_end":12276,"line_start":285,"line_end":285,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12277,"byte_end":12280,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12281,"byte_end":12309,"line_start":287,"line_end":287,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12310,"byte_end":12349,"line_start":288,"line_end":288,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12350,"byte_end":12391,"line_start":289,"line_end":289,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12392,"byte_end":12437,"line_start":290,"line_end":290,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12438,"byte_end":12462,"line_start":291,"line_end":291,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12463,"byte_end":12493,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12494,"byte_end":12520,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::udp","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12521,"byte_end":12547,"line_start":294,"line_end":294,"column_start":1,"column_end":27}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12548,"byte_end":12575,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12576,"byte_end":12604,"line_start":296,"line_end":296,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12605,"byte_end":12629,"line_start":297,"line_end":297,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12630,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12667,"byte_end":12705,"line_start":299,"line_end":299,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12706,"byte_end":12709,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12710,"byte_end":12724,"line_start":301,"line_end":301,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12725,"byte_end":12728,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12729,"byte_end":12758,"line_start":303,"line_end":303,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12759,"byte_end":12762,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12763,"byte_end":12776,"line_start":305,"line_end":305,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12777,"byte_end":12809,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12810,"byte_end":12836,"line_start":307,"line_end":307,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12837,"byte_end":12840,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12841,"byte_end":12859,"line_start":309,"line_end":309,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12860,"byte_end":12923,"line_start":310,"line_end":310,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12924,"byte_end":12994,"line_start":311,"line_end":311,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12995,"byte_end":12998,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12999,"byte_end":13013,"line_start":313,"line_end":313,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13014,"byte_end":13073,"line_start":314,"line_end":314,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13074,"byte_end":13077,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13078,"byte_end":13115,"line_start":316,"line_end":316,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13116,"byte_end":13156,"line_start":317,"line_end":317,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13157,"byte_end":13160,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13161,"byte_end":13241,"line_start":319,"line_end":319,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13242,"byte_end":13264,"line_start":320,"line_end":320,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13265,"byte_end":13328,"line_start":321,"line_end":321,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13329,"byte_end":13369,"line_start":322,"line_end":322,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13370,"byte_end":13420,"line_start":323,"line_end":323,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13421,"byte_end":13456,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13457,"byte_end":13492,"line_start":325,"line_end":325,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13493,"byte_end":13576,"line_start":326,"line_end":326,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13577,"byte_end":13612,"line_start":327,"line_end":327,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13613,"byte_end":13638,"line_start":328,"line_end":328,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13639,"byte_end":13661,"line_start":329,"line_end":329,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13662,"byte_end":13665,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13666,"byte_end":13708,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13709,"byte_end":13781,"line_start":332,"line_end":332,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13782,"byte_end":13860,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13861,"byte_end":13892,"line_start":334,"line_end":334,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13893,"byte_end":13914,"line_start":335,"line_end":335,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13915,"byte_end":13932,"line_start":336,"line_end":336,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13933,"byte_end":13948,"line_start":337,"line_end":337,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13949,"byte_end":13958,"line_start":338,"line_end":338,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13959,"byte_end":13964,"line_start":339,"line_end":339,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13965,"byte_end":13972,"line_start":340,"line_end":340,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":85}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14161,"byte_end":14173,"line_start":346,"line_end":346,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\mod.rs","byte_start":15903,"byte_end":15923,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":240}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","byte_start":31049,"byte_end":31085,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/ Asynchronous values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","byte_start":31087,"byte_end":31111,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31576,"byte_end":31582,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":1302},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31541,"byte_end":31571,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31636,"byte_end":31640,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":1302},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31593,"byte_end":31631,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31802,"byte_end":31806,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":1302},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31659,"byte_end":31725,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31730,"byte_end":31797,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31512,"byte_end":31521,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1310}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31448,"byte_end":31485,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31969,"byte_end":31979,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31924,"byte_end":31961,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32382,"byte_end":32392,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32098,"byte_end":32183,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32188,"byte_end":32259,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32264,"byte_end":32337,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32342,"byte_end":32370,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32770,"byte_end":32781,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32649,"byte_end":32716,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32721,"byte_end":32744,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32749,"byte_end":32758,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":33993,"byte_end":33999,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":151}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":33941,"byte_end":33981,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34129,"byte_end":34136,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34050,"byte_end":34121,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34901,"byte_end":34906,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34672,"byte_end":34713,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34714,"byte_end":34717,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34718,"byte_end":34795,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34864,"byte_end":34889,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":1397},{"krate":0,"index":1543},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1680},{"krate":0,"index":1718},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1855},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":1866},{"krate":0,"index":1869},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1878},{"krate":0,"index":1881},{"krate":0,"index":1884},{"krate":0,"index":1887},{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1896},{"krate":0,"index":1899},{"krate":0,"index":1902},{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":1911},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3945},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3952}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37661,"byte_end":37738,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37739,"byte_end":37742,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37743,"byte_end":37814,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37815,"byte_end":37895,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37896,"byte_end":37970,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37971,"byte_end":37974,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37975,"byte_end":38005,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38006,"byte_end":38009,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38010,"byte_end":38090,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38091,"byte_end":38168,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38169,"byte_end":38246,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38247,"byte_end":38327,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38328,"byte_end":38406,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38407,"byte_end":38472,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38473,"byte_end":38476,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38477,"byte_end":38549,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38550,"byte_end":38617,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38618,"byte_end":38697,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38698,"byte_end":38772,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38773,"byte_end":38847,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38848,"byte_end":38865,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38866,"byte_end":38869,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38870,"byte_end":38934,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38935,"byte_end":39010,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39011,"byte_end":39086,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39087,"byte_end":39164,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39165,"byte_end":39168,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39169,"byte_end":39245,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39246,"byte_end":39321,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39322,"byte_end":39402,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39403,"byte_end":39474,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39475,"byte_end":39544,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39545,"byte_end":39548,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39549,"byte_end":39621,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39622,"byte_end":39702,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39703,"byte_end":39756,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39757,"byte_end":39760,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39761,"byte_end":39774,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39775,"byte_end":39815,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39816,"byte_end":39840,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39841,"byte_end":39844,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39845,"byte_end":39863,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39864,"byte_end":39903,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39904,"byte_end":39953,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39954,"byte_end":39987,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39988,"byte_end":39991,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39992,"byte_end":40022,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40023,"byte_end":40066,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40067,"byte_end":40070,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40071,"byte_end":40121,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40122,"byte_end":40136,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40137,"byte_end":40142,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40143,"byte_end":40150,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40151,"byte_end":40154,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40155,"byte_end":40184,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40185,"byte_end":40225,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40226,"byte_end":40262,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40263,"byte_end":40304,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40305,"byte_end":40308,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40309,"byte_end":40344,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40345,"byte_end":40348,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40349,"byte_end":40430,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40431,"byte_end":40505,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40506,"byte_end":40584,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40585,"byte_end":40629,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40630,"byte_end":40633,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40634,"byte_end":40704,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40705,"byte_end":40783,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40784,"byte_end":40862,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40863,"byte_end":40940,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40941,"byte_end":40944,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40945,"byte_end":41020,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41021,"byte_end":41059,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41060,"byte_end":41063,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41064,"byte_end":41077,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41078,"byte_end":41132,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41133,"byte_end":41157,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41158,"byte_end":41161,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41162,"byte_end":41180,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41181,"byte_end":41220,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41221,"byte_end":41266,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41267,"byte_end":41310,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41311,"byte_end":41350,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41351,"byte_end":41354,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41355,"byte_end":41389,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41390,"byte_end":41435,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41436,"byte_end":41439,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41440,"byte_end":41471,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41472,"byte_end":41486,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41487,"byte_end":41492,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41493,"byte_end":41500,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41501,"byte_end":41504,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41505,"byte_end":41586,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41587,"byte_end":41665,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41666,"byte_end":41728,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41729,"byte_end":41732,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41733,"byte_end":41746,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41747,"byte_end":41799,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41800,"byte_end":41824,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41825,"byte_end":41828,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41829,"byte_end":41847,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41848,"byte_end":41887,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41888,"byte_end":41935,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41936,"byte_end":41945,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41946,"byte_end":41993,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41994,"byte_end":41997,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41998,"byte_end":42040,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42041,"byte_end":42082,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42083,"byte_end":42086,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42087,"byte_end":42147,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42148,"byte_end":42182,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42183,"byte_end":42186,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42187,"byte_end":42277,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42278,"byte_end":42281,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42282,"byte_end":42296,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42297,"byte_end":42302,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42303,"byte_end":42310,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42311,"byte_end":42314,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42315,"byte_end":42360,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42361,"byte_end":42403,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42404,"byte_end":42449,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42450,"byte_end":42489,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42490,"byte_end":42529,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42530,"byte_end":42533,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42534,"byte_end":42578,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42579,"byte_end":42582,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42583,"byte_end":42665,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42666,"byte_end":42745,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42746,"byte_end":42820,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42821,"byte_end":42894,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42895,"byte_end":42955,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42956,"byte_end":42959,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42960,"byte_end":43001,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43002,"byte_end":43005,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43006,"byte_end":43074,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43075,"byte_end":43144,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43145,"byte_end":43211,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43212,"byte_end":43275,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43276,"byte_end":43343,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43344,"byte_end":43413,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43414,"byte_end":43484,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43485,"byte_end":43563,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43564,"byte_end":43589,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43590,"byte_end":43593,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43594,"byte_end":43670,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43671,"byte_end":43674,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43675,"byte_end":43706,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43707,"byte_end":43710,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43711,"byte_end":43791,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43792,"byte_end":43868,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43869,"byte_end":43916,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43917,"byte_end":43920,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43921,"byte_end":43994,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43995,"byte_end":44071,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44072,"byte_end":44148,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44149,"byte_end":44152,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44153,"byte_end":44174,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44175,"byte_end":44198,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44199,"byte_end":44221,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44222,"byte_end":44225,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44226,"byte_end":44248,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44249,"byte_end":44252,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44253,"byte_end":44329,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44330,"byte_end":44377,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44378,"byte_end":44381,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44382,"byte_end":44416,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44417,"byte_end":44453,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44454,"byte_end":44494,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44495,"byte_end":44537,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44538,"byte_end":44611,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44612,"byte_end":44695,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44696,"byte_end":44779,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44780,"byte_end":44807,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44808,"byte_end":44841,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44842,"byte_end":44869,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44870,"byte_end":44897,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44898,"byte_end":44929,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44930,"byte_end":45000,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45001,"byte_end":45038,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45039,"byte_end":45068,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47533,"byte_end":47545,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":46856,"byte_end":46887,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":46888,"byte_end":46891,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":46892,"byte_end":46964,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":46965,"byte_end":47043,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47044,"byte_end":47130,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47131,"byte_end":47208,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47209,"byte_end":47220,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47221,"byte_end":47224,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47225,"byte_end":47293,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47294,"byte_end":47318,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47319,"byte_end":47322,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47323,"byte_end":47365,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47366,"byte_end":47416,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47417,"byte_end":47470,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47471,"byte_end":47522,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48643,"byte_end":48656,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":264},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47563,"byte_end":47648,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47653,"byte_end":47694,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47699,"byte_end":47702,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47707,"byte_end":47754,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47759,"byte_end":47762,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47767,"byte_end":47826,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47831,"byte_end":47889,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47894,"byte_end":47975,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47980,"byte_end":48006,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48011,"byte_end":48014,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48019,"byte_end":48090,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48095,"byte_end":48157,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48162,"byte_end":48233,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48238,"byte_end":48319,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48324,"byte_end":48400,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48405,"byte_end":48456,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48461,"byte_end":48464,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48469,"byte_end":48540,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48545,"byte_end":48548,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48553,"byte_end":48592,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48597,"byte_end":48635,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49559,"byte_end":49566,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":264},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48734,"byte_end":48808,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48813,"byte_end":48880,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48885,"byte_end":48888,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48893,"byte_end":48964,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48969,"byte_end":49038,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49043,"byte_end":49117,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49122,"byte_end":49199,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49204,"byte_end":49274,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49279,"byte_end":49332,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49337,"byte_end":49340,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49345,"byte_end":49417,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49422,"byte_end":49444,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49449,"byte_end":49452,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49457,"byte_end":49496,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49501,"byte_end":49551,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52800,"byte_end":52809,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51219,"byte_end":51249,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51250,"byte_end":51253,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51254,"byte_end":51333,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51334,"byte_end":51408,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51409,"byte_end":51488,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51489,"byte_end":51566,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51567,"byte_end":51578,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51579,"byte_end":51582,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51583,"byte_end":51660,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51661,"byte_end":51679,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51680,"byte_end":51683,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51684,"byte_end":51760,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51761,"byte_end":51837,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51838,"byte_end":51857,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51858,"byte_end":51861,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51862,"byte_end":51927,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51928,"byte_end":52008,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52009,"byte_end":52088,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52089,"byte_end":52162,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52163,"byte_end":52236,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52237,"byte_end":52258,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52259,"byte_end":52262,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52263,"byte_end":52347,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52348,"byte_end":52372,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52373,"byte_end":52376,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52377,"byte_end":52450,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52451,"byte_end":52530,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52531,"byte_end":52534,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52535,"byte_end":52600,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52601,"byte_end":52622,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52623,"byte_end":52626,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52627,"byte_end":52666,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52667,"byte_end":52703,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52704,"byte_end":52743,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52744,"byte_end":52789,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54453,"byte_end":54481,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52816,"byte_end":52890,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52895,"byte_end":52944,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52949,"byte_end":52952,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52957,"byte_end":53030,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53035,"byte_end":53106,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53111,"byte_end":53185,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53190,"byte_end":53266,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53271,"byte_end":53309,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53314,"byte_end":53317,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53322,"byte_end":53398,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53403,"byte_end":53477,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53482,"byte_end":53559,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53564,"byte_end":53596,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53601,"byte_end":53604,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53609,"byte_end":53682,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53687,"byte_end":53755,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53760,"byte_end":53816,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53821,"byte_end":53856,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53861,"byte_end":53864,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53869,"byte_end":53945,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53950,"byte_end":54025,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54030,"byte_end":54107,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54112,"byte_end":54130,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54135,"byte_end":54138,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54143,"byte_end":54194,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54199,"byte_end":54202,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54207,"byte_end":54219,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54224,"byte_end":54227,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54232,"byte_end":54304,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54309,"byte_end":54340,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54345,"byte_end":54348,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54353,"byte_end":54384,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54389,"byte_end":54438,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54994,"byte_end":55003,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54624,"byte_end":54677,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54682,"byte_end":54685,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54690,"byte_end":54748,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54753,"byte_end":54756,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54761,"byte_end":54820,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54825,"byte_end":54883,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54888,"byte_end":54955,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54960,"byte_end":54986,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55464,"byte_end":55477,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55128,"byte_end":55204,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55209,"byte_end":55238,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55243,"byte_end":55246,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55251,"byte_end":55326,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55331,"byte_end":55407,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55412,"byte_end":55456,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58632,"byte_end":58641,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58150,"byte_end":58180,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58181,"byte_end":58184,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58185,"byte_end":58259,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58260,"byte_end":58330,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58331,"byte_end":58400,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58401,"byte_end":58404,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58405,"byte_end":58470,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58471,"byte_end":58492,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58493,"byte_end":58496,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58497,"byte_end":58533,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58534,"byte_end":58575,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58576,"byte_end":58621,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58979,"byte_end":58989,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58648,"byte_end":58705,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58710,"byte_end":58713,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58718,"byte_end":58791,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58796,"byte_end":58822,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58827,"byte_end":58830,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58835,"byte_end":58910,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58915,"byte_end":58971,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59572,"byte_end":59585,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59115,"byte_end":59158,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59163,"byte_end":59166,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59171,"byte_end":59220,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59225,"byte_end":59295,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59300,"byte_end":59361,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59366,"byte_end":59369,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59374,"byte_end":59386,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59391,"byte_end":59394,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59399,"byte_end":59455,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59460,"byte_end":59463,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59468,"byte_end":59480,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59485,"byte_end":59488,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59493,"byte_end":59564,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63088,"byte_end":63098,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61225,"byte_end":61257,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61258,"byte_end":61261,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61262,"byte_end":61344,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61345,"byte_end":61420,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61421,"byte_end":61488,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61489,"byte_end":61492,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61493,"byte_end":61573,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61574,"byte_end":61592,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61593,"byte_end":61596,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61597,"byte_end":61668,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61669,"byte_end":61683,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61684,"byte_end":61687,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61688,"byte_end":61756,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61757,"byte_end":61837,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61838,"byte_end":61917,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61918,"byte_end":61991,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61992,"byte_end":62065,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62066,"byte_end":62087,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62088,"byte_end":62091,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62092,"byte_end":62176,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62177,"byte_end":62201,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62202,"byte_end":62205,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62206,"byte_end":62288,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62289,"byte_end":62372,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62373,"byte_end":62376,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62377,"byte_end":62461,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62462,"byte_end":62546,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62547,"byte_end":62625,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62626,"byte_end":62705,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62706,"byte_end":62767,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62768,"byte_end":62771,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62772,"byte_end":62838,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62839,"byte_end":62861,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62862,"byte_end":62865,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62866,"byte_end":62904,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62905,"byte_end":62949,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62950,"byte_end":62989,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62990,"byte_end":63029,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63030,"byte_end":63077,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63482,"byte_end":63492,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63105,"byte_end":63159,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63164,"byte_end":63167,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63172,"byte_end":63233,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63238,"byte_end":63241,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63246,"byte_end":63308,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63313,"byte_end":63371,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63376,"byte_end":63443,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63448,"byte_end":63474,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64033,"byte_end":64043,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63620,"byte_end":63691,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63696,"byte_end":63718,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63723,"byte_end":63726,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63731,"byte_end":63777,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63782,"byte_end":63785,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63790,"byte_end":63854,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63859,"byte_end":63917,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63922,"byte_end":63990,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63995,"byte_end":64025,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67329,"byte_end":67342,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64125,"byte_end":64199,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64204,"byte_end":64252,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64257,"byte_end":64260,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64265,"byte_end":64336,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64341,"byte_end":64417,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64422,"byte_end":64498,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64503,"byte_end":64578,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64583,"byte_end":64654,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64659,"byte_end":64735,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64740,"byte_end":64768,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64773,"byte_end":64776,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64781,"byte_end":64842,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64847,"byte_end":64918,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64923,"byte_end":64995,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65000,"byte_end":65075,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65080,"byte_end":65153,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65158,"byte_end":65233,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65238,"byte_end":65310,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65315,"byte_end":65326,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65331,"byte_end":65334,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65339,"byte_end":65413,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65418,"byte_end":65490,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65495,"byte_end":65564,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65569,"byte_end":65637,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65642,"byte_end":65703,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65708,"byte_end":65711,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65716,"byte_end":65734,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65739,"byte_end":65742,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65747,"byte_end":65817,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65822,"byte_end":65825,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65830,"byte_end":65893,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65898,"byte_end":65967,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65972,"byte_end":66047,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66052,"byte_end":66125,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66130,"byte_end":66181,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66186,"byte_end":66189,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66194,"byte_end":66264,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66269,"byte_end":66344,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66349,"byte_end":66421,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66426,"byte_end":66496,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66501,"byte_end":66576,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66581,"byte_end":66584,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66589,"byte_end":66670,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66675,"byte_end":66750,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66755,"byte_end":66822,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66827,"byte_end":66830,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66835,"byte_end":66847,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66852,"byte_end":66855,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66860,"byte_end":66931,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66936,"byte_end":67002,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67007,"byte_end":67081,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67086,"byte_end":67150,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67155,"byte_end":67194,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67199,"byte_end":67202,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67207,"byte_end":67219,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67224,"byte_end":67227,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67232,"byte_end":67307,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67312,"byte_end":67321,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67630,"byte_end":67644,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67424,"byte_end":67498,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67503,"byte_end":67506,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67511,"byte_end":67585,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67590,"byte_end":67622,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1709},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13358139,"byte_end":13358150,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1712}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360396,"byte_end":13360399,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13359974,"byte_end":13360042,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360047,"byte_end":13360050,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360055,"byte_end":13360067,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360072,"byte_end":13360075,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360080,"byte_end":13360140,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360145,"byte_end":13360148,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360153,"byte_end":13360223,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360228,"byte_end":13360301,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360306,"byte_end":13360384,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361603,"byte_end":13361617,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360499,"byte_end":13360593,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360598,"byte_end":13360692,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360697,"byte_end":13360792,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360797,"byte_end":13360891,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360896,"byte_end":13360924,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360929,"byte_end":13360932,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360937,"byte_end":13360974,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360979,"byte_end":13360982,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13360987,"byte_end":13360998,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361003,"byte_end":13361020,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361025,"byte_end":13361056,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361061,"byte_end":13361106,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361111,"byte_end":13361165,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361170,"byte_end":13361222,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361227,"byte_end":13361237,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361242,"byte_end":13361249,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361254,"byte_end":13361257,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361262,"byte_end":13361274,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361279,"byte_end":13361282,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361287,"byte_end":13361347,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361352,"byte_end":13361355,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361360,"byte_end":13361430,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361435,"byte_end":13361508,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361513,"byte_end":13361591,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362095,"byte_end":13362102,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13361981,"byte_end":13362055,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362060,"byte_end":13362083,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362278,"byte_end":13362285,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362163,"byte_end":13362238,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362243,"byte_end":13362266,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362821,"byte_end":13362831,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362354,"byte_end":13362403,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362408,"byte_end":13362411,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362416,"byte_end":13362490,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362495,"byte_end":13362570,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362575,"byte_end":13362578,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362583,"byte_end":13362658,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362663,"byte_end":13362739,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362744,"byte_end":13362809,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363988,"byte_end":13364003,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13362979,"byte_end":13363030,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363035,"byte_end":13363038,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363043,"byte_end":13363116,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363121,"byte_end":13363192,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363197,"byte_end":13363272,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363277,"byte_end":13363284,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363289,"byte_end":13363292,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363297,"byte_end":13363373,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363378,"byte_end":13363444,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363449,"byte_end":13363452,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363457,"byte_end":13363530,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363535,"byte_end":13363579,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363584,"byte_end":13363587,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363592,"byte_end":13363647,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363652,"byte_end":13363655,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363660,"byte_end":13363672,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363677,"byte_end":13363680,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363685,"byte_end":13363713,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363718,"byte_end":13363721,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363726,"byte_end":13363758,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363763,"byte_end":13363807,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363812,"byte_end":13363815,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363820,"byte_end":13363833,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363838,"byte_end":13363841,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363846,"byte_end":13363919,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13363924,"byte_end":13363976,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364979,"byte_end":13364995,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364380,"byte_end":13364456,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364461,"byte_end":13364525,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364530,"byte_end":13364533,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364538,"byte_end":13364600,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364605,"byte_end":13364676,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364681,"byte_end":13364684,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364689,"byte_end":13364764,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364769,"byte_end":13364801,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364806,"byte_end":13364809,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364814,"byte_end":13364826,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364831,"byte_end":13364834,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364839,"byte_end":13364867,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364872,"byte_end":13364875,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364880,"byte_end":13364918,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13364923,"byte_end":13364967,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366435,"byte_end":13366451,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13365520,"byte_end":13365572,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13365577,"byte_end":13365580,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13365585,"byte_end":13365654,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13365659,"byte_end":13365702,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13365707,"byte_end":13365710,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13365715,"byte_end":13365783,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13365788,"byte_end":13365863,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13365868,"byte_end":13365871,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13365876,"byte_end":13365950,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13365955,"byte_end":13366000,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366005,"byte_end":13366008,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366013,"byte_end":13366070,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366075,"byte_end":13366078,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366083,"byte_end":13366095,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366100,"byte_end":13366103,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366108,"byte_end":13366136,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366141,"byte_end":13366144,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366149,"byte_end":13366206,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366211,"byte_end":13366255,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366260,"byte_end":13366263,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366268,"byte_end":13366281,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366286,"byte_end":13366289,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366294,"byte_end":13366367,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366372,"byte_end":13366423,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13367300,"byte_end":13367317,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366727,"byte_end":13366804,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366809,"byte_end":13366874,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366879,"byte_end":13366882,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366887,"byte_end":13366963,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13366968,"byte_end":13367013,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13367018,"byte_end":13367021,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13367026,"byte_end":13367101,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13367106,"byte_end":13367180,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13367185,"byte_end":13367188,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13367193,"byte_end":13367205,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13367210,"byte_end":13367213,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13367218,"byte_end":13367288,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371559,"byte_end":13371571,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1714},{"krate":0,"index":1715}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372263,"byte_end":13372266,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371691,"byte_end":13371747,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371752,"byte_end":13371755,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371760,"byte_end":13371772,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371777,"byte_end":13371780,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371785,"byte_end":13371837,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371842,"byte_end":13371901,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371906,"byte_end":13371909,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371914,"byte_end":13371917,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371922,"byte_end":13371934,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371939,"byte_end":13371942,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371947,"byte_end":13372007,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372012,"byte_end":13372015,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372020,"byte_end":13372090,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372095,"byte_end":13372168,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372173,"byte_end":13372251,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373669,"byte_end":13373683,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372413,"byte_end":13372504,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372509,"byte_end":13372603,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372608,"byte_end":13372702,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372707,"byte_end":13372802,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372807,"byte_end":13372828,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372833,"byte_end":13372836,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372841,"byte_end":13372878,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372883,"byte_end":13372886,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372891,"byte_end":13372902,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372907,"byte_end":13372924,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372929,"byte_end":13372960,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13372965,"byte_end":13373010,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373015,"byte_end":13373069,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373074,"byte_end":13373126,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373131,"byte_end":13373141,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373146,"byte_end":13373153,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373158,"byte_end":13373161,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373166,"byte_end":13373178,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373183,"byte_end":13373186,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373191,"byte_end":13373243,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373248,"byte_end":13373307,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373312,"byte_end":13373315,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373320,"byte_end":13373323,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373328,"byte_end":13373340,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373345,"byte_end":13373348,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373353,"byte_end":13373413,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373418,"byte_end":13373421,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373426,"byte_end":13373496,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373501,"byte_end":13373574,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13373579,"byte_end":13373657,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374918,"byte_end":13374928,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374142,"byte_end":13374214,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374219,"byte_end":13374222,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374227,"byte_end":13374303,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374308,"byte_end":13374336,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374341,"byte_end":13374344,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374349,"byte_end":13374424,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374429,"byte_end":13374505,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374510,"byte_end":13374575,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374580,"byte_end":13374583,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374588,"byte_end":13374600,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374605,"byte_end":13374608,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374613,"byte_end":13374685,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374690,"byte_end":13374766,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374771,"byte_end":13374844,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374849,"byte_end":13374852,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13374857,"byte_end":13374906,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13376479,"byte_end":13376494,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375231,"byte_end":13375296,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375301,"byte_end":13375304,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375309,"byte_end":13375383,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375388,"byte_end":13375461,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375466,"byte_end":13375516,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375521,"byte_end":13375524,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375529,"byte_end":13375602,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375607,"byte_end":13375682,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375687,"byte_end":13375723,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375728,"byte_end":13375731,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375736,"byte_end":13375754,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375759,"byte_end":13375762,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375767,"byte_end":13375812,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375817,"byte_end":13375820,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375825,"byte_end":13375900,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375905,"byte_end":13375966,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375971,"byte_end":13375974,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13375979,"byte_end":13376054,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13376059,"byte_end":13376106,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13376111,"byte_end":13376114,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13376119,"byte_end":13376195,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13376200,"byte_end":13376273,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13376278,"byte_end":13376281,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13376286,"byte_end":13376359,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13376364,"byte_end":13376367,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13376372,"byte_end":13376384,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13376389,"byte_end":13376392,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13376397,"byte_end":13376467,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377335,"byte_end":13377350,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13376974,"byte_end":13377019,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377024,"byte_end":13377027,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377032,"byte_end":13377104,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377109,"byte_end":13377184,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377189,"byte_end":13377257,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377262,"byte_end":13377265,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377270,"byte_end":13377323,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378704,"byte_end":13378720,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377452,"byte_end":13377518,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377523,"byte_end":13377526,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377531,"byte_end":13377606,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377611,"byte_end":13377685,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377690,"byte_end":13377740,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377745,"byte_end":13377748,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377753,"byte_end":13377826,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377831,"byte_end":13377906,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377911,"byte_end":13377947,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377952,"byte_end":13377955,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377960,"byte_end":13377978,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377983,"byte_end":13377986,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13377991,"byte_end":13378036,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378041,"byte_end":13378044,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378049,"byte_end":13378124,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378129,"byte_end":13378190,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378195,"byte_end":13378198,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378203,"byte_end":13378278,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378283,"byte_end":13378331,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378336,"byte_end":13378339,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378344,"byte_end":13378420,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378425,"byte_end":13378498,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378503,"byte_end":13378506,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378511,"byte_end":13378584,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378589,"byte_end":13378592,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378597,"byte_end":13378609,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378614,"byte_end":13378617,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13378622,"byte_end":13378692,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13379567,"byte_end":13379583,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13379201,"byte_end":13379248,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13379253,"byte_end":13379256,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13379261,"byte_end":13379334,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13379339,"byte_end":13379414,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13379419,"byte_end":13379487,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13379492,"byte_end":13379495,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13379500,"byte_end":13379555,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1920},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13383446,"byte_end":13383454,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1922}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13383583,"byte_end":13383592,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1925}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1926},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13383906,"byte_end":13383911,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384537,"byte_end":13384547,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384434,"byte_end":13384509,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384514,"byte_end":13384525,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384954,"byte_end":13384961,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384630,"byte_end":13384679,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384684,"byte_end":13384687,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384692,"byte_end":13384704,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384709,"byte_end":13384712,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384717,"byte_end":13384791,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384796,"byte_end":13384846,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384851,"byte_end":13384915,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384920,"byte_end":13384942,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13385462,"byte_end":13385472,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13385360,"byte_end":13385434,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13385439,"byte_end":13385450,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1928},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\seek.rs","byte_start":13388709,"byte_end":13388713,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1931},{"krate":0,"index":1932}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\seek.rs","byte_start":13388546,"byte_end":13388612,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\seek.rs","byte_start":13388630,"byte_end":13388697,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":3282},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":13392017,"byte_end":13392032,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":3283},{"krate":0,"index":3285},{"krate":0,"index":3287},{"krate":0,"index":3288}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":13394732,"byte_end":13394742,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":3282},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":13397633,"byte_end":13397642,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":3282},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3287},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":13399042,"byte_end":13399047,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3282},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":13400897,"byte_end":13400902,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":3282},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3290},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13403081,"byte_end":13403093,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":3291},{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3298},{"krate":0,"index":3305},{"krate":0,"index":3307},{"krate":0,"index":3309},{"krate":0,"index":3311},{"krate":0,"index":3313},{"krate":0,"index":3315},{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3323},{"krate":0,"index":3325},{"krate":0,"index":3327},{"krate":0,"index":3329},{"krate":0,"index":3331},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3337},{"krate":0,"index":3339},{"krate":0,"index":3300},{"krate":0,"index":3302},{"krate":0,"index":3304}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13404213,"byte_end":13404218,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13407047,"byte_end":13407051,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13409353,"byte_end":13409361,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13411258,"byte_end":13411268,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3305},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13412705,"byte_end":13412712,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13414001,"byte_end":13414008,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3309},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13415339,"byte_end":13415347,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13416687,"byte_end":13416695,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13417976,"byte_end":13417984,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13419279,"byte_end":13419287,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13420650,"byte_end":13420658,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13421951,"byte_end":13421959,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13423419,"byte_end":13423428,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13424822,"byte_end":13424831,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3325},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13426178,"byte_end":13426189,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13427550,"byte_end":13427561,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13428862,"byte_end":13428873,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13430185,"byte_end":13430196,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13431577,"byte_end":13431588,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13432882,"byte_end":13432893,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13434371,"byte_end":13434383,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13435777,"byte_end":13435789,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13437448,"byte_end":13437459,"line_start":1024,"line_end":1024,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13439014,"byte_end":13439028,"line_start":1071,"line_end":1071,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3304},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13440320,"byte_end":13440324,"line_start":1109,"line_end":1109,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441366,"byte_end":13441378,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2106}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440591,"byte_end":13440664,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440665,"byte_end":13440668,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440669,"byte_end":13440740,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440741,"byte_end":13440744,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440745,"byte_end":13440759,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440760,"byte_end":13440763,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440764,"byte_end":13440771,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440772,"byte_end":13440808,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440809,"byte_end":13440835,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440836,"byte_end":13440839,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440840,"byte_end":13440858,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440859,"byte_end":13440898,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440899,"byte_end":13440948,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440949,"byte_end":13440952,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13440953,"byte_end":13441006,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441007,"byte_end":13441054,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441055,"byte_end":13441058,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441059,"byte_end":13441088,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441089,"byte_end":13441134,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441135,"byte_end":13441160,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441161,"byte_end":13441193,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441194,"byte_end":13441197,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441198,"byte_end":13441212,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441213,"byte_end":13441218,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441219,"byte_end":13441226,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441227,"byte_end":13441230,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441231,"byte_end":13441290,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441291,"byte_end":13441294,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441295,"byte_end":13441323,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441324,"byte_end":13441355,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13442095,"byte_end":13442099,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441396,"byte_end":13441465,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441470,"byte_end":13441523,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441528,"byte_end":13441531,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441536,"byte_end":13441613,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441618,"byte_end":13441640,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441645,"byte_end":13441648,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441653,"byte_end":13441667,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441672,"byte_end":13441675,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441680,"byte_end":13441693,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441698,"byte_end":13441722,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441727,"byte_end":13441753,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441758,"byte_end":13441761,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441766,"byte_end":13441792,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441797,"byte_end":13441800,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441805,"byte_end":13441850,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441855,"byte_end":13441903,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441908,"byte_end":13441949,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441954,"byte_end":13441957,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441962,"byte_end":13441999,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13442004,"byte_end":13442046,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13442051,"byte_end":13442063,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13442068,"byte_end":13442075,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13442080,"byte_end":13442087,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3342},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13444302,"byte_end":13444315,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3348},{"krate":0,"index":3352},{"krate":0,"index":3354},{"krate":0,"index":3356},{"krate":0,"index":3358},{"krate":0,"index":3360},{"krate":0,"index":3362},{"krate":0,"index":3364},{"krate":0,"index":3366},{"krate":0,"index":3368},{"krate":0,"index":3370},{"krate":0,"index":3372},{"krate":0,"index":3374},{"krate":0,"index":3376},{"krate":0,"index":3378},{"krate":0,"index":3380},{"krate":0,"index":3382},{"krate":0,"index":3384},{"krate":0,"index":3386},{"krate":0,"index":3350},{"krate":0,"index":3351}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13446157,"byte_end":13446162,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13448964,"byte_end":13448973,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13450315,"byte_end":13450324,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13451724,"byte_end":13451732,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13452993,"byte_end":13453001,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13454316,"byte_end":13454325,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13455638,"byte_end":13455647,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13456987,"byte_end":13456996,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13458331,"byte_end":13458340,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13459717,"byte_end":13459726,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13461113,"byte_end":13461122,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13462577,"byte_end":13462587,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13463977,"byte_end":13463987,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13465319,"byte_end":13465331,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13466658,"byte_end":13466670,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3376},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13468024,"byte_end":13468036,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13469385,"byte_end":13469397,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3380},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13470788,"byte_end":13470800,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13472201,"byte_end":13472213,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3384},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13473680,"byte_end":13473693,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13475095,"byte_end":13475108,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13476128,"byte_end":13476133,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13477423,"byte_end":13477431,"line_start":997,"line_end":997,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13639},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13478840,"byte_end":13478849,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":13641},{"krate":0,"index":13642},{"krate":0,"index":13643},{"krate":0,"index":13644}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13479185,"byte_end":13479188,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13479043,"byte_end":13479135,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13479140,"byte_end":13479173,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13479350,"byte_end":13479363,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13479273,"byte_end":13479338,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480039,"byte_end":13480046,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13479902,"byte_end":13479948,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13479953,"byte_end":13479956,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13479961,"byte_end":13480027,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480238,"byte_end":13480245,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480093,"byte_end":13480147,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480152,"byte_end":13480155,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480160,"byte_end":13480226,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480456,"byte_end":13480467,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480304,"byte_end":13480365,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480370,"byte_end":13480373,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480378,"byte_end":13480444,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480698,"byte_end":13480708,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480547,"byte_end":13480610,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480615,"byte_end":13480618,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480623,"byte_end":13480686,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480912,"byte_end":13480918,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480752,"byte_end":13480808,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480813,"byte_end":13480816,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13480821,"byte_end":13480900,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":13612},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13485164,"byte_end":13485173,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":13614}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2332},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13485452,"byte_end":13485455,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13485298,"byte_end":13485355,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13485360,"byte_end":13485363,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13485368,"byte_end":13485440,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13485787,"byte_end":13485800,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13485587,"byte_end":13485672,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13485677,"byte_end":13485690,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13485695,"byte_end":13485698,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13485703,"byte_end":13485775,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486257,"byte_end":13486264,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486112,"byte_end":13486162,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486167,"byte_end":13486170,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486175,"byte_end":13486245,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486484,"byte_end":13486491,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486331,"byte_end":13486389,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486394,"byte_end":13486397,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486402,"byte_end":13486472,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486726,"byte_end":13486737,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486566,"byte_end":13486631,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486636,"byte_end":13486639,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486644,"byte_end":13486714,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13487001,"byte_end":13487011,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486846,"byte_end":13486913,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486918,"byte_end":13486921,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13486926,"byte_end":13486989,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13562},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13490830,"byte_end":13490839,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":13564},{"krate":0,"index":13565},{"krate":0,"index":13566}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13491147,"byte_end":13491150,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13491005,"byte_end":13491097,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13491102,"byte_end":13491135,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13491312,"byte_end":13491325,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13491235,"byte_end":13491300,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492407,"byte_end":13492414,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492349,"byte_end":13492395,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492605,"byte_end":13492612,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492461,"byte_end":13492515,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492520,"byte_end":13492523,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492528,"byte_end":13492593,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492822,"byte_end":13492833,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492671,"byte_end":13492732,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492737,"byte_end":13492740,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492745,"byte_end":13492810,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13493064,"byte_end":13493074,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492913,"byte_end":13492976,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492981,"byte_end":13492984,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13492989,"byte_end":13493052,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13493186,"byte_end":13493192,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13493118,"byte_end":13493174,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":13513},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13495825,"byte_end":13495830,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":13516},{"krate":0,"index":13517},{"krate":0,"index":13518}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496271,"byte_end":13496278,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496197,"byte_end":13496259,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496610,"byte_end":13496617,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496347,"byte_end":13496417,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496422,"byte_end":13496425,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496430,"byte_end":13496503,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496508,"byte_end":13496581,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496586,"byte_end":13496598,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496976,"byte_end":13496987,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496706,"byte_end":13496783,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496788,"byte_end":13496791,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496796,"byte_end":13496869,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496874,"byte_end":13496947,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496952,"byte_end":13496964,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13497184,"byte_end":13497194,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13497116,"byte_end":13497172,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3392},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\copy.rs","byte_start":13499770,"byte_end":13499774,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\copy.rs","byte_start":13499687,"byte_end":13499754,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\copy.rs","byte_start":13501039,"byte_end":13501043,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R, W>(&'a mut R, &'a mut W) -> Copy where R: AsyncRead +\nUnpin + ?Sized, W: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":13503800,"byte_end":13503805,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3409}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":13504484,"byte_end":13504489,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3411},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\flush.rs","byte_start":13505706,"byte_end":13505711,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":3414}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":13474},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13506827,"byte_end":13506832,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":13476},{"krate":0,"index":13477},{"krate":0,"index":13478},{"krate":0,"index":13479}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507679,"byte_end":13507688,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507189,"byte_end":13507229,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507234,"byte_end":13507237,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507242,"byte_end":13507256,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507261,"byte_end":13507264,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507269,"byte_end":13507276,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507281,"byte_end":13507315,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507320,"byte_end":13507355,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507360,"byte_end":13507363,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507368,"byte_end":13507451,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507456,"byte_end":13507496,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507501,"byte_end":13507504,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507509,"byte_end":13507562,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507567,"byte_end":13507610,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507615,"byte_end":13507620,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507625,"byte_end":13507637,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507642,"byte_end":13507649,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507654,"byte_end":13507661,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507915,"byte_end":13507922,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507848,"byte_end":13507903,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13508041,"byte_end":13508048,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507982,"byte_end":13508029,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13508335,"byte_end":13508345,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13508100,"byte_end":13508161,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13508166,"byte_end":13508169,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13508174,"byte_end":13508237,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13508242,"byte_end":13508323,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13508464,"byte_end":13508478,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3419},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510607,"byte_end":13510619,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":3420},{"krate":0,"index":3421}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13509819,"byte_end":13509878,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13509879,"byte_end":13509882,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13509883,"byte_end":13509962,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13509963,"byte_end":13510039,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510040,"byte_end":13510102,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510103,"byte_end":13510106,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510107,"byte_end":13510120,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510121,"byte_end":13510124,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510125,"byte_end":13510132,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510133,"byte_end":13510177,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510178,"byte_end":13510229,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510230,"byte_end":13510287,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510288,"byte_end":13510291,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510292,"byte_end":13510329,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510330,"byte_end":13510333,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510334,"byte_end":13510361,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510362,"byte_end":13510401,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510402,"byte_end":13510432,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510433,"byte_end":13510436,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510437,"byte_end":13510474,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510475,"byte_end":13510478,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510479,"byte_end":13510518,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510519,"byte_end":13510549,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510550,"byte_end":13510562,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510563,"byte_end":13510570,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13510571,"byte_end":13510578,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13511916,"byte_end":13511922,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13511682,"byte_end":13511765,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13511766,"byte_end":13511769,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13511770,"byte_end":13511844,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13511845,"byte_end":13511908,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":3432},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read.rs","byte_start":13516851,"byte_end":13516855,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":3435},{"krate":0,"index":3436}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read.rs","byte_start":13516768,"byte_end":13516835,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3441},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_buf.rs","byte_start":13517918,"byte_end":13517925,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":3445},{"krate":0,"index":3446}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_buf.rs","byte_start":13517835,"byte_end":13517902,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3452},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_exact.rs","byte_start":13519174,"byte_end":13519183,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_exact.rs","byte_start":13519091,"byte_end":13519158,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":13432},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523507,"byte_end":13523513,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":13434}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13399},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523529,"byte_end":13523535,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":13401}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13354},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523551,"byte_end":13523558,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":13356},{"krate":0,"index":13357},{"krate":0,"index":13359}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13309},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523583,"byte_end":13523590,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":13311},{"krate":0,"index":13312},{"krate":0,"index":13314}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13264},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523615,"byte_end":13523622,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":13266},{"krate":0,"index":13267},{"krate":0,"index":13269}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13219},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523647,"byte_end":13523655,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":13221},{"krate":0,"index":13222},{"krate":0,"index":13224}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13174},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523683,"byte_end":13523690,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":13176},{"krate":0,"index":13177},{"krate":0,"index":13179}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13129},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523715,"byte_end":13523722,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":13131},{"krate":0,"index":13132},{"krate":0,"index":13134}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13084},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523747,"byte_end":13523754,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":13086},{"krate":0,"index":13087},{"krate":0,"index":13089}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13039},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523779,"byte_end":13523787,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":13041},{"krate":0,"index":13042},{"krate":0,"index":13044}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12994},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523815,"byte_end":13523824,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":12996},{"krate":0,"index":12997},{"krate":0,"index":12999}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12949},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523852,"byte_end":13523861,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":12951},{"krate":0,"index":12952},{"krate":0,"index":12954}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12904},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523889,"byte_end":13523898,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":12906},{"krate":0,"index":12907},{"krate":0,"index":12909}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12859},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523926,"byte_end":13523936,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":12861},{"krate":0,"index":12862},{"krate":0,"index":12864}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12814},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13523967,"byte_end":13523976,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":12816},{"krate":0,"index":12817},{"krate":0,"index":12819}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12769},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13524004,"byte_end":13524013,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":12771},{"krate":0,"index":12772},{"krate":0,"index":12774}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12724},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13524041,"byte_end":13524050,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":12726},{"krate":0,"index":12727},{"krate":0,"index":12729}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12679},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":13524078,"byte_end":13524088,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":12681},{"krate":0,"index":12682},{"krate":0,"index":12684}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3606},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_line.rs","byte_start":13524538,"byte_end":13524546,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_line.rs","byte_start":13524455,"byte_end":13524522,"line_start":14,"line_end":14,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3617},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_end.rs","byte_start":13528501,"byte_end":13528510,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3622}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_end.rs","byte_start":13528371,"byte_end":13528438,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_string.rs","byte_start":13534645,"byte_end":13534657,"line_start":14,"line_end":14,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_string.rs","byte_start":13534562,"byte_end":13534629,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3638},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_until.rs","byte_start":13537422,"byte_end":13537431,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":3644}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_until.rs","byte_start":13537339,"byte_end":13537406,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\repeat.rs","byte_start":13539877,"byte_end":13539883,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3651}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\repeat.rs","byte_start":13540569,"byte_end":13540575,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\shutdown.rs","byte_start":13541524,"byte_end":13541532,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":3657}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\sink.rs","byte_start":13542704,"byte_end":13542708,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3663}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\sink.rs","byte_start":13543549,"byte_end":13543553,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":12640},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13544798,"byte_end":13544803,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":12642},{"krate":0,"index":12643},{"krate":0,"index":12644},{"krate":0,"index":12645}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545664,"byte_end":13545676,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545152,"byte_end":13545195,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545200,"byte_end":13545203,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545208,"byte_end":13545222,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545227,"byte_end":13545230,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545235,"byte_end":13545242,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545247,"byte_end":13545281,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545286,"byte_end":13545321,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545326,"byte_end":13545329,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545334,"byte_end":13545417,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545422,"byte_end":13545469,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545474,"byte_end":13545477,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545482,"byte_end":13545544,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545549,"byte_end":13545595,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545600,"byte_end":13545605,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545610,"byte_end":13545622,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545627,"byte_end":13545634,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545639,"byte_end":13545646,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545914,"byte_end":13545931,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12593},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13558725,"byte_end":13558737,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":12596},{"krate":0,"index":12597}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13560013,"byte_end":13560026,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"pub fn stream_reader<S, B>(S) -> StreamReader<S, B> where S: Stream<Item =\nResult<B, io::Error>>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13558814,"byte_end":13558894,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13558895,"byte_end":13558898,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13558899,"byte_end":13558912,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13558913,"byte_end":13558916,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13558917,"byte_end":13558924,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13558925,"byte_end":13558946,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13558947,"byte_end":13558996,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13558997,"byte_end":13559017,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559018,"byte_end":13559064,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559065,"byte_end":13559068,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559069,"byte_end":13559109,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559110,"byte_end":13559152,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559153,"byte_end":13559199,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559200,"byte_end":13559246,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559247,"byte_end":13559295,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559296,"byte_end":13559303,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559304,"byte_end":13559307,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559308,"byte_end":13559342,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559343,"byte_end":13559384,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559385,"byte_end":13559388,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559389,"byte_end":13559428,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559429,"byte_end":13559454,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559455,"byte_end":13559492,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559493,"byte_end":13559530,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559531,"byte_end":13559534,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559535,"byte_end":13559577,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559578,"byte_end":13559624,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559625,"byte_end":13559662,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559663,"byte_end":13559666,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559667,"byte_end":13559694,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559695,"byte_end":13559741,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559742,"byte_end":13559784,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559785,"byte_end":13559788,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559789,"byte_end":13559824,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559825,"byte_end":13559871,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559872,"byte_end":13559875,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559876,"byte_end":13559888,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559889,"byte_end":13559896,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13559897,"byte_end":13559904,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12551},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13564415,"byte_end":13564427,"line_start":25,"line_end":25,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::util::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":12553},{"krate":0,"index":12554}],"decl_id":null,"docs":" Convert an [`AsyncRead`] implementor into a\n [`Stream`] of Result<[`Bytes`], std::io::Error>.\n After first error it will stop.\n Additionally, this stream is fused: after it returns None at some\n moment, it is guaranteed that further `next()`, `poll_next()` and\n similar functions will instantly return None.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3756},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565572,"byte_end":13565585,"line_start":63,"line_end":63,"column_start":8,"column_end":21},"name":"reader_stream","qualname":"::io::util::reader_stream::reader_stream","value":"pub fn reader_stream<R>(R) -> ReaderStream<R> where R: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] implementor into a\n [`Stream`] of Result<[`Bytes`], std::io::Error>.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] implementor into a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13564900,"byte_end":13564947,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`Stream`] of Result<[`Bytes`], std::io::Error>.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13564948,"byte_end":13565000,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565001,"byte_end":13565004,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565005,"byte_end":13565018,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565019,"byte_end":13565022,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565023,"byte_end":13565030,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565031,"byte_end":13565051,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565052,"byte_end":13565098,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565099,"byte_end":13565132,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565133,"byte_end":13565136,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let data: &[u8] = b\"hello, world!\";","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565137,"byte_end":13565176,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ let mut stream = tokio::io::reader_stream(data);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565177,"byte_end":13565229,"line_start":50,"line_end":50,"column_start":1,"column_end":53}},{"value":"/ let mut stream_contents = Vec::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565230,"byte_end":13565271,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/ while let Some(chunk) = stream.next().await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565272,"byte_end":13565321,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/    stream_contents.extend_from_slice(chunk?.as_ref());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565322,"byte_end":13565380,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565381,"byte_end":13565386,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(stream_contents, data);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565387,"byte_end":13565425,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565426,"byte_end":13565438,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565439,"byte_end":13565446,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565447,"byte_end":13565454,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565455,"byte_end":13565458,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565459,"byte_end":13565498,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565499,"byte_end":13565536,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/ [`Bytes`]: bytes::Bytes","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565537,"byte_end":13565564,"line_start":62,"line_end":62,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":12511},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13547526,"byte_end":13547530,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12513},{"krate":0,"index":12514}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548120,"byte_end":13548125,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13547817,"byte_end":13547870,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13547875,"byte_end":13547921,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13547926,"byte_end":13547929,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13547934,"byte_end":13547944,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13547949,"byte_end":13547952,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13547957,"byte_end":13548034,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548039,"byte_end":13548108,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3145},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548444,"byte_end":13548453,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548173,"byte_end":13548244,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548249,"byte_end":13548323,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548328,"byte_end":13548403,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548408,"byte_end":13548432,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548576,"byte_end":13548583,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548518,"byte_end":13548564,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3147},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548875,"byte_end":13548882,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548630,"byte_end":13548684,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548689,"byte_end":13548692,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548697,"byte_end":13548770,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548775,"byte_end":13548847,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548852,"byte_end":13548863,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3148},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13549193,"byte_end":13549204,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13548941,"byte_end":13549002,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13549007,"byte_end":13549010,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13549015,"byte_end":13549088,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13549093,"byte_end":13549165,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13549170,"byte_end":13549181,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3149},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13549350,"byte_end":13549360,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13549284,"byte_end":13549338,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3770},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write.rs","byte_start":13551290,"byte_end":13551295,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":3773},{"krate":0,"index":3774}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write.rs","byte_start":13551207,"byte_end":13551274,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3779},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_all.rs","byte_start":13552191,"byte_end":13552199,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":3782},{"krate":0,"index":3783}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_all.rs","byte_start":13552108,"byte_end":13552175,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_buf.rs","byte_start":13553582,"byte_end":13553590,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":3792},{"krate":0,"index":3793}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_buf.rs","byte_start":13553499,"byte_end":13553566,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":12465},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557471,"byte_end":13557478,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":12467},{"krate":0,"index":12468}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12428},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557494,"byte_end":13557501,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":12430},{"krate":0,"index":12431}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12383},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557517,"byte_end":13557525,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":12385},{"krate":0,"index":12386},{"krate":0,"index":12388}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12338},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557550,"byte_end":13557558,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":12340},{"krate":0,"index":12341},{"krate":0,"index":12343}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12293},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557583,"byte_end":13557591,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":12295},{"krate":0,"index":12296},{"krate":0,"index":12298}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12248},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557616,"byte_end":13557625,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":12250},{"krate":0,"index":12251},{"krate":0,"index":12253}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12203},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557653,"byte_end":13557661,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":12205},{"krate":0,"index":12206},{"krate":0,"index":12208}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12158},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557686,"byte_end":13557694,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":12160},{"krate":0,"index":12161},{"krate":0,"index":12163}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12113},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557719,"byte_end":13557727,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":12115},{"krate":0,"index":12116},{"krate":0,"index":12118}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12068},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557752,"byte_end":13557761,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":12070},{"krate":0,"index":12071},{"krate":0,"index":12073}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12023},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557789,"byte_end":13557799,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":12025},{"krate":0,"index":12026},{"krate":0,"index":12028}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11978},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557827,"byte_end":13557837,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":11980},{"krate":0,"index":11981},{"krate":0,"index":11983}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11933},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557865,"byte_end":13557875,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":11935},{"krate":0,"index":11936},{"krate":0,"index":11938}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11888},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557903,"byte_end":13557914,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":11890},{"krate":0,"index":11891},{"krate":0,"index":11893}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11843},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557945,"byte_end":13557955,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":11845},{"krate":0,"index":11846},{"krate":0,"index":11848}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11798},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13557983,"byte_end":13557993,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":11800},{"krate":0,"index":11801},{"krate":0,"index":11803}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11753},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13558021,"byte_end":13558031,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":11755},{"krate":0,"index":11756},{"krate":0,"index":11758}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11708},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":13558059,"byte_end":13558070,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":11710},{"krate":0,"index":11711},{"krate":0,"index":11713}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":531},{"krate":0,"index":3955},{"krate":0,"index":4366},{"krate":0,"index":4369}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":71949,"byte_end":71967,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":71969,"byte_end":72007,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72008,"byte_end":72011,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72012,"byte_end":72095,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72096,"byte_end":72161,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72162,"byte_end":72165,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72166,"byte_end":72184,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72185,"byte_end":72188,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72189,"byte_end":72277,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72278,"byte_end":72347,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72348,"byte_end":72436,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72437,"byte_end":72495,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72496,"byte_end":72559,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72560,"byte_end":72625,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72627,"byte_end":72630,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72631,"byte_end":72663,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72664,"byte_end":72692,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72693,"byte_end":72721,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72722,"byte_end":72756,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72757,"byte_end":72787,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72788,"byte_end":72822,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74079,"byte_end":74092,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73391,"byte_end":73468,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73469,"byte_end":73472,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73473,"byte_end":73482,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73483,"byte_end":73486,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73487,"byte_end":73564,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73565,"byte_end":73636,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73637,"byte_end":73664,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73665,"byte_end":73668,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73669,"byte_end":73682,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73683,"byte_end":73686,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73687,"byte_end":73764,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73765,"byte_end":73837,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73838,"byte_end":73907,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73908,"byte_end":73911,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73912,"byte_end":73991,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73992,"byte_end":74068,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80099,"byte_end":80116,"line_start":250,"line_end":250,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80132,"byte_end":80136,"line_start":251,"line_end":251,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80197,"byte_end":80203,"line_start":252,"line_end":252,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80275,"byte_end":80290,"line_start":254,"line_end":254,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3955},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","parent":null,"children":[{"krate":0,"index":3956},{"krate":0,"index":4027},{"krate":0,"index":4030},{"krate":0,"index":4057},{"krate":0,"index":4060},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4120},{"krate":0,"index":4123},{"krate":0,"index":4199},{"krate":0,"index":4200},{"krate":0,"index":4203},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4209},{"krate":0,"index":4363}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":13566781,"byte_end":13566802,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4372},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569402,"byte_end":13569413,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":4373}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571382,"byte_end":13571386,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569496,"byte_end":13569572,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569577,"byte_end":13569580,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569585,"byte_end":13569646,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569651,"byte_end":13569654,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569659,"byte_end":13569734,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569739,"byte_end":13569815,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569820,"byte_end":13569831,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569836,"byte_end":13569839,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569844,"byte_end":13569919,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569924,"byte_end":13569998,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570003,"byte_end":13570080,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570085,"byte_end":13570088,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570093,"byte_end":13570169,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570174,"byte_end":13570247,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570252,"byte_end":13570325,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570330,"byte_end":13570382,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570387,"byte_end":13570390,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570395,"byte_end":13570458,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570463,"byte_end":13570466,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570471,"byte_end":13570525,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570530,"byte_end":13570533,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570538,"byte_end":13570552,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570557,"byte_end":13570560,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570565,"byte_end":13570578,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570583,"byte_end":13570615,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570620,"byte_end":13570623,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570628,"byte_end":13570644,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570649,"byte_end":13570652,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570657,"byte_end":13570675,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570680,"byte_end":13570719,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570724,"byte_end":13570790,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570795,"byte_end":13570798,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570803,"byte_end":13570830,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570835,"byte_end":13570838,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570843,"byte_end":13570870,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570875,"byte_end":13570889,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570894,"byte_end":13570899,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570904,"byte_end":13570911,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570916,"byte_end":13570919,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570924,"byte_end":13570954,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570959,"byte_end":13570962,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570967,"byte_end":13570980,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13570985,"byte_end":13571017,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571022,"byte_end":13571049,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571054,"byte_end":13571057,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571062,"byte_end":13571078,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571083,"byte_end":13571086,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571091,"byte_end":13571109,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571114,"byte_end":13571153,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571158,"byte_end":13571243,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571248,"byte_end":13571251,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571256,"byte_end":13571283,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571288,"byte_end":13571291,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571296,"byte_end":13571323,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571328,"byte_end":13571342,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571347,"byte_end":13571352,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13571357,"byte_end":13571364,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572958,"byte_end":13572964,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572099,"byte_end":13572156,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572161,"byte_end":13572164,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572169,"byte_end":13572244,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572249,"byte_end":13572319,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572324,"byte_end":13572353,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572358,"byte_end":13572361,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572366,"byte_end":13572413,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572418,"byte_end":13572421,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572426,"byte_end":13572440,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572445,"byte_end":13572448,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572453,"byte_end":13572466,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572471,"byte_end":13572503,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572508,"byte_end":13572511,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572516,"byte_end":13572532,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572537,"byte_end":13572540,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572545,"byte_end":13572563,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572568,"byte_end":13572607,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572612,"byte_end":13572682,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572687,"byte_end":13572690,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572695,"byte_end":13572734,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572739,"byte_end":13572809,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572814,"byte_end":13572877,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572882,"byte_end":13572891,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572896,"byte_end":13572899,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572904,"byte_end":13572918,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572923,"byte_end":13572928,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13572933,"byte_end":13572940,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4007},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13573291,"byte_end":13573302,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13573077,"byte_end":13573140,"line_start":188,"line_end":188,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13573145,"byte_end":13573148,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13573153,"byte_end":13573225,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ the current task will be notified by a waker.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13573230,"byte_end":13573279,"line_start":191,"line_end":191,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4009},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576164,"byte_end":13576172,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574149,"byte_end":13574221,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574226,"byte_end":13574229,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574234,"byte_end":13574304,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574309,"byte_end":13574385,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574390,"byte_end":13574434,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574439,"byte_end":13574442,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574447,"byte_end":13574522,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574527,"byte_end":13574603,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574608,"byte_end":13574673,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574678,"byte_end":13574733,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574738,"byte_end":13574741,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574746,"byte_end":13574817,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574822,"byte_end":13574897,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574902,"byte_end":13574941,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574946,"byte_end":13574949,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13574954,"byte_end":13575017,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575022,"byte_end":13575025,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575030,"byte_end":13575103,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575108,"byte_end":13575139,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575144,"byte_end":13575147,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575152,"byte_end":13575225,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575230,"byte_end":13575305,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575310,"byte_end":13575383,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575388,"byte_end":13575415,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575420,"byte_end":13575423,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575428,"byte_end":13575442,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575447,"byte_end":13575450,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575455,"byte_end":13575473,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575478,"byte_end":13575504,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575509,"byte_end":13575541,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575546,"byte_end":13575549,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575554,"byte_end":13575572,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575577,"byte_end":13575628,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575633,"byte_end":13575704,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575709,"byte_end":13575769,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575774,"byte_end":13575788,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575793,"byte_end":13575798,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575803,"byte_end":13575810,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575815,"byte_end":13575818,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575823,"byte_end":13575835,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575840,"byte_end":13575843,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575848,"byte_end":13575908,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575913,"byte_end":13575916,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575921,"byte_end":13575991,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13575996,"byte_end":13576069,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576074,"byte_end":13576152,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4011},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577256,"byte_end":13577266,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576530,"byte_end":13576591,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576596,"byte_end":13576599,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576604,"byte_end":13576677,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576682,"byte_end":13576716,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576721,"byte_end":13576724,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576729,"byte_end":13576743,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576748,"byte_end":13576751,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576756,"byte_end":13576774,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576779,"byte_end":13576811,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576816,"byte_end":13576819,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576824,"byte_end":13576840,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576845,"byte_end":13576900,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576905,"byte_end":13576908,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576913,"byte_end":13576931,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576936,"byte_end":13576975,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13576980,"byte_end":13577046,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577051,"byte_end":13577054,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577059,"byte_end":13577101,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577106,"byte_end":13577195,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577200,"byte_end":13577203,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577208,"byte_end":13577222,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577227,"byte_end":13577232,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577237,"byte_end":13577244,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4012},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578697,"byte_end":13578705,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577352,"byte_end":13577426,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577431,"byte_end":13577434,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577439,"byte_end":13577501,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577506,"byte_end":13577509,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577514,"byte_end":13577590,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577595,"byte_end":13577664,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577669,"byte_end":13577698,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577703,"byte_end":13577706,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577711,"byte_end":13577723,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577728,"byte_end":13577731,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577736,"byte_end":13577811,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577816,"byte_end":13577891,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577896,"byte_end":13577970,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13577975,"byte_end":13578050,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578055,"byte_end":13578063,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578068,"byte_end":13578071,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578076,"byte_end":13578090,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578095,"byte_end":13578098,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578103,"byte_end":13578116,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578121,"byte_end":13578174,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578179,"byte_end":13578182,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578187,"byte_end":13578205,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578210,"byte_end":13578231,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578236,"byte_end":13578314,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578319,"byte_end":13578366,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578371,"byte_end":13578374,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578379,"byte_end":13578435,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578440,"byte_end":13578466,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578471,"byte_end":13578502,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578507,"byte_end":13578551,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578556,"byte_end":13578573,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578578,"byte_end":13578631,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578636,"byte_end":13578649,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578654,"byte_end":13578663,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578668,"byte_end":13578673,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578678,"byte_end":13578685,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4013},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579391,"byte_end":13579394,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578774,"byte_end":13578832,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578837,"byte_end":13578840,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578845,"byte_end":13578905,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578910,"byte_end":13578913,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578918,"byte_end":13578955,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578960,"byte_end":13578963,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578968,"byte_end":13578982,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578987,"byte_end":13578990,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13578995,"byte_end":13579008,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579013,"byte_end":13579045,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579050,"byte_end":13579053,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579058,"byte_end":13579074,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579079,"byte_end":13579082,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579087,"byte_end":13579105,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579110,"byte_end":13579149,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579154,"byte_end":13579216,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579221,"byte_end":13579224,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579229,"byte_end":13579286,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579291,"byte_end":13579331,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579336,"byte_end":13579339,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579344,"byte_end":13579357,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579362,"byte_end":13579367,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579372,"byte_end":13579379,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13580033,"byte_end":13580040,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579466,"byte_end":13579524,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579529,"byte_end":13579532,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579537,"byte_end":13579613,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579618,"byte_end":13579639,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579644,"byte_end":13579647,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579652,"byte_end":13579666,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579671,"byte_end":13579674,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579679,"byte_end":13579692,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579697,"byte_end":13579729,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579734,"byte_end":13579737,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579742,"byte_end":13579758,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579763,"byte_end":13579766,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579771,"byte_end":13579789,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579794,"byte_end":13579833,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579838,"byte_end":13579901,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579906,"byte_end":13579909,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579914,"byte_end":13579972,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579977,"byte_end":13579980,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13579985,"byte_end":13579999,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13580004,"byte_end":13580009,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13580014,"byte_end":13580021,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4374},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13582313,"byte_end":13582321,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":4376}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13582111,"byte_end":13582187,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13582188,"byte_end":13582235,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13582236,"byte_end":13582284,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4053},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13582736,"byte_end":13582747,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13582499,"byte_end":13582572,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13582577,"byte_end":13582592,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13582597,"byte_end":13582600,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13582605,"byte_end":13582674,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13582679,"byte_end":13582724,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4380},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584315,"byte_end":13584323,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13583898,"byte_end":13583962,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13583963,"byte_end":13583966,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13583967,"byte_end":13584055,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584056,"byte_end":13584133,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584134,"byte_end":13584137,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584138,"byte_end":13584166,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584167,"byte_end":13584200,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584201,"byte_end":13584252,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584253,"byte_end":13584286,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4387},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585021,"byte_end":13585030,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584345,"byte_end":13584410,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584411,"byte_end":13584414,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584415,"byte_end":13584501,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584502,"byte_end":13584554,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584555,"byte_end":13584558,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584559,"byte_end":13584640,"line_start":39,"line_end":39,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584641,"byte_end":13584726,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584727,"byte_end":13584730,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584731,"byte_end":13584759,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584760,"byte_end":13584793,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584794,"byte_end":13584841,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584842,"byte_end":13584904,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584905,"byte_end":13584958,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13584959,"byte_end":13584992,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4098},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586087,"byte_end":13586096,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585204,"byte_end":13585278,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585283,"byte_end":13585356,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585361,"byte_end":13585375,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585380,"byte_end":13585383,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585388,"byte_end":13585461,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585466,"byte_end":13585469,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585474,"byte_end":13585488,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585493,"byte_end":13585496,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585501,"byte_end":13585514,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585519,"byte_end":13585537,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585542,"byte_end":13585572,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585577,"byte_end":13585580,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585585,"byte_end":13585618,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585623,"byte_end":13585626,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585631,"byte_end":13585649,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585654,"byte_end":13585693,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585698,"byte_end":13585767,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585772,"byte_end":13585820,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585825,"byte_end":13585855,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585860,"byte_end":13585863,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585868,"byte_end":13585890,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585895,"byte_end":13585940,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585945,"byte_end":13585963,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585968,"byte_end":13585971,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585976,"byte_end":13585990,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585995,"byte_end":13586000,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586005,"byte_end":13586012,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586017,"byte_end":13586020,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586025,"byte_end":13586075,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4099},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587513,"byte_end":13587517,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586221,"byte_end":13586291,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586296,"byte_end":13586365,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586370,"byte_end":13586409,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586414,"byte_end":13586417,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586422,"byte_end":13586490,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586495,"byte_end":13586498,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586503,"byte_end":13586543,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586548,"byte_end":13586551,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586556,"byte_end":13586570,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586575,"byte_end":13586578,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586583,"byte_end":13586596,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586601,"byte_end":13586631,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586636,"byte_end":13586662,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586667,"byte_end":13586693,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586698,"byte_end":13586701,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586706,"byte_end":13586724,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586729,"byte_end":13586780,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586785,"byte_end":13586813,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586818,"byte_end":13586887,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586892,"byte_end":13586940,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586945,"byte_end":13586948,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586953,"byte_end":13586982,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13586987,"byte_end":13587016,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587021,"byte_end":13587024,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587029,"byte_end":13587056,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587061,"byte_end":13587108,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587113,"byte_end":13587116,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587121,"byte_end":13587145,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587150,"byte_end":13587209,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587214,"byte_end":13587253,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587258,"byte_end":13587261,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587266,"byte_end":13587280,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587285,"byte_end":13587290,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587295,"byte_end":13587302,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587307,"byte_end":13587310,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587315,"byte_end":13587380,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587385,"byte_end":13587388,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587393,"byte_end":13587439,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587444,"byte_end":13587495,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4394},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590119,"byte_end":13590132,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":4395}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13589684,"byte_end":13589750,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13589751,"byte_end":13589754,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13589755,"byte_end":13589842,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13589843,"byte_end":13589927,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13589928,"byte_end":13589931,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13589932,"byte_end":13589960,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13589961,"byte_end":13590004,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590005,"byte_end":13590056,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590057,"byte_end":13590090,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4398},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590942,"byte_end":13590956,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":4399},{"krate":0,"index":4400}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590165,"byte_end":13590232,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590233,"byte_end":13590236,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590237,"byte_end":13590324,"line_start":40,"line_end":40,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590325,"byte_end":13590402,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590403,"byte_end":13590460,"line_start":42,"line_end":42,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590461,"byte_end":13590464,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590465,"byte_end":13590551,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590552,"byte_end":13590637,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590638,"byte_end":13590641,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590642,"byte_end":13590670,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590671,"byte_end":13590714,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590715,"byte_end":13590762,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590763,"byte_end":13590825,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590826,"byte_end":13590879,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13590880,"byte_end":13590913,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4403},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13591921,"byte_end":13591933,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13591789,"byte_end":13591871,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13591872,"byte_end":13591892,"line_start":86,"line_end":86,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4405},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13591934,"byte_end":13591951,"line_start":88,"line_end":88,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":4403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4406},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13591953,"byte_end":13591971,"line_start":88,"line_end":88,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":4403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4175},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592517,"byte_end":13592524,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592254,"byte_end":13592323,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592328,"byte_end":13592392,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592397,"byte_end":13592449,"line_start":104,"line_end":104,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592454,"byte_end":13592457,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592462,"byte_end":13592505,"line_start":106,"line_end":106,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4176},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593515,"byte_end":13593524,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592631,"byte_end":13592705,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592710,"byte_end":13592783,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592788,"byte_end":13592802,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592807,"byte_end":13592810,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592815,"byte_end":13592888,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592893,"byte_end":13592896,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592901,"byte_end":13592915,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592920,"byte_end":13592923,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592928,"byte_end":13592941,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592946,"byte_end":13592964,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592969,"byte_end":13592999,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593004,"byte_end":13593007,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593012,"byte_end":13593045,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593050,"byte_end":13593053,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593058,"byte_end":13593076,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593081,"byte_end":13593120,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593125,"byte_end":13593190,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593195,"byte_end":13593248,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593253,"byte_end":13593283,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593288,"byte_end":13593291,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593296,"byte_end":13593318,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593323,"byte_end":13593368,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593373,"byte_end":13593391,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593396,"byte_end":13593399,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593404,"byte_end":13593418,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593423,"byte_end":13593428,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593433,"byte_end":13593440,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593445,"byte_end":13593448,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593453,"byte_end":13593503,"line_start":139,"line_end":139,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4177},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594946,"byte_end":13594950,"line_start":183,"line_end":183,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593653,"byte_end":13593723,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593728,"byte_end":13593797,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593802,"byte_end":13593841,"line_start":146,"line_end":146,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593846,"byte_end":13593849,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593854,"byte_end":13593922,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593927,"byte_end":13593930,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593935,"byte_end":13593975,"line_start":150,"line_end":150,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593980,"byte_end":13593983,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13593988,"byte_end":13594002,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594007,"byte_end":13594010,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594015,"byte_end":13594028,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594033,"byte_end":13594063,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594068,"byte_end":13594094,"line_start":156,"line_end":156,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594099,"byte_end":13594125,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594130,"byte_end":13594133,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594138,"byte_end":13594156,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594161,"byte_end":13594212,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594217,"byte_end":13594245,"line_start":161,"line_end":161,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594250,"byte_end":13594315,"line_start":162,"line_end":162,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594320,"byte_end":13594373,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594378,"byte_end":13594381,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594386,"byte_end":13594415,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594420,"byte_end":13594449,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594454,"byte_end":13594457,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594462,"byte_end":13594489,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594494,"byte_end":13594541,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594546,"byte_end":13594549,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594554,"byte_end":13594578,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594583,"byte_end":13594642,"line_start":172,"line_end":172,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594647,"byte_end":13594686,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594691,"byte_end":13594694,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594699,"byte_end":13594713,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594718,"byte_end":13594723,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594728,"byte_end":13594735,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594740,"byte_end":13594743,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594748,"byte_end":13594813,"line_start":179,"line_end":179,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594818,"byte_end":13594821,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594826,"byte_end":13594872,"line_start":181,"line_end":181,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13594877,"byte_end":13594928,"line_start":182,"line_end":182,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4185},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595683,"byte_end":13595690,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595420,"byte_end":13595489,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595494,"byte_end":13595558,"line_start":204,"line_end":204,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595563,"byte_end":13595615,"line_start":205,"line_end":205,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595620,"byte_end":13595623,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595628,"byte_end":13595671,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595995,"byte_end":13596001,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595796,"byte_end":13595868,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595873,"byte_end":13595942,"line_start":213,"line_end":213,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595947,"byte_end":13595983,"line_start":214,"line_end":214,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4409},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13599409,"byte_end":13599418,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":4410}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4295},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601499,"byte_end":13601506,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13599497,"byte_end":13599541,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13599546,"byte_end":13599549,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13599554,"byte_end":13599628,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13599633,"byte_end":13599702,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13599707,"byte_end":13599783,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13599788,"byte_end":13599853,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13599858,"byte_end":13599861,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13599866,"byte_end":13599942,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13599947,"byte_end":13600016,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600021,"byte_end":13600097,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600102,"byte_end":13600161,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600166,"byte_end":13600169,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600174,"byte_end":13600228,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600233,"byte_end":13600236,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600241,"byte_end":13600255,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600260,"byte_end":13600263,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600268,"byte_end":13600281,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600286,"byte_end":13600316,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600321,"byte_end":13600347,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600352,"byte_end":13600378,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600383,"byte_end":13600386,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600391,"byte_end":13600409,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600414,"byte_end":13600465,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600470,"byte_end":13600498,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600503,"byte_end":13600572,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600577,"byte_end":13600580,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600585,"byte_end":13600612,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600617,"byte_end":13600666,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600671,"byte_end":13600674,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600679,"byte_end":13600693,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600698,"byte_end":13600703,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600708,"byte_end":13600715,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600720,"byte_end":13600723,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600728,"byte_end":13600758,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600763,"byte_end":13600766,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600771,"byte_end":13600784,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600789,"byte_end":13600819,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600824,"byte_end":13600850,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600855,"byte_end":13600881,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600886,"byte_end":13600913,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600918,"byte_end":13600921,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600926,"byte_end":13600944,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13600949,"byte_end":13601000,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601005,"byte_end":13601033,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601038,"byte_end":13601126,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601131,"byte_end":13601134,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601139,"byte_end":13601166,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601171,"byte_end":13601220,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601225,"byte_end":13601228,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601233,"byte_end":13601247,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601252,"byte_end":13601257,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601262,"byte_end":13601269,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601274,"byte_end":13601277,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601282,"byte_end":13601353,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601358,"byte_end":13601361,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601366,"byte_end":13601423,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13601428,"byte_end":13601481,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4305},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603939,"byte_end":13603947,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13602972,"byte_end":13603029,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603034,"byte_end":13603037,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603042,"byte_end":13603117,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603122,"byte_end":13603195,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603200,"byte_end":13603203,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603208,"byte_end":13603222,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603227,"byte_end":13603230,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603235,"byte_end":13603253,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603258,"byte_end":13603284,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603289,"byte_end":13603319,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603324,"byte_end":13603327,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603332,"byte_end":13603350,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603355,"byte_end":13603406,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603411,"byte_end":13603485,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603490,"byte_end":13603544,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603549,"byte_end":13603563,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603568,"byte_end":13603573,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603578,"byte_end":13603585,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603590,"byte_end":13603593,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603598,"byte_end":13603610,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603615,"byte_end":13603618,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603623,"byte_end":13603683,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603688,"byte_end":13603691,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603696,"byte_end":13603766,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603771,"byte_end":13603844,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13603849,"byte_end":13603927,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4306},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13604344,"byte_end":13604355,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4310},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605503,"byte_end":13605513,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605104,"byte_end":13605163,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605168,"byte_end":13605171,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605176,"byte_end":13605190,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605195,"byte_end":13605198,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605203,"byte_end":13605216,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605221,"byte_end":13605251,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605256,"byte_end":13605259,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605264,"byte_end":13605328,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605333,"byte_end":13605394,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605399,"byte_end":13605402,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605407,"byte_end":13605450,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605455,"byte_end":13605467,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605472,"byte_end":13605479,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605484,"byte_end":13605491,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4311},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606002,"byte_end":13606011,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605599,"byte_end":13605663,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605668,"byte_end":13605671,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605676,"byte_end":13605690,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605695,"byte_end":13605698,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605703,"byte_end":13605716,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605721,"byte_end":13605751,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605756,"byte_end":13605759,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605764,"byte_end":13605828,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605833,"byte_end":13605894,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605899,"byte_end":13605902,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605907,"byte_end":13605949,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605954,"byte_end":13605966,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605971,"byte_end":13605978,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13605983,"byte_end":13605990,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4312},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13607169,"byte_end":13607178,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606096,"byte_end":13606171,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606176,"byte_end":13606249,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606254,"byte_end":13606268,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606273,"byte_end":13606276,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606281,"byte_end":13606299,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606304,"byte_end":13606307,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606312,"byte_end":13606337,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606342,"byte_end":13606345,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606350,"byte_end":13606401,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606406,"byte_end":13606489,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606494,"byte_end":13606549,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606554,"byte_end":13606557,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606562,"byte_end":13606574,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606579,"byte_end":13606582,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606587,"byte_end":13606662,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606667,"byte_end":13606670,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606675,"byte_end":13606689,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606694,"byte_end":13606697,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606702,"byte_end":13606715,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606720,"byte_end":13606738,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606743,"byte_end":13606773,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606778,"byte_end":13606781,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606786,"byte_end":13606819,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606824,"byte_end":13606827,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606832,"byte_end":13606850,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606855,"byte_end":13606894,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606899,"byte_end":13606968,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13606973,"byte_end":13607003,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13607008,"byte_end":13607011,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13607016,"byte_end":13607038,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13607043,"byte_end":13607085,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13607090,"byte_end":13607108,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13607113,"byte_end":13607116,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13607121,"byte_end":13607135,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13607140,"byte_end":13607145,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13607150,"byte_end":13607157,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4314},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609090,"byte_end":13609094,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13607839,"byte_end":13607909,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13607914,"byte_end":13607983,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13607988,"byte_end":13608027,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608032,"byte_end":13608035,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608040,"byte_end":13608114,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608119,"byte_end":13608179,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608184,"byte_end":13608187,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608192,"byte_end":13608206,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608211,"byte_end":13608214,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608219,"byte_end":13608232,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608237,"byte_end":13608267,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608272,"byte_end":13608298,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608303,"byte_end":13608329,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608334,"byte_end":13608337,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608342,"byte_end":13608360,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608365,"byte_end":13608416,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608421,"byte_end":13608449,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608454,"byte_end":13608523,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608528,"byte_end":13608531,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608536,"byte_end":13608565,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608570,"byte_end":13608599,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608604,"byte_end":13608607,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608612,"byte_end":13608639,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608644,"byte_end":13608688,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608693,"byte_end":13608696,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608701,"byte_end":13608725,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608730,"byte_end":13608786,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608791,"byte_end":13608830,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608835,"byte_end":13608838,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608843,"byte_end":13608857,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608862,"byte_end":13608867,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608872,"byte_end":13608879,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608884,"byte_end":13608887,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608892,"byte_end":13608957,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608962,"byte_end":13608965,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13608970,"byte_end":13609016,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609021,"byte_end":13609072,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4318},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609963,"byte_end":13609971,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609208,"byte_end":13609274,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609279,"byte_end":13609282,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609287,"byte_end":13609359,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609364,"byte_end":13609433,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609438,"byte_end":13609471,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609476,"byte_end":13609479,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609484,"byte_end":13609498,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609503,"byte_end":13609506,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609511,"byte_end":13609524,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609529,"byte_end":13609559,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609564,"byte_end":13609590,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609595,"byte_end":13609622,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609627,"byte_end":13609630,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609635,"byte_end":13609653,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609658,"byte_end":13609709,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609714,"byte_end":13609742,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609747,"byte_end":13609812,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609817,"byte_end":13609820,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609825,"byte_end":13609855,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609860,"byte_end":13609902,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609907,"byte_end":13609910,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609915,"byte_end":13609929,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609934,"byte_end":13609939,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13609944,"byte_end":13609951,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4319},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610597,"byte_end":13610604,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610065,"byte_end":13610127,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610132,"byte_end":13610135,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610140,"byte_end":13610204,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610209,"byte_end":13610212,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610217,"byte_end":13610260,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610265,"byte_end":13610268,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610273,"byte_end":13610287,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610292,"byte_end":13610295,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610300,"byte_end":13610313,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610318,"byte_end":13610348,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610353,"byte_end":13610356,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610361,"byte_end":13610425,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610430,"byte_end":13610491,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610496,"byte_end":13610499,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610504,"byte_end":13610544,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610549,"byte_end":13610561,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610566,"byte_end":13610573,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610578,"byte_end":13610585,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4320},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611411,"byte_end":13611422,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610681,"byte_end":13610743,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610748,"byte_end":13610751,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610756,"byte_end":13610825,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610830,"byte_end":13610903,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610908,"byte_end":13610981,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13610986,"byte_end":13611061,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611066,"byte_end":13611084,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611089,"byte_end":13611092,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611097,"byte_end":13611111,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611116,"byte_end":13611119,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611124,"byte_end":13611137,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611142,"byte_end":13611172,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611177,"byte_end":13611180,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611185,"byte_end":13611249,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611254,"byte_end":13611315,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611320,"byte_end":13611323,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611328,"byte_end":13611358,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611363,"byte_end":13611375,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611380,"byte_end":13611387,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611392,"byte_end":13611399,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612089,"byte_end":13612105,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611523,"byte_end":13611583,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611588,"byte_end":13611591,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611596,"byte_end":13611669,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611674,"byte_end":13611677,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611682,"byte_end":13611743,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611748,"byte_end":13611751,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611756,"byte_end":13611770,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611775,"byte_end":13611778,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611783,"byte_end":13611796,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611801,"byte_end":13611831,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611836,"byte_end":13611839,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611844,"byte_end":13611908,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611913,"byte_end":13611974,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611979,"byte_end":13611982,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13611987,"byte_end":13612036,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612041,"byte_end":13612053,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612058,"byte_end":13612065,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612070,"byte_end":13612077,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4322},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612697,"byte_end":13612717,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612192,"byte_end":13612252,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612257,"byte_end":13612260,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612265,"byte_end":13612337,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612342,"byte_end":13612362,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612367,"byte_end":13612370,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612375,"byte_end":13612389,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612394,"byte_end":13612397,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612402,"byte_end":13612415,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612420,"byte_end":13612450,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612455,"byte_end":13612458,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612463,"byte_end":13612527,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612532,"byte_end":13612593,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612598,"byte_end":13612601,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612606,"byte_end":13612644,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612649,"byte_end":13612661,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612666,"byte_end":13612673,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612678,"byte_end":13612685,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4323},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613388,"byte_end":13613404,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612822,"byte_end":13612882,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612887,"byte_end":13612890,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612895,"byte_end":13612968,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612973,"byte_end":13612976,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13612981,"byte_end":13613042,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613047,"byte_end":13613050,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613055,"byte_end":13613069,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613074,"byte_end":13613077,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613082,"byte_end":13613095,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613100,"byte_end":13613130,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613135,"byte_end":13613138,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613143,"byte_end":13613207,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613212,"byte_end":13613273,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613278,"byte_end":13613281,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613286,"byte_end":13613335,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613340,"byte_end":13613352,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613357,"byte_end":13613364,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613369,"byte_end":13613376,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613993,"byte_end":13614013,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613491,"byte_end":13613551,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613556,"byte_end":13613559,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613564,"byte_end":13613638,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613643,"byte_end":13613658,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613663,"byte_end":13613666,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613671,"byte_end":13613685,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613690,"byte_end":13613693,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613698,"byte_end":13613711,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613716,"byte_end":13613746,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613751,"byte_end":13613754,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613759,"byte_end":13613823,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613828,"byte_end":13613889,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613894,"byte_end":13613897,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613902,"byte_end":13613940,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613945,"byte_end":13613957,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613962,"byte_end":13613969,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13613974,"byte_end":13613981,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4325},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614715,"byte_end":13614724,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614118,"byte_end":13614194,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614199,"byte_end":13614237,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614242,"byte_end":13614245,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614250,"byte_end":13614316,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614321,"byte_end":13614324,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614329,"byte_end":13614376,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614381,"byte_end":13614384,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614389,"byte_end":13614403,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614408,"byte_end":13614411,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614416,"byte_end":13614429,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614434,"byte_end":13614464,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614469,"byte_end":13614472,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614477,"byte_end":13614541,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614546,"byte_end":13614607,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614612,"byte_end":13614615,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614620,"byte_end":13614662,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614667,"byte_end":13614679,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614684,"byte_end":13614691,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614696,"byte_end":13614703,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4326},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615755,"byte_end":13615768,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614815,"byte_end":13614889,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614894,"byte_end":13614897,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614902,"byte_end":13614969,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13614974,"byte_end":13615048,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615053,"byte_end":13615115,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615120,"byte_end":13615123,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615128,"byte_end":13615202,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615207,"byte_end":13615282,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615287,"byte_end":13615311,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615316,"byte_end":13615319,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615324,"byte_end":13615387,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615392,"byte_end":13615426,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615431,"byte_end":13615434,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615439,"byte_end":13615453,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615458,"byte_end":13615461,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615466,"byte_end":13615479,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615484,"byte_end":13615514,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615519,"byte_end":13615522,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615527,"byte_end":13615591,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615596,"byte_end":13615657,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615662,"byte_end":13615665,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615670,"byte_end":13615702,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615707,"byte_end":13615719,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615724,"byte_end":13615731,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615736,"byte_end":13615743,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4327},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616399,"byte_end":13616402,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615887,"byte_end":13615945,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615950,"byte_end":13615953,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13615958,"byte_end":13616018,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616023,"byte_end":13616026,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616031,"byte_end":13616066,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616071,"byte_end":13616074,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616079,"byte_end":13616093,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616098,"byte_end":13616101,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616106,"byte_end":13616119,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616124,"byte_end":13616154,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616159,"byte_end":13616162,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616167,"byte_end":13616231,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616236,"byte_end":13616297,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616302,"byte_end":13616305,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616310,"byte_end":13616346,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616351,"byte_end":13616363,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616368,"byte_end":13616375,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616380,"byte_end":13616387,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4328},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616969,"byte_end":13616976,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616474,"byte_end":13616532,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616537,"byte_end":13616540,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616545,"byte_end":13616621,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616626,"byte_end":13616647,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616652,"byte_end":13616655,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616660,"byte_end":13616674,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616679,"byte_end":13616682,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616687,"byte_end":13616700,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616705,"byte_end":13616735,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616740,"byte_end":13616743,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616748,"byte_end":13616812,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616817,"byte_end":13616878,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616883,"byte_end":13616886,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616891,"byte_end":13616916,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616921,"byte_end":13616933,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616938,"byte_end":13616945,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13616950,"byte_end":13616957,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4329},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617618,"byte_end":13617624,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617064,"byte_end":13617136,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617141,"byte_end":13617152,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617157,"byte_end":13617160,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617165,"byte_end":13617228,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617233,"byte_end":13617236,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617241,"byte_end":13617282,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617287,"byte_end":13617290,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617295,"byte_end":13617309,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617314,"byte_end":13617317,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617322,"byte_end":13617335,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617340,"byte_end":13617370,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617375,"byte_end":13617378,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617383,"byte_end":13617447,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617452,"byte_end":13617513,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617518,"byte_end":13617521,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617526,"byte_end":13617565,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617570,"byte_end":13617582,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617587,"byte_end":13617594,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617599,"byte_end":13617606,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4330},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618566,"byte_end":13618576,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617712,"byte_end":13617782,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617787,"byte_end":13617798,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617803,"byte_end":13617806,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617811,"byte_end":13617886,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617891,"byte_end":13617954,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13617959,"byte_end":13618030,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618035,"byte_end":13618052,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618057,"byte_end":13618060,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618065,"byte_end":13618138,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618143,"byte_end":13618219,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618224,"byte_end":13618240,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618245,"byte_end":13618248,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618253,"byte_end":13618267,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618272,"byte_end":13618275,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618280,"byte_end":13618293,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618298,"byte_end":13618328,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618333,"byte_end":13618336,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618341,"byte_end":13618405,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618410,"byte_end":13618471,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618476,"byte_end":13618479,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618484,"byte_end":13618513,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618518,"byte_end":13618530,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618535,"byte_end":13618542,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618547,"byte_end":13618554,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4331},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619194,"byte_end":13619199,"line_start":672,"line_end":672,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618817,"byte_end":13618853,"line_start":664,"line_end":664,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618858,"byte_end":13618935,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618940,"byte_end":13618986,"line_start":666,"line_end":666,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618991,"byte_end":13618994,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13618999,"byte_end":13619078,"line_start":668,"line_end":668,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619083,"byte_end":13619126,"line_start":669,"line_end":669,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619131,"byte_end":13619134,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619139,"byte_end":13619182,"line_start":671,"line_end":671,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4333},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619855,"byte_end":13619865,"line_start":687,"line_end":687,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619284,"byte_end":13619361,"line_start":676,"line_end":676,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619366,"byte_end":13619412,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619417,"byte_end":13619420,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619425,"byte_end":13619503,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619508,"byte_end":13619556,"line_start":680,"line_end":680,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619561,"byte_end":13619564,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619569,"byte_end":13619647,"line_start":682,"line_end":682,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown(Write)`] on the `TcpStream`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619652,"byte_end":13619733,"line_start":683,"line_end":683,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619738,"byte_end":13619741,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619746,"byte_end":13619779,"line_start":685,"line_end":685,"column_start":5,"column_end":38}},{"value":"/ [`shutdown(Write)`]: fn@crate::net::TcpStream::shutdown","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13619784,"byte_end":13619843,"line_start":686,"line_end":686,"column_start":5,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":93907,"byte_end":93913,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":93844,"byte_end":93897,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":93966,"byte_end":93971,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":93928,"byte_end":93956,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":4540},{"krate":0,"index":4541},{"krate":0,"index":4544},{"krate":0,"index":4547},{"krate":0,"index":4550}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":105933,"byte_end":105951,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":105953,"byte_end":106000,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106001,"byte_end":106004,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106005,"byte_end":106081,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106082,"byte_end":106159,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106160,"byte_end":106212,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106213,"byte_end":106216,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106217,"byte_end":106224,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #![allow(warnings)]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106225,"byte_end":106250,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106251,"byte_end":106277,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106278,"byte_end":106285,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106286,"byte_end":106289,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106290,"byte_end":106364,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":4563},{"krate":0,"index":4692},{"krate":0,"index":4695},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":5583},{"krate":0,"index":5584},{"krate":0,"index":5587},{"krate":0,"index":860},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":5728},{"krate":0,"index":5802},{"krate":0,"index":1035},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1082},{"krate":0,"index":1085},{"krate":0,"index":5843},{"krate":0,"index":5972},{"krate":0,"index":6243},{"krate":0,"index":6278},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":6281},{"krate":0,"index":6285},{"krate":0,"index":6287},{"krate":0,"index":6297},{"krate":0,"index":1112},{"krate":0,"index":1113}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106576,"byte_end":106598,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106599,"byte_end":106602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106603,"byte_end":106668,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ runtime support. In particular, the following runtime services are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106669,"byte_end":106739,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ necessary:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106740,"byte_end":106754,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106755,"byte_end":106758,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106759,"byte_end":106837,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106838,"byte_end":106895,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106896,"byte_end":106966,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106967,"byte_end":107039,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107040,"byte_end":107043,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107044,"byte_end":107124,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, most","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107125,"byte_end":107198,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107199,"byte_end":107273,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107274,"byte_end":107352,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the hood.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107353,"byte_end":107366,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107367,"byte_end":107370,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107371,"byte_end":107382,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107383,"byte_end":107386,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107387,"byte_end":107454,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107455,"byte_end":107458,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107459,"byte_end":107472,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107473,"byte_end":107505,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107506,"byte_end":107532,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107533,"byte_end":107536,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107537,"byte_end":107555,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107556,"byte_end":107619,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107620,"byte_end":107690,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107691,"byte_end":107694,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107695,"byte_end":107709,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107710,"byte_end":107769,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107770,"byte_end":107773,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107774,"byte_end":107811,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107812,"byte_end":107852,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107853,"byte_end":107856,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107857,"byte_end":107937,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107938,"byte_end":107960,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107961,"byte_end":108024,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108025,"byte_end":108065,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108066,"byte_end":108116,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108117,"byte_end":108152,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108153,"byte_end":108188,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108189,"byte_end":108271,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108272,"byte_end":108307,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108308,"byte_end":108333,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108334,"byte_end":108356,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108357,"byte_end":108360,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108361,"byte_end":108403,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108404,"byte_end":108476,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108477,"byte_end":108554,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108555,"byte_end":108586,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108587,"byte_end":108608,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108609,"byte_end":108626,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108627,"byte_end":108642,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108643,"byte_end":108652,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108653,"byte_end":108658,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108659,"byte_end":108666,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108667,"byte_end":108670,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108671,"byte_end":108749,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108750,"byte_end":108828,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108829,"byte_end":108890,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108891,"byte_end":108894,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108895,"byte_end":108948,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108949,"byte_end":108952,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108953,"byte_end":108966,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108967,"byte_end":108999,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109000,"byte_end":109026,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109027,"byte_end":109059,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109060,"byte_end":109063,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109064,"byte_end":109121,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109122,"byte_end":109151,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/     let mut rt = Runtime::new()?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109152,"byte_end":109189,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109190,"byte_end":109193,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109194,"byte_end":109224,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109225,"byte_end":109252,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109253,"byte_end":109327,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109328,"byte_end":109331,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109332,"byte_end":109350,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109351,"byte_end":109414,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109415,"byte_end":109418,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109419,"byte_end":109460,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109461,"byte_end":109505,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109506,"byte_end":109509,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109510,"byte_end":109594,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109595,"byte_end":109621,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109622,"byte_end":109689,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109690,"byte_end":109734,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109735,"byte_end":109789,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109790,"byte_end":109829,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109830,"byte_end":109869,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109870,"byte_end":109956,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109957,"byte_end":109996,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109997,"byte_end":110026,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110027,"byte_end":110053,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110054,"byte_end":110057,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110058,"byte_end":110104,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110105,"byte_end":110181,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110182,"byte_end":110263,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110264,"byte_end":110299,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110300,"byte_end":110325,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110326,"byte_end":110347,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110348,"byte_end":110367,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110368,"byte_end":110381,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110382,"byte_end":110392,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110393,"byte_end":110398,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110399,"byte_end":110406,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110407,"byte_end":110410,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110411,"byte_end":110440,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110441,"byte_end":110444,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110445,"byte_end":110523,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110524,"byte_end":110600,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110601,"byte_end":110643,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110644,"byte_end":110647,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ #### Basic Scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110648,"byte_end":110672,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110673,"byte_end":110676,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110677,"byte_end":110756,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ will be created and executed on the current thread. The basic scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110757,"byte_end":110832,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110833,"byte_end":110903,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/ [`Builder::basic_scheduler`] method:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110904,"byte_end":110944,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110945,"byte_end":110952,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110953,"byte_end":110976,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110977,"byte_end":110980,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110981,"byte_end":111040,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111041,"byte_end":111083,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/     .basic_scheduler()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111084,"byte_end":111110,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111111,"byte_end":111129,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111130,"byte_end":111144,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111145,"byte_end":111152,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111153,"byte_end":111156,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111157,"byte_end":111222,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111223,"byte_end":111293,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111294,"byte_end":111297,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ #### Threaded Scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111298,"byte_end":111325,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111326,"byte_end":111329,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111330,"byte_end":111401,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111402,"byte_end":111480,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111481,"byte_end":111560,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111561,"byte_end":111645,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111646,"byte_end":111726,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111727,"byte_end":111734,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111735,"byte_end":111758,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111759,"byte_end":111762,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111763,"byte_end":111822,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111823,"byte_end":111868,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111869,"byte_end":111898,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111899,"byte_end":111917,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111918,"byte_end":111932,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111933,"byte_end":111940,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111941,"byte_end":111944,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111945,"byte_end":112025,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/ threaded scheduler runtime by default.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112026,"byte_end":112068,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112069,"byte_end":112072,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112073,"byte_end":112150,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ use-cases, such as when running only a single thread is required.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112151,"byte_end":112220,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112221,"byte_end":112224,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112225,"byte_end":112250,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112251,"byte_end":112254,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112255,"byte_end":112329,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112330,"byte_end":112410,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112411,"byte_end":112490,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112491,"byte_end":112570,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112571,"byte_end":112640,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112641,"byte_end":112644,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112645,"byte_end":112679,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112680,"byte_end":112683,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112684,"byte_end":112763,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112764,"byte_end":112832,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112833,"byte_end":112895,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112896,"byte_end":112899,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112900,"byte_end":112978,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112979,"byte_end":113058,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113059,"byte_end":113117,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113118,"byte_end":113121,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113122,"byte_end":113146,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113147,"byte_end":113171,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113172,"byte_end":113206,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113207,"byte_end":113245,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113246,"byte_end":113292,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113293,"byte_end":113343,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113344,"byte_end":113418,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113419,"byte_end":113499,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113500,"byte_end":113562,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113563,"byte_end":113629,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113630,"byte_end":113694,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":5316},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13652776,"byte_end":13652785,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":5317}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4833},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13652961,"byte_end":13652970,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13652936,"byte_end":13652949,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4835},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653188,"byte_end":13653193,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<dyn Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653163,"byte_end":13653176,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4837},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653523,"byte_end":13653535,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653443,"byte_end":13653511,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4838},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654041,"byte_end":13654049,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653662,"byte_end":13653724,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653729,"byte_end":13653732,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653737,"byte_end":13653751,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653756,"byte_end":13653759,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653764,"byte_end":13653771,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653776,"byte_end":13653795,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653800,"byte_end":13653803,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653808,"byte_end":13653826,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653831,"byte_end":13653852,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653857,"byte_end":13653895,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653900,"byte_end":13653927,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653932,"byte_end":13653962,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653967,"byte_end":13653970,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13653975,"byte_end":13654007,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654012,"byte_end":13654017,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654022,"byte_end":13654029,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4839},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654956,"byte_end":13654966,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<dyn Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654175,"byte_end":13654254,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654259,"byte_end":13654262,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654267,"byte_end":13654279,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654284,"byte_end":13654287,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654292,"byte_end":13654366,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654371,"byte_end":13654446,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654451,"byte_end":13654509,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654514,"byte_end":13654517,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654522,"byte_end":13654536,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654541,"byte_end":13654544,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654549,"byte_end":13654568,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654573,"byte_end":13654592,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654597,"byte_end":13654600,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654605,"byte_end":13654623,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654628,"byte_end":13654649,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654654,"byte_end":13654692,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654697,"byte_end":13654724,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654729,"byte_end":13654759,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654764,"byte_end":13654767,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654772,"byte_end":13654799,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654804,"byte_end":13654852,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654857,"byte_end":13654908,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654913,"byte_end":13654922,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654927,"byte_end":13654932,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13654937,"byte_end":13654944,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4840},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655731,"byte_end":13655745,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self)\n-> Result<Box<dyn Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655107,"byte_end":13655176,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655181,"byte_end":13655253,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655258,"byte_end":13655271,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655276,"byte_end":13655279,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655284,"byte_end":13655298,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655303,"byte_end":13655306,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655311,"byte_end":13655330,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655335,"byte_end":13655354,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655359,"byte_end":13655362,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655367,"byte_end":13655385,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655390,"byte_end":13655411,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655416,"byte_end":13655454,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655459,"byte_end":13655486,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655491,"byte_end":13655521,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655526,"byte_end":13655529,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655534,"byte_end":13655584,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655589,"byte_end":13655637,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655642,"byte_end":13655683,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655688,"byte_end":13655697,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655702,"byte_end":13655707,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655712,"byte_end":13655719,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5318},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13672111,"byte_end":13672121,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":5320},{"krate":0,"index":5321}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129918,"byte_end":129925,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129090,"byte_end":129148,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129149,"byte_end":129152,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129153,"byte_end":129225,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129226,"byte_end":129274,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129275,"byte_end":129278,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129279,"byte_end":129344,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129345,"byte_end":129348,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129349,"byte_end":129426,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129427,"byte_end":129440,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129441,"byte_end":129444,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129445,"byte_end":129478,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129479,"byte_end":129517,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129518,"byte_end":129521,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129522,"byte_end":129536,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129537,"byte_end":129540,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129541,"byte_end":129548,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129549,"byte_end":129581,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129582,"byte_end":129585,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129586,"byte_end":129601,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129602,"byte_end":129626,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129627,"byte_end":129663,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129664,"byte_end":129697,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129698,"byte_end":129726,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129727,"byte_end":129769,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129770,"byte_end":129817,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129818,"byte_end":129838,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129839,"byte_end":129861,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129862,"byte_end":129865,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129866,"byte_end":129892,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129893,"byte_end":129898,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129899,"byte_end":129906,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131080,"byte_end":131083,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":130906,"byte_end":130978,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":130983,"byte_end":130994,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":130999,"byte_end":131002,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131007,"byte_end":131068,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132287,"byte_end":132297,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131773,"byte_end":131811,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131816,"byte_end":131819,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131824,"byte_end":131895,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131900,"byte_end":131976,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131981,"byte_end":132035,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132040,"byte_end":132043,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132048,"byte_end":132062,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132067,"byte_end":132070,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132075,"byte_end":132082,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132087,"byte_end":132110,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132115,"byte_end":132118,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132123,"byte_end":132159,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132164,"byte_end":132193,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132198,"byte_end":132219,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132224,"byte_end":132240,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132245,"byte_end":132263,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132268,"byte_end":132275,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132852,"byte_end":132863,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132474,"byte_end":132547,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132552,"byte_end":132630,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132635,"byte_end":132638,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132643,"byte_end":132718,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132723,"byte_end":132758,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132763,"byte_end":132766,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132771,"byte_end":132840,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133572,"byte_end":133584,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132965,"byte_end":133040,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133045,"byte_end":133048,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133053,"byte_end":133130,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133135,"byte_end":133170,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133175,"byte_end":133178,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133183,"byte_end":133252,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133257,"byte_end":133260,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133265,"byte_end":133317,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133322,"byte_end":133325,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133330,"byte_end":133344,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133349,"byte_end":133352,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133357,"byte_end":133364,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133369,"byte_end":133392,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133397,"byte_end":133400,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133405,"byte_end":133441,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133446,"byte_end":133475,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133480,"byte_end":133504,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133509,"byte_end":133525,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133530,"byte_end":133548,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133553,"byte_end":133560,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134463,"byte_end":134474,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133745,"byte_end":133801,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133806,"byte_end":133809,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133814,"byte_end":133891,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133896,"byte_end":133978,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133983,"byte_end":134053,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134058,"byte_end":134061,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134066,"byte_end":134146,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134151,"byte_end":134154,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134159,"byte_end":134188,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134193,"byte_end":134196,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134201,"byte_end":134286,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134291,"byte_end":134294,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134299,"byte_end":134388,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134393,"byte_end":134451,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134998,"byte_end":135009,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\nimpl Into<String>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134628,"byte_end":134692,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134697,"byte_end":134700,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134705,"byte_end":134752,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134757,"byte_end":134760,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134765,"byte_end":134779,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134784,"byte_end":134787,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134792,"byte_end":134799,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134804,"byte_end":134829,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134834,"byte_end":134837,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134842,"byte_end":134863,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134868,"byte_end":134904,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134909,"byte_end":134940,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134945,"byte_end":134962,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134967,"byte_end":134974,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134979,"byte_end":134986,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135733,"byte_end":135750,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135123,"byte_end":135177,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135182,"byte_end":135185,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135190,"byte_end":135262,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135267,"byte_end":135300,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135305,"byte_end":135308,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135313,"byte_end":135381,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135386,"byte_end":135447,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135452,"byte_end":135455,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135460,"byte_end":135474,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135479,"byte_end":135482,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135487,"byte_end":135494,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135499,"byte_end":135524,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135529,"byte_end":135532,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135537,"byte_end":135558,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135563,"byte_end":135599,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135604,"byte_end":135633,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135638,"byte_end":135675,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135680,"byte_end":135697,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135702,"byte_end":135709,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135714,"byte_end":135721,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136391,"byte_end":136406,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135857,"byte_end":135932,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135937,"byte_end":135952,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135957,"byte_end":135960,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135965,"byte_end":136027,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136032,"byte_end":136035,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136040,"byte_end":136054,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136059,"byte_end":136062,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136067,"byte_end":136074,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136079,"byte_end":136104,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136109,"byte_end":136112,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136117,"byte_end":136138,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136143,"byte_end":136184,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136189,"byte_end":136218,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136223,"byte_end":136252,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136257,"byte_end":136296,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136301,"byte_end":136311,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136316,"byte_end":136333,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136338,"byte_end":136345,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136350,"byte_end":136357,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136362,"byte_end":136379,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137057,"byte_end":137071,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136567,"byte_end":136618,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136623,"byte_end":136626,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136631,"byte_end":136693,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136698,"byte_end":136701,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136706,"byte_end":136720,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136725,"byte_end":136728,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136733,"byte_end":136740,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136745,"byte_end":136770,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136775,"byte_end":136778,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136783,"byte_end":136804,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136809,"byte_end":136850,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136855,"byte_end":136884,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136889,"byte_end":136917,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136922,"byte_end":136962,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136967,"byte_end":136977,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136982,"byte_end":136999,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137004,"byte_end":137011,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137016,"byte_end":137023,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137028,"byte_end":137045,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137617,"byte_end":137622,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137232,"byte_end":137269,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137274,"byte_end":137277,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137282,"byte_end":137345,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137350,"byte_end":137353,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137358,"byte_end":137372,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137377,"byte_end":137380,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137385,"byte_end":137392,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137397,"byte_end":137429,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137434,"byte_end":137437,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137442,"byte_end":137491,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137496,"byte_end":137499,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137504,"byte_end":137527,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137532,"byte_end":137581,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137586,"byte_end":137593,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137598,"byte_end":137605,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5603},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":139247,"byte_end":139256,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5605},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":139767,"byte_end":139778,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5607},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":140391,"byte_end":140406,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5617},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":142142,"byte_end":142160,"line_start":458,"line_end":458,"column_start":16,"column_end":34},"name":"threaded_scheduler","qualname":"<Builder>::threaded_scheduler","value":"pub fn threaded_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a multi-threaded scheduler for executing tasks.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5708},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151388,"byte_end":151394,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":5709},{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5712},{"krate":0,"index":5713}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151119,"byte_end":151145,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151146,"byte_end":151149,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151150,"byte_end":151238,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151239,"byte_end":151289,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151290,"byte_end":151293,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151294,"byte_end":151352,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152931,"byte_end":152936,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151758,"byte_end":151833,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151838,"byte_end":151916,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151921,"byte_end":151989,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151994,"byte_end":151997,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152002,"byte_end":152060,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152065,"byte_end":152068,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152073,"byte_end":152113,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152118,"byte_end":152165,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152170,"byte_end":152227,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152232,"byte_end":152269,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152274,"byte_end":152277,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152282,"byte_end":152295,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152300,"byte_end":152303,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152308,"byte_end":152315,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152320,"byte_end":152352,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152357,"byte_end":152360,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152365,"byte_end":152407,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152412,"byte_end":152478,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152483,"byte_end":152516,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152521,"byte_end":152553,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152558,"byte_end":152569,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152574,"byte_end":152579,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152584,"byte_end":152587,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152592,"byte_end":152607,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152612,"byte_end":152653,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152658,"byte_end":152699,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152704,"byte_end":152707,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152712,"byte_end":152755,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152760,"byte_end":152763,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152768,"byte_end":152843,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152848,"byte_end":152897,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152902,"byte_end":152907,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152912,"byte_end":152919,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154406,"byte_end":154413,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153054,"byte_end":153118,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153123,"byte_end":153126,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153131,"byte_end":153142,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153147,"byte_end":153150,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153155,"byte_end":153249,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153254,"byte_end":153346,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153351,"byte_end":153427,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153432,"byte_end":153435,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153440,"byte_end":153454,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153459,"byte_end":153462,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153467,"byte_end":153549,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153554,"byte_end":153600,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153605,"byte_end":153608,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153613,"byte_end":153620,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153625,"byte_end":153647,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153652,"byte_end":153686,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153691,"byte_end":153707,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153712,"byte_end":153751,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153756,"byte_end":153778,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153783,"byte_end":153814,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153819,"byte_end":153822,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153827,"byte_end":153868,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153873,"byte_end":153908,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153913,"byte_end":153937,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153942,"byte_end":153998,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154003,"byte_end":154010,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154015,"byte_end":154018,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154023,"byte_end":154041,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154046,"byte_end":154073,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154078,"byte_end":154163,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154168,"byte_end":154212,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154217,"byte_end":154262,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154267,"byte_end":154310,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154315,"byte_end":154322,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154327,"byte_end":154356,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154361,"byte_end":154370,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154375,"byte_end":154382,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154387,"byte_end":154394,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154715,"byte_end":154726,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154522,"byte_end":154582,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154587,"byte_end":154590,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154595,"byte_end":154646,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154651,"byte_end":154654,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154659,"byte_end":154703,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5719},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":156251,"byte_end":156256,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5721},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":160375,"byte_end":160383,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5725},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":163772,"byte_end":163786,"line_start":344,"line_end":344,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164175,"byte_end":164190,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164095,"byte_end":164163,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":6281},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115599,"byte_end":115606,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":6282},{"krate":0,"index":6283},{"krate":0,"index":6284}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114582,"byte_end":114604,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114605,"byte_end":114608,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114609,"byte_end":114686,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114687,"byte_end":114738,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114739,"byte_end":114742,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114743,"byte_end":114823,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114824,"byte_end":114909,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114910,"byte_end":114913,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114914,"byte_end":114973,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114974,"byte_end":114977,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114978,"byte_end":114992,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114993,"byte_end":114996,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114997,"byte_end":115076,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115077,"byte_end":115136,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115137,"byte_end":115140,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115141,"byte_end":115179,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115180,"byte_end":115231,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115232,"byte_end":115255,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115256,"byte_end":115259,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115260,"byte_end":115332,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115333,"byte_end":115406,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115407,"byte_end":115430,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115431,"byte_end":115434,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115435,"byte_end":115459,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115460,"byte_end":115481,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115482,"byte_end":115511,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115512,"byte_end":115543,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115544,"byte_end":115570,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117827,"byte_end":117830,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116420,"byte_end":116488,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116493,"byte_end":116496,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116501,"byte_end":116567,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116572,"byte_end":116645,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116650,"byte_end":116721,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116726,"byte_end":116801,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116806,"byte_end":116844,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116849,"byte_end":116852,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116857,"byte_end":116917,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116922,"byte_end":116996,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117001,"byte_end":117004,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117009,"byte_end":117085,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117090,"byte_end":117166,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117171,"byte_end":117237,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117242,"byte_end":117245,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117250,"byte_end":117309,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117314,"byte_end":117317,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117322,"byte_end":117336,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117341,"byte_end":117344,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117349,"byte_end":117412,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117417,"byte_end":117420,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117425,"byte_end":117432,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117437,"byte_end":117469,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117474,"byte_end":117477,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117482,"byte_end":117509,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117514,"byte_end":117532,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117537,"byte_end":117540,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117545,"byte_end":117570,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117575,"byte_end":117582,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117587,"byte_end":117590,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117595,"byte_end":117616,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117621,"byte_end":117650,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117655,"byte_end":117710,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117715,"byte_end":117764,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117769,"byte_end":117815,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119420,"byte_end":119425,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118240,"byte_end":118282,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118287,"byte_end":118290,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118295,"byte_end":118366,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118371,"byte_end":118446,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118451,"byte_end":118474,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118479,"byte_end":118482,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118487,"byte_end":118546,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118551,"byte_end":118554,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118559,"byte_end":118580,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118585,"byte_end":118588,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118593,"byte_end":118607,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118612,"byte_end":118615,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118620,"byte_end":118627,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118632,"byte_end":118664,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118669,"byte_end":118672,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118677,"byte_end":118693,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118698,"byte_end":118723,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118728,"byte_end":118765,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118770,"byte_end":118773,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118778,"byte_end":118816,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118821,"byte_end":118841,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118846,"byte_end":118897,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118902,"byte_end":118909,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118914,"byte_end":118921,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118926,"byte_end":118933,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118938,"byte_end":118941,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118946,"byte_end":118958,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118963,"byte_end":118966,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118971,"byte_end":119044,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119049,"byte_end":119114,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119119,"byte_end":119180,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119185,"byte_end":119212,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119217,"byte_end":119220,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119225,"byte_end":119256,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119261,"byte_end":119319,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119324,"byte_end":119376,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119381,"byte_end":119408,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121046,"byte_end":121054,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119827,"byte_end":119901,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119906,"byte_end":119922,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119927,"byte_end":119930,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119935,"byte_end":120002,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120007,"byte_end":120080,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120085,"byte_end":120150,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120155,"byte_end":120158,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120163,"byte_end":120239,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120244,"byte_end":120310,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120315,"byte_end":120387,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120392,"byte_end":120415,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120420,"byte_end":120423,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120428,"byte_end":120491,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120496,"byte_end":120499,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120504,"byte_end":120516,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120521,"byte_end":120524,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120529,"byte_end":120607,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120612,"byte_end":120647,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120652,"byte_end":120655,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120660,"byte_end":120674,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120679,"byte_end":120682,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120687,"byte_end":120700,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120705,"byte_end":120737,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120742,"byte_end":120745,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120750,"byte_end":120775,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120780,"byte_end":120821,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120826,"byte_end":120829,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120834,"byte_end":120905,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120910,"byte_end":120933,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120938,"byte_end":120964,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120969,"byte_end":120976,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120981,"byte_end":120988,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120993,"byte_end":120996,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121001,"byte_end":121034,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122576,"byte_end":122581,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121460,"byte_end":121535,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121540,"byte_end":121618,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121623,"byte_end":121691,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121696,"byte_end":121699,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121704,"byte_end":121761,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121766,"byte_end":121769,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121774,"byte_end":121814,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121819,"byte_end":121866,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121871,"byte_end":121926,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121931,"byte_end":121968,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121973,"byte_end":121976,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121981,"byte_end":121994,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121999,"byte_end":122002,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122007,"byte_end":122014,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122019,"byte_end":122051,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122056,"byte_end":122059,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122064,"byte_end":122106,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122111,"byte_end":122173,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122178,"byte_end":122211,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122216,"byte_end":122248,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122253,"byte_end":122264,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122269,"byte_end":122274,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122279,"byte_end":122282,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122287,"byte_end":122302,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122307,"byte_end":122348,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122353,"byte_end":122356,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122361,"byte_end":122404,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122409,"byte_end":122412,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122417,"byte_end":122492,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122497,"byte_end":122542,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122547,"byte_end":122552,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122557,"byte_end":122564,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123168,"byte_end":123174,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122688,"byte_end":122733,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122738,"byte_end":122741,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122746,"byte_end":122830,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122835,"byte_end":122895,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122900,"byte_end":122903,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122908,"byte_end":122922,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122927,"byte_end":122930,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122935,"byte_end":122942,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122947,"byte_end":122979,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122984,"byte_end":122987,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122992,"byte_end":123019,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123024,"byte_end":123042,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123047,"byte_end":123050,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123055,"byte_end":123084,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123089,"byte_end":123092,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123097,"byte_end":123144,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123149,"byte_end":123156,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124582,"byte_end":124598,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123227,"byte_end":123299,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123304,"byte_end":123325,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123330,"byte_end":123333,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123338,"byte_end":123413,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123418,"byte_end":123491,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123496,"byte_end":123573,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123578,"byte_end":123649,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123654,"byte_end":123657,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123662,"byte_end":123736,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123741,"byte_end":123815,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123820,"byte_end":123895,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123900,"byte_end":123976,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123981,"byte_end":124026,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124031,"byte_end":124034,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124039,"byte_end":124053,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124058,"byte_end":124061,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124066,"byte_end":124073,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124078,"byte_end":124110,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124115,"byte_end":124135,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124140,"byte_end":124143,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124148,"byte_end":124168,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124173,"byte_end":124201,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124206,"byte_end":124209,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124214,"byte_end":124229,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124234,"byte_end":124283,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124288,"byte_end":124291,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124296,"byte_end":124332,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124337,"byte_end":124378,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124383,"byte_end":124441,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124446,"byte_end":124460,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124465,"byte_end":124475,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124480,"byte_end":124483,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124488,"byte_end":124548,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124553,"byte_end":124558,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124563,"byte_end":124570,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125907,"byte_end":125926,"line_start":577,"line_end":577,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124789,"byte_end":124865,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124870,"byte_end":124873,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124878,"byte_end":124959,"line_start":553,"line_end":553,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124964,"byte_end":125047,"line_start":554,"line_end":554,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125052,"byte_end":125138,"line_start":555,"line_end":555,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125143,"byte_end":125228,"line_start":556,"line_end":556,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125233,"byte_end":125236,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125241,"byte_end":125327,"line_start":558,"line_end":558,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125332,"byte_end":125422,"line_start":559,"line_end":559,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125427,"byte_end":125438,"line_start":560,"line_end":560,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125443,"byte_end":125446,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125451,"byte_end":125536,"line_start":562,"line_end":562,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125541,"byte_end":125544,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125549,"byte_end":125556,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125561,"byte_end":125593,"line_start":565,"line_end":565,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125598,"byte_end":125601,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125606,"byte_end":125621,"line_start":567,"line_end":567,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125626,"byte_end":125675,"line_start":568,"line_end":568,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125680,"byte_end":125683,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125688,"byte_end":125724,"line_start":570,"line_end":570,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125729,"byte_end":125784,"line_start":571,"line_end":571,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125789,"byte_end":125806,"line_start":572,"line_end":572,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125811,"byte_end":125858,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125863,"byte_end":125873,"line_start":574,"line_end":574,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125878,"byte_end":125883,"line_start":575,"line_end":575,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125888,"byte_end":125895,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6340},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":6341},{"krate":0,"index":6371},{"krate":0,"index":6374},{"krate":0,"index":6404},{"krate":0,"index":6407},{"krate":0,"index":6441},{"krate":0,"index":6444},{"krate":0,"index":6559},{"krate":0,"index":6562},{"krate":0,"index":6565},{"krate":0,"index":6595},{"krate":0,"index":6596},{"krate":0,"index":6599},{"krate":0,"index":6602},{"krate":0,"index":6636},{"krate":0,"index":6639},{"krate":0,"index":6674},{"krate":0,"index":6677},{"krate":0,"index":6708},{"krate":0,"index":6711},{"krate":0,"index":6736},{"krate":0,"index":6739},{"krate":0,"index":6762},{"krate":0,"index":6763},{"krate":0,"index":6766},{"krate":0,"index":6769},{"krate":0,"index":6806},{"krate":0,"index":6809},{"krate":0,"index":6844},{"krate":0,"index":6847},{"krate":0,"index":6874},{"krate":0,"index":6877},{"krate":0,"index":6910},{"krate":0,"index":6911},{"krate":0,"index":6914},{"krate":0,"index":6917},{"krate":0,"index":6947},{"krate":0,"index":6948},{"krate":0,"index":6951},{"krate":0,"index":6954},{"krate":0,"index":7008},{"krate":0,"index":7011},{"krate":0,"index":7043},{"krate":0,"index":7046},{"krate":0,"index":7080},{"krate":0,"index":7083},{"krate":0,"index":7116},{"krate":0,"index":7119},{"krate":0,"index":7154},{"krate":0,"index":7157},{"krate":0,"index":7193},{"krate":0,"index":7312},{"krate":0,"index":7357},{"krate":0,"index":7360},{"krate":0,"index":7196},{"krate":0,"index":7199},{"krate":0,"index":7233},{"krate":0,"index":7235}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21086,"byte_end":21112,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"/ Stream utilities for Tokio.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13773690,"byte_end":13773721,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13773722,"byte_end":13773725,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13773726,"byte_end":13773871,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13773872,"byte_end":13773875,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides helpers to work with them.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13773876,"byte_end":13773927,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7236},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":13799608,"byte_end":13799617,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":7240},{"krate":0,"index":7241}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":13799454,"byte_end":13799511,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":13799529,"byte_end":13799596,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7247},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":13800771,"byte_end":13800780,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":7251},{"krate":0,"index":7252}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":13800617,"byte_end":13800674,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":13800692,"byte_end":13800759,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11663},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\chain.rs","byte_start":13801900,"byte_end":13801905,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11666},{"krate":0,"index":11667}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11625},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803138,"byte_end":13803145,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":11628},{"krate":0,"index":11629}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6480},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803710,"byte_end":13803720,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803297,"byte_end":13803350,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803351,"byte_end":13803354,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803355,"byte_end":13803420,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803421,"byte_end":13803477,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803478,"byte_end":13803481,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803482,"byte_end":13803500,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803501,"byte_end":13803504,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803505,"byte_end":13803584,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803585,"byte_end":13803660,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803661,"byte_end":13803699,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":6553},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13808621,"byte_end":13808635,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":6555},{"krate":0,"index":6556},{"krate":0,"index":6557},{"krate":0,"index":6558}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6555},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13808715,"byte_end":13808725,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":6553},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13808649,"byte_end":13808701,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6556},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13808777,"byte_end":13808787,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"pub fn initialize(usize, Option<usize>) -> Self::Collection","parent":{"krate":0,"index":6553},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13808736,"byte_end":13808765,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6557},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13809004,"byte_end":13809010,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"pub fn extend(&mut Self::Collection, T) -> bool","parent":{"krate":0,"index":6553},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13808854,"byte_end":13808902,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13808911,"byte_end":13808914,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13808923,"byte_end":13808992,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6558},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13809126,"byte_end":13809134,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"pub fn finalize(&mut Self::Collection) -> Self","parent":{"krate":0,"index":6553},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13809073,"byte_end":13809114,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7258},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809427,"byte_end":13809432,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809301,"byte_end":13809349,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809367,"byte_end":13809415,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6588},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13810022,"byte_end":13810027,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"pub const fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809557,"byte_end":13809598,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809599,"byte_end":13809602,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809603,"byte_end":13809671,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809672,"byte_end":13809748,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809749,"byte_end":13809759,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809760,"byte_end":13809763,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809764,"byte_end":13809778,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809779,"byte_end":13809782,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809783,"byte_end":13809799,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809800,"byte_end":13809803,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809804,"byte_end":13809811,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809812,"byte_end":13809853,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809854,"byte_end":13809857,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809858,"byte_end":13809876,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809877,"byte_end":13809898,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809899,"byte_end":13809945,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809946,"byte_end":13809949,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809950,"byte_end":13809994,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809995,"byte_end":13810000,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13810001,"byte_end":13810008,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11569},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":13810610,"byte_end":13810616,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11572},{"krate":0,"index":11573}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11524},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":13812048,"byte_end":13812057,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11527},{"krate":0,"index":11528}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11475},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fold.rs","byte_start":13813474,"byte_end":13813484,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":11479},{"krate":0,"index":11480},{"krate":0,"index":11481}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11435},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fuse.rs","byte_start":13814640,"byte_end":13814644,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":11437}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7265},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13815776,"byte_end":13815780,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":7267}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13815652,"byte_end":13815698,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13815716,"byte_end":13815764,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6755},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816354,"byte_end":13816358,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13815832,"byte_end":13815896,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13815897,"byte_end":13815925,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13815926,"byte_end":13815929,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13815930,"byte_end":13816003,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816004,"byte_end":13816059,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816060,"byte_end":13816063,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816064,"byte_end":13816071,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816072,"byte_end":13816094,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816095,"byte_end":13816136,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816137,"byte_end":13816140,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816141,"byte_end":13816189,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816190,"byte_end":13816193,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816194,"byte_end":13816240,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816241,"byte_end":13816287,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816288,"byte_end":13816330,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816331,"byte_end":13816338,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816339,"byte_end":13816346,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11381},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":13817138,"byte_end":13817141,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":11384},{"krate":0,"index":11385}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11332},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\merge.rs","byte_start":13818211,"byte_end":13818216,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":11335},{"krate":0,"index":11336},{"krate":0,"index":11337}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7271},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":13820091,"byte_end":13820095,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":7274}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":13819935,"byte_end":13819994,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":13820012,"byte_end":13820079,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7279},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13820791,"byte_end":13820795,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":7281}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13820667,"byte_end":13820713,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13820731,"byte_end":13820779,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6903},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821367,"byte_end":13821371,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13820871,"byte_end":13820927,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13820928,"byte_end":13820931,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13820932,"byte_end":13821011,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821012,"byte_end":13821015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821016,"byte_end":13821030,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821031,"byte_end":13821034,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821035,"byte_end":13821042,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821043,"byte_end":13821084,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821085,"byte_end":13821088,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821089,"byte_end":13821107,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821108,"byte_end":13821129,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821130,"byte_end":13821168,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821169,"byte_end":13821207,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821208,"byte_end":13821211,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821212,"byte_end":13821258,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821259,"byte_end":13821262,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821263,"byte_end":13821301,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821302,"byte_end":13821345,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821346,"byte_end":13821351,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821352,"byte_end":13821359,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7285},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13821994,"byte_end":13822001,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13821864,"byte_end":13821916,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13821934,"byte_end":13821982,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6940},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822741,"byte_end":13822748,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"pub const fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822132,"byte_end":13822172,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822173,"byte_end":13822176,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822177,"byte_end":13822235,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822236,"byte_end":13822307,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822308,"byte_end":13822377,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822378,"byte_end":13822422,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822423,"byte_end":13822426,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822427,"byte_end":13822441,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822442,"byte_end":13822445,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822446,"byte_end":13822462,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822463,"byte_end":13822466,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822467,"byte_end":13822480,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822481,"byte_end":13822522,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822523,"byte_end":13822526,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822527,"byte_end":13822545,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822546,"byte_end":13822567,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822568,"byte_end":13822617,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822618,"byte_end":13822621,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822622,"byte_end":13822657,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822658,"byte_end":13822685,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822686,"byte_end":13822689,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822690,"byte_end":13822713,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822714,"byte_end":13822719,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822720,"byte_end":13822727,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7292},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828397,"byte_end":13828406,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":7295}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823165,"byte_end":13823241,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823242,"byte_end":13823250,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823251,"byte_end":13823254,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823255,"byte_end":13823332,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823333,"byte_end":13823409,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823410,"byte_end":13823486,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823487,"byte_end":13823521,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823522,"byte_end":13823525,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823526,"byte_end":13823546,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823547,"byte_end":13823550,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823551,"byte_end":13823594,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823595,"byte_end":13823655,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823656,"byte_end":13823734,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823735,"byte_end":13823768,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823769,"byte_end":13823772,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823773,"byte_end":13823852,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823853,"byte_end":13823933,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13823934,"byte_end":13824006,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824007,"byte_end":13824031,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824032,"byte_end":13824035,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824036,"byte_end":13824049,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824050,"byte_end":13824053,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824054,"byte_end":13824132,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824133,"byte_end":13824202,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824203,"byte_end":13824282,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824283,"byte_end":13824314,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824315,"byte_end":13824318,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824319,"byte_end":13824339,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824340,"byte_end":13824343,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824344,"byte_end":13824421,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824422,"byte_end":13824499,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824500,"byte_end":13824577,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824578,"byte_end":13824652,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824653,"byte_end":13824731,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824732,"byte_end":13824809,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824810,"byte_end":13824831,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824832,"byte_end":13824835,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824836,"byte_end":13824893,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824894,"byte_end":13824925,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824926,"byte_end":13824949,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824950,"byte_end":13824988,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824989,"byte_end":13824992,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13824993,"byte_end":13825007,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825008,"byte_end":13825011,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825012,"byte_end":13825085,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825086,"byte_end":13825089,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825090,"byte_end":13825097,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825098,"byte_end":13825144,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825145,"byte_end":13825171,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825172,"byte_end":13825175,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825176,"byte_end":13825194,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825195,"byte_end":13825216,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825217,"byte_end":13825264,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825265,"byte_end":13825312,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825313,"byte_end":13825316,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825317,"byte_end":13825350,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825351,"byte_end":13825390,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825391,"byte_end":13825394,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825395,"byte_end":13825475,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825476,"byte_end":13825548,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825549,"byte_end":13825587,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825588,"byte_end":13825599,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825600,"byte_end":13825603,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825604,"byte_end":13825637,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825638,"byte_end":13825677,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825678,"byte_end":13825716,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825717,"byte_end":13825728,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825729,"byte_end":13825732,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825733,"byte_end":13825772,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825773,"byte_end":13825776,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825777,"byte_end":13825807,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825808,"byte_end":13825839,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825840,"byte_end":13825871,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825872,"byte_end":13825875,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825876,"byte_end":13825897,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825898,"byte_end":13825921,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825922,"byte_end":13825977,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825978,"byte_end":13825981,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13825982,"byte_end":13826011,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826012,"byte_end":13826047,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826048,"byte_end":13826068,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826069,"byte_end":13826104,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826105,"byte_end":13826118,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826119,"byte_end":13826122,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826123,"byte_end":13826189,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826190,"byte_end":13826218,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826219,"byte_end":13826228,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826229,"byte_end":13826234,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826235,"byte_end":13826242,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826243,"byte_end":13826246,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826247,"byte_end":13826325,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826326,"byte_end":13826402,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826403,"byte_end":13826443,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826444,"byte_end":13826447,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826448,"byte_end":13826525,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826526,"byte_end":13826563,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826564,"byte_end":13826567,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826568,"byte_end":13826581,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826582,"byte_end":13826636,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826637,"byte_end":13826640,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826641,"byte_end":13826659,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826660,"byte_end":13826681,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826682,"byte_end":13826704,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826705,"byte_end":13826710,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826711,"byte_end":13826714,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826715,"byte_end":13826765,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826766,"byte_end":13826821,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826822,"byte_end":13826852,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826853,"byte_end":13826858,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826859,"byte_end":13826862,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826863,"byte_end":13826939,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13826940,"byte_end":13827006,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827007,"byte_end":13827051,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827052,"byte_end":13827082,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827083,"byte_end":13827088,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827089,"byte_end":13827092,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827093,"byte_end":13827111,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827112,"byte_end":13827133,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827134,"byte_end":13827178,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827179,"byte_end":13827182,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827183,"byte_end":13827233,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827234,"byte_end":13827264,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827265,"byte_end":13827291,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827292,"byte_end":13827295,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827296,"byte_end":13827310,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827311,"byte_end":13827339,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827340,"byte_end":13827384,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827385,"byte_end":13827416,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827417,"byte_end":13827465,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827466,"byte_end":13827542,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827543,"byte_end":13827584,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827585,"byte_end":13827636,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827637,"byte_end":13827693,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827694,"byte_end":13827719,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827720,"byte_end":13827769,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827770,"byte_end":13827821,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827822,"byte_end":13827847,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827848,"byte_end":13827869,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827870,"byte_end":13827887,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827888,"byte_end":13827944,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13827945,"byte_end":13828025,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828026,"byte_end":13828068,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828069,"byte_end":13828119,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828120,"byte_end":13828137,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828138,"byte_end":13828213,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828214,"byte_end":13828290,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828291,"byte_end":13828321,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828322,"byte_end":13828335,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828336,"byte_end":13828345,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828346,"byte_end":13828351,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828352,"byte_end":13828359,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6977},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828879,"byte_end":13828882,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"pub fn new() -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828511,"byte_end":13828544,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828549,"byte_end":13828552,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828557,"byte_end":13828631,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828636,"byte_end":13828685,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828690,"byte_end":13828693,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828698,"byte_end":13828712,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828717,"byte_end":13828720,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828725,"byte_end":13828732,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828737,"byte_end":13828781,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828786,"byte_end":13828789,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828794,"byte_end":13828855,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828860,"byte_end":13828867,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6978},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829387,"byte_end":13829400,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828955,"byte_end":13829016,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829021,"byte_end":13829024,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829029,"byte_end":13829105,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829110,"byte_end":13829181,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829186,"byte_end":13829189,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829194,"byte_end":13829208,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829213,"byte_end":13829216,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829221,"byte_end":13829228,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829233,"byte_end":13829277,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829282,"byte_end":13829285,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829290,"byte_end":13829363,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829368,"byte_end":13829375,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6979},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830018,"byte_end":13830022,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829531,"byte_end":13829592,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829597,"byte_end":13829600,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829605,"byte_end":13829644,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829649,"byte_end":13829652,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829657,"byte_end":13829671,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829676,"byte_end":13829679,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829684,"byte_end":13829691,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829696,"byte_end":13829740,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829745,"byte_end":13829748,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829753,"byte_end":13829788,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829793,"byte_end":13829796,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829801,"byte_end":13829839,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829844,"byte_end":13829875,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829880,"byte_end":13829911,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829916,"byte_end":13829919,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829924,"byte_end":13829951,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829956,"byte_end":13829984,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829989,"byte_end":13829994,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13829999,"byte_end":13830006,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6982},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830606,"byte_end":13830612,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830115,"byte_end":13830170,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830175,"byte_end":13830178,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830183,"byte_end":13830222,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830227,"byte_end":13830230,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830235,"byte_end":13830249,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830254,"byte_end":13830257,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830262,"byte_end":13830269,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830274,"byte_end":13830318,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830323,"byte_end":13830326,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830331,"byte_end":13830366,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830371,"byte_end":13830374,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830379,"byte_end":13830417,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830422,"byte_end":13830453,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830458,"byte_end":13830489,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830494,"byte_end":13830497,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830502,"byte_end":13830534,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830539,"byte_end":13830572,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830577,"byte_end":13830582,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830587,"byte_end":13830594,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6985},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831212,"byte_end":13831222,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"pub fn values_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830705,"byte_end":13830768,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830773,"byte_end":13830776,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830781,"byte_end":13830824,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830829,"byte_end":13830832,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830837,"byte_end":13830851,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830856,"byte_end":13830859,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830864,"byte_end":13830871,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830876,"byte_end":13830920,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830925,"byte_end":13830928,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830933,"byte_end":13830968,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830973,"byte_end":13830976,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13830981,"byte_end":13831019,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831024,"byte_end":13831055,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831060,"byte_end":13831091,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831096,"byte_end":13831099,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831104,"byte_end":13831140,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831145,"byte_end":13831178,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831183,"byte_end":13831188,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831193,"byte_end":13831200,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6988},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831800,"byte_end":13831808,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831327,"byte_end":13831399,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831404,"byte_end":13831407,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831412,"byte_end":13831483,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831488,"byte_end":13831554,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831559,"byte_end":13831562,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831567,"byte_end":13831581,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831586,"byte_end":13831589,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831594,"byte_end":13831601,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831606,"byte_end":13831650,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831655,"byte_end":13831658,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831663,"byte_end":13831736,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831741,"byte_end":13831776,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831781,"byte_end":13831788,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6989},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832184,"byte_end":13832187,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831870,"byte_end":13831915,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831920,"byte_end":13831923,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831928,"byte_end":13831942,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831947,"byte_end":13831950,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831955,"byte_end":13831962,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13831967,"byte_end":13832011,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832016,"byte_end":13832019,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832024,"byte_end":13832057,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832062,"byte_end":13832089,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832094,"byte_end":13832128,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832133,"byte_end":13832160,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832165,"byte_end":13832172,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6990},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832538,"byte_end":13832546,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832244,"byte_end":13832295,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832300,"byte_end":13832303,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832308,"byte_end":13832322,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832327,"byte_end":13832330,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832335,"byte_end":13832342,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832347,"byte_end":13832381,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832386,"byte_end":13832389,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832394,"byte_end":13832425,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832430,"byte_end":13832456,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832461,"byte_end":13832482,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832487,"byte_end":13832514,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832519,"byte_end":13832526,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6991},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832958,"byte_end":13832963,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832607,"byte_end":13832677,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832682,"byte_end":13832703,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832708,"byte_end":13832711,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832716,"byte_end":13832730,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832735,"byte_end":13832738,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832743,"byte_end":13832750,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832755,"byte_end":13832799,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832804,"byte_end":13832807,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832812,"byte_end":13832845,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832850,"byte_end":13832884,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832889,"byte_end":13832903,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832908,"byte_end":13832934,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13832939,"byte_end":13832946,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6992},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833638,"byte_end":13833644,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V> where K: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833018,"byte_end":13833060,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833065,"byte_end":13833068,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833073,"byte_end":13833138,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833143,"byte_end":13833146,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833151,"byte_end":13833226,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833231,"byte_end":13833270,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833275,"byte_end":13833278,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833283,"byte_end":13833297,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833302,"byte_end":13833305,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833310,"byte_end":13833317,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833322,"byte_end":13833366,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833371,"byte_end":13833374,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833379,"byte_end":13833414,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833419,"byte_end":13833422,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833427,"byte_end":13833483,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833488,"byte_end":13833517,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833522,"byte_end":13833525,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833530,"byte_end":13833560,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833565,"byte_end":13833614,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833619,"byte_end":13833626,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6993},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834375,"byte_end":13834381,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833823,"byte_end":13833924,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833929,"byte_end":13833932,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13833937,"byte_end":13834011,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834016,"byte_end":13834080,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834085,"byte_end":13834088,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834093,"byte_end":13834107,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834112,"byte_end":13834115,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834120,"byte_end":13834127,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834132,"byte_end":13834176,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834181,"byte_end":13834184,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834189,"byte_end":13834224,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834229,"byte_end":13834265,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834270,"byte_end":13834308,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834313,"byte_end":13834351,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834356,"byte_end":13834363,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6995},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13835215,"byte_end":13835227,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834683,"byte_end":13834753,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834758,"byte_end":13834761,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834766,"byte_end":13834840,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834845,"byte_end":13834909,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834914,"byte_end":13834917,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834922,"byte_end":13834936,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834941,"byte_end":13834944,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834949,"byte_end":13834956,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13834961,"byte_end":13835005,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13835010,"byte_end":13835013,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13835018,"byte_end":13835053,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13835058,"byte_end":13835094,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13835099,"byte_end":13835142,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13835147,"byte_end":13835191,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13835196,"byte_end":13835203,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11295},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":13838167,"byte_end":13838171,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":11297},{"krate":0,"index":11298}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11250},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":13839733,"byte_end":13839742,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":11253},{"krate":0,"index":11254}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7304},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":13841546,"byte_end":13841553,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":7307}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":13841382,"byte_end":13841449,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":13841467,"byte_end":13841534,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11213},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":13842402,"byte_end":13842406,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":11215},{"krate":0,"index":11216}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11164},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":13844249,"byte_end":13844258,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":11167},{"krate":0,"index":11168},{"krate":0,"index":11169}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11125},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\timeout.rs","byte_start":13875758,"byte_end":13875765,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":11127},{"krate":0,"index":11128},{"krate":0,"index":11129},{"krate":0,"index":11130}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":7199},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774931,"byte_end":13774940,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":7200},{"krate":0,"index":7201},{"krate":0,"index":7204},{"krate":0,"index":7207},{"krate":0,"index":7209},{"krate":0,"index":7211},{"krate":0,"index":7214},{"krate":0,"index":7215},{"krate":0,"index":7216},{"krate":0,"index":7218},{"krate":0,"index":7219},{"krate":0,"index":7221},{"krate":0,"index":7223},{"krate":0,"index":7225},{"krate":0,"index":7227},{"krate":0,"index":7230},{"krate":0,"index":7232}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774820,"byte_end":13774894,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774895,"byte_end":13774920,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":7200},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776010,"byte_end":13776014,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774955,"byte_end":13775025,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775030,"byte_end":13775053,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775058,"byte_end":13775061,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775066,"byte_end":13775084,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775089,"byte_end":13775092,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775097,"byte_end":13775110,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775115,"byte_end":13775166,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775171,"byte_end":13775178,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775183,"byte_end":13775186,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775191,"byte_end":13775259,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775264,"byte_end":13775339,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775344,"byte_end":13775419,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775424,"byte_end":13775478,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775483,"byte_end":13775558,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775563,"byte_end":13775573,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775578,"byte_end":13775581,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775586,"byte_end":13775600,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775605,"byte_end":13775608,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775613,"byte_end":13775620,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775625,"byte_end":13775645,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775650,"byte_end":13775673,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775678,"byte_end":13775719,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775724,"byte_end":13775727,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775732,"byte_end":13775773,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775778,"byte_end":13775781,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775786,"byte_end":13775831,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775836,"byte_end":13775881,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775886,"byte_end":13775931,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775936,"byte_end":13775978,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775983,"byte_end":13775990,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13775995,"byte_end":13776002,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7201},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777085,"byte_end":13777093,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"pub fn try_next<T, E>(&mut Self) -> TryNext<, Self> where Self: Stream<Item =\nResult<T, E>> + Unpin","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776116,"byte_end":13776184,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776189,"byte_end":13776257,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776262,"byte_end":13776265,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776270,"byte_end":13776288,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776293,"byte_end":13776296,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776301,"byte_end":13776314,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776319,"byte_end":13776376,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776381,"byte_end":13776388,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776393,"byte_end":13776396,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776401,"byte_end":13776465,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776470,"byte_end":13776532,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776537,"byte_end":13776597,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776602,"byte_end":13776645,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776650,"byte_end":13776653,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776658,"byte_end":13776672,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776677,"byte_end":13776680,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776685,"byte_end":13776692,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776697,"byte_end":13776717,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776722,"byte_end":13776745,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776750,"byte_end":13776791,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776796,"byte_end":13776799,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776804,"byte_end":13776871,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776876,"byte_end":13776879,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776884,"byte_end":13776937,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13776942,"byte_end":13776995,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777000,"byte_end":13777053,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777058,"byte_end":13777065,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777070,"byte_end":13777077,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7204},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778161,"byte_end":13778164,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777237,"byte_end":13777312,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777317,"byte_end":13777340,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777345,"byte_end":13777348,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777353,"byte_end":13777425,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777430,"byte_end":13777494,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777499,"byte_end":13777536,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777541,"byte_end":13777544,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777549,"byte_end":13777625,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777630,"byte_end":13777701,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777706,"byte_end":13777727,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777732,"byte_end":13777735,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777740,"byte_end":13777754,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777759,"byte_end":13777762,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777767,"byte_end":13777774,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777779,"byte_end":13777799,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777804,"byte_end":13777827,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777832,"byte_end":13777873,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777878,"byte_end":13777881,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777886,"byte_end":13777923,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777928,"byte_end":13777971,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777976,"byte_end":13777979,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13777984,"byte_end":13778029,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778034,"byte_end":13778079,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778084,"byte_end":13778129,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778134,"byte_end":13778141,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778146,"byte_end":13778153,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7207},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780774,"byte_end":13780779,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778308,"byte_end":13778381,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778386,"byte_end":13778402,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778407,"byte_end":13778410,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778415,"byte_end":13778491,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778496,"byte_end":13778561,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778566,"byte_end":13778641,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778646,"byte_end":13778720,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778725,"byte_end":13778768,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778773,"byte_end":13778776,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778781,"byte_end":13778856,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778861,"byte_end":13778927,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778932,"byte_end":13778975,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778980,"byte_end":13778983,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13778988,"byte_end":13779059,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779064,"byte_end":13779067,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779072,"byte_end":13779115,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779120,"byte_end":13779123,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779128,"byte_end":13779142,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779147,"byte_end":13779150,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779155,"byte_end":13779162,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779167,"byte_end":13779200,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779205,"byte_end":13779231,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779236,"byte_end":13779256,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779261,"byte_end":13779264,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779269,"byte_end":13779297,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779302,"byte_end":13779305,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779310,"byte_end":13779318,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779323,"byte_end":13779341,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779346,"byte_end":13779354,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779359,"byte_end":13779396,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779401,"byte_end":13779422,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779427,"byte_end":13779447,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779452,"byte_end":13779499,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779504,"byte_end":13779551,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779556,"byte_end":13779559,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779564,"byte_end":13779600,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779605,"byte_end":13779608,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779613,"byte_end":13779646,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779651,"byte_end":13779694,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779699,"byte_end":13779738,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779743,"byte_end":13779782,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779787,"byte_end":13779790,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779795,"byte_end":13779840,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779845,"byte_end":13779906,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779911,"byte_end":13779914,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779919,"byte_end":13779958,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779963,"byte_end":13779974,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779979,"byte_end":13779982,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13779987,"byte_end":13780020,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780025,"byte_end":13780078,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780083,"byte_end":13780143,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780148,"byte_end":13780151,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780156,"byte_end":13780195,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780200,"byte_end":13780203,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780208,"byte_end":13780269,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780274,"byte_end":13780277,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780282,"byte_end":13780317,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780322,"byte_end":13780361,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780366,"byte_end":13780377,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780382,"byte_end":13780385,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780390,"byte_end":13780437,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780442,"byte_end":13780489,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780494,"byte_end":13780541,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780546,"byte_end":13780593,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780598,"byte_end":13780645,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780650,"byte_end":13780653,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780658,"byte_end":13780697,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780702,"byte_end":13780744,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780749,"byte_end":13780754,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780759,"byte_end":13780766,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7209},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782084,"byte_end":13782090,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13780935,"byte_end":13781007,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781012,"byte_end":13781026,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781031,"byte_end":13781034,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781039,"byte_end":13781114,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781119,"byte_end":13781165,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781170,"byte_end":13781242,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781247,"byte_end":13781296,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781301,"byte_end":13781359,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781364,"byte_end":13781367,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781372,"byte_end":13781448,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781453,"byte_end":13781525,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781530,"byte_end":13781551,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781556,"byte_end":13781559,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781564,"byte_end":13781578,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781583,"byte_end":13781586,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781591,"byte_end":13781598,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781603,"byte_end":13781623,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781628,"byte_end":13781651,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781656,"byte_end":13781697,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781702,"byte_end":13781705,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781710,"byte_end":13781747,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781752,"byte_end":13781802,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781807,"byte_end":13781810,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781815,"byte_end":13781859,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781864,"byte_end":13781908,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781913,"byte_end":13781957,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13781962,"byte_end":13782006,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782011,"byte_end":13782052,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782057,"byte_end":13782064,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782069,"byte_end":13782076,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7211},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783457,"byte_end":13783467,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<T, F>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<T>, Self: Sized","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782241,"byte_end":13782316,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782321,"byte_end":13782384,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782389,"byte_end":13782392,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782397,"byte_end":13782472,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782477,"byte_end":13782529,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782534,"byte_end":13782610,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782615,"byte_end":13782675,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782680,"byte_end":13782683,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782688,"byte_end":13782764,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782769,"byte_end":13782845,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782850,"byte_end":13782871,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782876,"byte_end":13782879,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782884,"byte_end":13782898,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782903,"byte_end":13782910,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782915,"byte_end":13782935,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782940,"byte_end":13782963,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13782968,"byte_end":13783009,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783014,"byte_end":13783017,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783022,"byte_end":13783059,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783064,"byte_end":13783107,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783112,"byte_end":13783163,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783168,"byte_end":13783175,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783180,"byte_end":13783183,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783188,"byte_end":13783232,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783237,"byte_end":13783281,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783286,"byte_end":13783330,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783335,"byte_end":13783379,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783384,"byte_end":13783425,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783430,"byte_end":13783437,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783442,"byte_end":13783449,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7214},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785599,"byte_end":13785603,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783631,"byte_end":13783686,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783691,"byte_end":13783694,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783699,"byte_end":13783772,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783777,"byte_end":13783849,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783854,"byte_end":13783928,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783933,"byte_end":13783959,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783964,"byte_end":13783967,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783972,"byte_end":13783986,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783991,"byte_end":13783994,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13783999,"byte_end":13784006,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784011,"byte_end":13784054,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784059,"byte_end":13784062,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784067,"byte_end":13784089,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784094,"byte_end":13784129,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784134,"byte_end":13784137,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784142,"byte_end":13784196,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784201,"byte_end":13784223,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784228,"byte_end":13784247,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784252,"byte_end":13784257,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784262,"byte_end":13784265,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784270,"byte_end":13784301,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784306,"byte_end":13784330,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784335,"byte_end":13784338,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784343,"byte_end":13784435,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784440,"byte_end":13784473,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784478,"byte_end":13784518,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784523,"byte_end":13784526,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784531,"byte_end":13784580,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784585,"byte_end":13784614,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784619,"byte_end":13784657,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784662,"byte_end":13784682,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784687,"byte_end":13784720,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784725,"byte_end":13784738,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784743,"byte_end":13784752,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784757,"byte_end":13784762,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784767,"byte_end":13784770,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784775,"byte_end":13784793,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784798,"byte_end":13784819,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784824,"byte_end":13784872,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784877,"byte_end":13784880,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784885,"byte_end":13784926,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784931,"byte_end":13784980,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13784985,"byte_end":13785031,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785036,"byte_end":13785085,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785090,"byte_end":13785136,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785141,"byte_end":13785144,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785149,"byte_end":13785185,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785190,"byte_end":13785229,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785234,"byte_end":13785237,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785242,"byte_end":13785291,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785296,"byte_end":13785342,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785347,"byte_end":13785350,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785355,"byte_end":13785416,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785421,"byte_end":13785467,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785472,"byte_end":13785518,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785523,"byte_end":13785569,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785574,"byte_end":13785579,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785584,"byte_end":13785591,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7215},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786339,"byte_end":13786343,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785696,"byte_end":13785767,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785772,"byte_end":13785775,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785780,"byte_end":13785853,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785858,"byte_end":13785893,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785898,"byte_end":13785901,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785906,"byte_end":13785920,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785925,"byte_end":13785928,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785933,"byte_end":13785940,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785945,"byte_end":13785965,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785970,"byte_end":13785993,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13785998,"byte_end":13786039,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786044,"byte_end":13786047,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786052,"byte_end":13786102,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786107,"byte_end":13786110,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786115,"byte_end":13786160,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786165,"byte_end":13786210,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786215,"byte_end":13786260,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786265,"byte_end":13786307,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786312,"byte_end":13786319,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786324,"byte_end":13786331,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7216},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787236,"byte_end":13787246,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786449,"byte_end":13786512,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786517,"byte_end":13786540,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786545,"byte_end":13786548,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786553,"byte_end":13786628,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786633,"byte_end":13786705,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786710,"byte_end":13786774,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786779,"byte_end":13786782,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786787,"byte_end":13786801,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786806,"byte_end":13786809,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786814,"byte_end":13786821,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786826,"byte_end":13786846,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786851,"byte_end":13786874,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786879,"byte_end":13786920,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786925,"byte_end":13786928,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13786933,"byte_end":13786999,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787004,"byte_end":13787007,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787012,"byte_end":13787057,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787062,"byte_end":13787107,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787112,"byte_end":13787157,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787162,"byte_end":13787204,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787209,"byte_end":13787216,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787221,"byte_end":13787228,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7218},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787943,"byte_end":13787947,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787403,"byte_end":13787469,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787474,"byte_end":13787496,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787501,"byte_end":13787504,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787509,"byte_end":13787523,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787528,"byte_end":13787531,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787536,"byte_end":13787543,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787548,"byte_end":13787568,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787573,"byte_end":13787596,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787601,"byte_end":13787642,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787647,"byte_end":13787650,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787655,"byte_end":13787705,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787710,"byte_end":13787713,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787718,"byte_end":13787763,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787768,"byte_end":13787813,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787818,"byte_end":13787864,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787869,"byte_end":13787911,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787916,"byte_end":13787923,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13787928,"byte_end":13787935,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7219},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788925,"byte_end":13788935,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788053,"byte_end":13788126,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788131,"byte_end":13788154,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788159,"byte_end":13788162,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788167,"byte_end":13788245,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788250,"byte_end":13788322,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788327,"byte_end":13788387,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788392,"byte_end":13788395,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788400,"byte_end":13788463,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788468,"byte_end":13788471,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788476,"byte_end":13788490,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788495,"byte_end":13788498,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788503,"byte_end":13788510,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788515,"byte_end":13788535,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788540,"byte_end":13788563,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788568,"byte_end":13788609,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788614,"byte_end":13788688,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788693,"byte_end":13788696,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788701,"byte_end":13788746,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788751,"byte_end":13788796,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788801,"byte_end":13788846,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788851,"byte_end":13788893,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788898,"byte_end":13788905,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13788910,"byte_end":13788917,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7221},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790514,"byte_end":13790517,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789092,"byte_end":13789153,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789158,"byte_end":13789161,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789166,"byte_end":13789236,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789241,"byte_end":13789311,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789316,"byte_end":13789381,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789386,"byte_end":13789438,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789443,"byte_end":13789446,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789451,"byte_end":13789523,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789528,"byte_end":13789602,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789607,"byte_end":13789643,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789648,"byte_end":13789651,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789656,"byte_end":13789691,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789696,"byte_end":13789699,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789704,"byte_end":13789718,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789723,"byte_end":13789726,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789731,"byte_end":13789747,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789752,"byte_end":13789755,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789760,"byte_end":13789767,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789772,"byte_end":13789792,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789797,"byte_end":13789820,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789825,"byte_end":13789866,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789871,"byte_end":13789874,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789879,"byte_end":13789901,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789906,"byte_end":13789909,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789914,"byte_end":13789966,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789971,"byte_end":13789974,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13789979,"byte_end":13790032,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790037,"byte_end":13790044,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790049,"byte_end":13790056,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790061,"byte_end":13790064,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790069,"byte_end":13790103,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790108,"byte_end":13790111,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790116,"byte_end":13790123,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790128,"byte_end":13790148,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790153,"byte_end":13790176,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790181,"byte_end":13790222,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790227,"byte_end":13790230,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790235,"byte_end":13790257,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790262,"byte_end":13790265,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790270,"byte_end":13790306,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790311,"byte_end":13790314,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790319,"byte_end":13790361,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790366,"byte_end":13790369,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790374,"byte_end":13790433,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790438,"byte_end":13790482,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790487,"byte_end":13790494,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790499,"byte_end":13790506,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7223},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792042,"byte_end":13792045,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790682,"byte_end":13790741,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790746,"byte_end":13790749,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790754,"byte_end":13790824,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790829,"byte_end":13790902,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790907,"byte_end":13790971,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13790976,"byte_end":13790996,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791001,"byte_end":13791004,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791009,"byte_end":13791081,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791086,"byte_end":13791159,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791164,"byte_end":13791199,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791204,"byte_end":13791207,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791212,"byte_end":13791248,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791253,"byte_end":13791256,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791261,"byte_end":13791277,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791282,"byte_end":13791285,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791290,"byte_end":13791297,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791302,"byte_end":13791322,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791327,"byte_end":13791350,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791355,"byte_end":13791396,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791401,"byte_end":13791404,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791409,"byte_end":13791431,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791436,"byte_end":13791439,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791444,"byte_end":13791496,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791501,"byte_end":13791504,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791509,"byte_end":13791562,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791567,"byte_end":13791574,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791579,"byte_end":13791586,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791591,"byte_end":13791594,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791599,"byte_end":13791632,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791637,"byte_end":13791640,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791645,"byte_end":13791652,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791657,"byte_end":13791677,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791682,"byte_end":13791705,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791710,"byte_end":13791751,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791756,"byte_end":13791759,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791764,"byte_end":13791786,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791791,"byte_end":13791794,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791799,"byte_end":13791835,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791840,"byte_end":13791843,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791848,"byte_end":13791889,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791894,"byte_end":13791897,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791902,"byte_end":13791961,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13791966,"byte_end":13792010,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792015,"byte_end":13792022,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792027,"byte_end":13792034,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7225},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793188,"byte_end":13793193,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792210,"byte_end":13792281,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792286,"byte_end":13792342,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792347,"byte_end":13792350,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792355,"byte_end":13792429,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792434,"byte_end":13792470,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792475,"byte_end":13792478,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792483,"byte_end":13792497,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792502,"byte_end":13792505,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792510,"byte_end":13792517,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792522,"byte_end":13792563,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792568,"byte_end":13792571,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792576,"byte_end":13792594,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792599,"byte_end":13792620,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792625,"byte_end":13792671,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792676,"byte_end":13792722,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792727,"byte_end":13792730,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792735,"byte_end":13792775,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792780,"byte_end":13792783,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792788,"byte_end":13792837,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792842,"byte_end":13792891,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792896,"byte_end":13792945,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13792950,"byte_end":13792999,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793004,"byte_end":13793053,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793058,"byte_end":13793107,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793112,"byte_end":13793158,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793163,"byte_end":13793168,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793173,"byte_end":13793180,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7227},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793786,"byte_end":13793790,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, B, F> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793349,"byte_end":13793418,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793423,"byte_end":13793459,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793464,"byte_end":13793467,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793472,"byte_end":13793486,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793491,"byte_end":13793507,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793512,"byte_end":13793519,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793524,"byte_end":13793544,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793549,"byte_end":13793572,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793577,"byte_end":13793610,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793615,"byte_end":13793618,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793623,"byte_end":13793665,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793670,"byte_end":13793718,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793723,"byte_end":13793726,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793731,"byte_end":13793754,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793759,"byte_end":13793766,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793771,"byte_end":13793778,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7230},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796103,"byte_end":13796110,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<T>(Self) -> Collect<Self, T> where T: FromStream<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13793969,"byte_end":13794031,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794036,"byte_end":13794039,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794044,"byte_end":13794120,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794125,"byte_end":13794192,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794197,"byte_end":13794245,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794250,"byte_end":13794315,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794320,"byte_end":13794323,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794328,"byte_end":13794342,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794347,"byte_end":13794350,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794355,"byte_end":13794429,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794434,"byte_end":13794506,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794511,"byte_end":13794586,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794591,"byte_end":13794653,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794658,"byte_end":13794661,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794666,"byte_end":13794677,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794682,"byte_end":13794685,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794690,"byte_end":13794760,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794765,"byte_end":13794803,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794808,"byte_end":13794811,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794816,"byte_end":13794830,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794835,"byte_end":13794838,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794843,"byte_end":13794859,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794864,"byte_end":13794867,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794872,"byte_end":13794879,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794884,"byte_end":13794925,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794930,"byte_end":13794933,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794938,"byte_end":13794956,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794961,"byte_end":13794982,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13794987,"byte_end":13795018,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795023,"byte_end":13795062,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795067,"byte_end":13795098,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795103,"byte_end":13795129,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795134,"byte_end":13795157,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795162,"byte_end":13795165,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795170,"byte_end":13795213,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795218,"byte_end":13795223,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795228,"byte_end":13795235,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795240,"byte_end":13795243,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795248,"byte_end":13795290,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795295,"byte_end":13795298,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795303,"byte_end":13795310,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795315,"byte_end":13795356,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795361,"byte_end":13795364,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795369,"byte_end":13795387,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795392,"byte_end":13795413,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795418,"byte_end":13795483,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795488,"byte_end":13795532,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795537,"byte_end":13795588,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795593,"byte_end":13795619,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795624,"byte_end":13795647,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795652,"byte_end":13795655,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795660,"byte_end":13795706,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795711,"byte_end":13795714,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795719,"byte_end":13795791,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795796,"byte_end":13795868,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795873,"byte_end":13795876,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795881,"byte_end":13795925,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795930,"byte_end":13795963,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795968,"byte_end":13795994,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13795999,"byte_end":13796022,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796027,"byte_end":13796030,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796035,"byte_end":13796073,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796078,"byte_end":13796083,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796088,"byte_end":13796095,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7232},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798765,"byte_end":13798772,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":7199},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796250,"byte_end":13796302,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796307,"byte_end":13796310,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796315,"byte_end":13796387,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796392,"byte_end":13796462,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796467,"byte_end":13796470,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796475,"byte_end":13796551,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796556,"byte_end":13796633,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796638,"byte_end":13796714,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796719,"byte_end":13796762,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796767,"byte_end":13796770,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796775,"byte_end":13796786,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796791,"byte_end":13796794,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796799,"byte_end":13796865,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796870,"byte_end":13796896,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796901,"byte_end":13796904,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796909,"byte_end":13796984,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13796989,"byte_end":13797023,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797028,"byte_end":13797031,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797036,"byte_end":13797050,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797055,"byte_end":13797058,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797063,"byte_end":13797137,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797142,"byte_end":13797145,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797150,"byte_end":13797157,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797162,"byte_end":13797182,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797187,"byte_end":13797210,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797215,"byte_end":13797256,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797261,"byte_end":13797289,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797294,"byte_end":13797337,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797342,"byte_end":13797345,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797350,"byte_end":13797418,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797423,"byte_end":13797426,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797431,"byte_end":13797498,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797503,"byte_end":13797560,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797565,"byte_end":13797622,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797627,"byte_end":13797684,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797689,"byte_end":13797743,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797748,"byte_end":13797751,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797756,"byte_end":13797841,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797846,"byte_end":13797922,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797927,"byte_end":13797984,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13797989,"byte_end":13798039,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798044,"byte_end":13798101,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798106,"byte_end":13798163,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798168,"byte_end":13798222,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798227,"byte_end":13798230,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798235,"byte_end":13798306,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798311,"byte_end":13798374,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798379,"byte_end":13798451,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798456,"byte_end":13798518,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798523,"byte_end":13798526,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798531,"byte_end":13798588,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798593,"byte_end":13798647,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798652,"byte_end":13798659,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798664,"byte_end":13798671,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798676,"byte_end":13798705,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":7363},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":7364},{"krate":0,"index":7378},{"krate":0,"index":7379},{"krate":0,"index":7382},{"krate":0,"index":7385},{"krate":0,"index":7612},{"krate":0,"index":8189},{"krate":0,"index":8291},{"krate":0,"index":8292},{"krate":0,"index":8295},{"krate":0,"index":8298},{"krate":0,"index":8301},{"krate":0,"index":8304},{"krate":0,"index":8379},{"krate":0,"index":8382},{"krate":0,"index":8537},{"krate":0,"index":8658},{"krate":0,"index":8836},{"krate":0,"index":8865},{"krate":0,"index":8866},{"krate":0,"index":8869},{"krate":0,"index":8872},{"krate":0,"index":8875},{"krate":0,"index":8990},{"krate":0,"index":8991},{"krate":0,"index":8994},{"krate":0,"index":8997},{"krate":0,"index":9000},{"krate":0,"index":9063},{"krate":0,"index":9066}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877304,"byte_end":13877368,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877369,"byte_end":13877372,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877373,"byte_end":13877448,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877449,"byte_end":13877529,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877530,"byte_end":13877609,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877610,"byte_end":13877644,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877645,"byte_end":13877648,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877649,"byte_end":13877673,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877674,"byte_end":13877677,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877678,"byte_end":13877699,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877700,"byte_end":13877703,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877704,"byte_end":13877777,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877778,"byte_end":13877857,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877858,"byte_end":13877927,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877928,"byte_end":13877931,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13877932,"byte_end":13878011,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878012,"byte_end":13878089,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878090,"byte_end":13878165,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878166,"byte_end":13878238,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878239,"byte_end":13878311,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports muliple consumers, many different separate tasks may **receive**","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878312,"byte_end":13878389,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ messages.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878390,"byte_end":13878403,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878404,"byte_end":13878407,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878408,"byte_end":13878486,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878487,"byte_end":13878548,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878549,"byte_end":13878552,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878553,"byte_end":13878577,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878578,"byte_end":13878581,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878582,"byte_end":13878661,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878662,"byte_end":13878740,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878741,"byte_end":13878785,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878786,"byte_end":13878789,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878790,"byte_end":13878870,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878871,"byte_end":13878887,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878888,"byte_end":13878891,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878892,"byte_end":13878899,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878900,"byte_end":13878929,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878930,"byte_end":13878933,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878934,"byte_end":13878977,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13878978,"byte_end":13879040,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879041,"byte_end":13879046,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879047,"byte_end":13879050,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879051,"byte_end":13879069,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879070,"byte_end":13879091,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879092,"byte_end":13879134,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879135,"byte_end":13879138,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879139,"byte_end":13879172,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879173,"byte_end":13879220,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879221,"byte_end":13879255,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879256,"byte_end":13879267,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879268,"byte_end":13879271,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879272,"byte_end":13879349,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879350,"byte_end":13879353,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879354,"byte_end":13879396,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879397,"byte_end":13879433,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879434,"byte_end":13879439,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879440,"byte_end":13879447,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879448,"byte_end":13879451,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879452,"byte_end":13879516,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879517,"byte_end":13879581,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879582,"byte_end":13879644,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879645,"byte_end":13879715,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879716,"byte_end":13879781,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879782,"byte_end":13879792,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879793,"byte_end":13879796,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879797,"byte_end":13879813,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879814,"byte_end":13879817,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879818,"byte_end":13879825,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879826,"byte_end":13879869,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879870,"byte_end":13879921,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879922,"byte_end":13879927,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879928,"byte_end":13879931,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879932,"byte_end":13879950,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879951,"byte_end":13879972,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13879973,"byte_end":13880024,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880025,"byte_end":13880061,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880062,"byte_end":13880073,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880074,"byte_end":13880077,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880078,"byte_end":13880155,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880156,"byte_end":13880159,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880160,"byte_end":13880202,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880203,"byte_end":13880248,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880249,"byte_end":13880254,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880255,"byte_end":13880262,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880263,"byte_end":13880266,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880267,"byte_end":13880289,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880290,"byte_end":13880333,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880334,"byte_end":13880337,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880338,"byte_end":13880359,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880360,"byte_end":13880363,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880364,"byte_end":13880441,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880442,"byte_end":13880522,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880523,"byte_end":13880578,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880579,"byte_end":13880582,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880583,"byte_end":13880661,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880662,"byte_end":13880682,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880683,"byte_end":13880686,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880687,"byte_end":13880694,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880695,"byte_end":13880721,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880722,"byte_end":13880725,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880726,"byte_end":13880779,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880780,"byte_end":13880834,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880835,"byte_end":13880840,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880841,"byte_end":13880844,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880845,"byte_end":13880863,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880864,"byte_end":13880885,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880886,"byte_end":13880936,"line_start":109,"line_end":109,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880937,"byte_end":13880940,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880941,"byte_end":13880974,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13880975,"byte_end":13881003,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881004,"byte_end":13881056,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881057,"byte_end":13881101,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881102,"byte_end":13881115,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881116,"byte_end":13881127,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881128,"byte_end":13881131,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881132,"byte_end":13881179,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881180,"byte_end":13881218,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881219,"byte_end":13881228,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881229,"byte_end":13881234,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881235,"byte_end":13881242,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881243,"byte_end":13881246,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881247,"byte_end":13881327,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881328,"byte_end":13881405,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881406,"byte_end":13881479,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881480,"byte_end":13881555,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881556,"byte_end":13881569,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881570,"byte_end":13881573,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881574,"byte_end":13881649,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881650,"byte_end":13881729,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881730,"byte_end":13881808,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881809,"byte_end":13881888,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881889,"byte_end":13881969,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13881970,"byte_end":13882035,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882036,"byte_end":13882039,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882040,"byte_end":13882120,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882121,"byte_end":13882133,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882134,"byte_end":13882137,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882138,"byte_end":13882151,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882152,"byte_end":13882193,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882194,"byte_end":13882224,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882225,"byte_end":13882251,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882252,"byte_end":13882255,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882256,"byte_end":13882274,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882275,"byte_end":13882314,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882315,"byte_end":13882390,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882391,"byte_end":13882437,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882438,"byte_end":13882441,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882442,"byte_end":13882466,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882467,"byte_end":13882546,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882547,"byte_end":13882578,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let mut tx = tx.clone();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882579,"byte_end":13882615,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882616,"byte_end":13882619,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882620,"byte_end":13882657,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882658,"byte_end":13882720,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882721,"byte_end":13882736,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882737,"byte_end":13882746,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882747,"byte_end":13882750,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882751,"byte_end":13882830,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882831,"byte_end":13882906,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882907,"byte_end":13882985,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13882986,"byte_end":13883033,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883034,"byte_end":13883051,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883052,"byte_end":13883055,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883056,"byte_end":13883103,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883104,"byte_end":13883145,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883146,"byte_end":13883155,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883156,"byte_end":13883159,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883160,"byte_end":13883174,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883175,"byte_end":13883180,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883181,"byte_end":13883188,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883189,"byte_end":13883192,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883193,"byte_end":13883268,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883269,"byte_end":13883344,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883345,"byte_end":13883424,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883425,"byte_end":13883490,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883491,"byte_end":13883568,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883569,"byte_end":13883572,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883573,"byte_end":13883651,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883652,"byte_end":13883732,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883733,"byte_end":13883778,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883779,"byte_end":13883782,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883783,"byte_end":13883790,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883791,"byte_end":13883828,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883829,"byte_end":13883856,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883857,"byte_end":13883860,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883861,"byte_end":13883879,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883880,"byte_end":13883898,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883899,"byte_end":13883942,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883943,"byte_end":13883948,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883949,"byte_end":13883952,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883953,"byte_end":13883971,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883972,"byte_end":13883993,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13883994,"byte_end":13884083,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884084,"byte_end":13884087,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884088,"byte_end":13884133,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884134,"byte_end":13884167,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884168,"byte_end":13884205,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884206,"byte_end":13884209,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884210,"byte_end":13884277,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884278,"byte_end":13884305,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884306,"byte_end":13884340,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884341,"byte_end":13884384,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884385,"byte_end":13884422,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884423,"byte_end":13884476,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884477,"byte_end":13884498,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884499,"byte_end":13884516,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884517,"byte_end":13884530,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884531,"byte_end":13884542,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884543,"byte_end":13884546,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884547,"byte_end":13884585,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884586,"byte_end":13884589,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884590,"byte_end":13884650,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884651,"byte_end":13884675,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let mut cmd_tx = cmd_tx.clone();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884676,"byte_end":13884720,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884721,"byte_end":13884724,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884725,"byte_end":13884780,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884781,"byte_end":13884841,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884842,"byte_end":13884845,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884846,"byte_end":13884916,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884917,"byte_end":13884966,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884967,"byte_end":13884970,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13884971,"byte_end":13885024,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885025,"byte_end":13885041,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885042,"byte_end":13885051,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885052,"byte_end":13885055,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885056,"byte_end":13885097,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885098,"byte_end":13885149,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885150,"byte_end":13885189,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885190,"byte_end":13885199,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885200,"byte_end":13885205,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885206,"byte_end":13885213,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885214,"byte_end":13885217,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885218,"byte_end":13885234,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885235,"byte_end":13885238,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885239,"byte_end":13885265,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885266,"byte_end":13885269,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885270,"byte_end":13885337,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885338,"byte_end":13885410,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885411,"byte_end":13885484,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885485,"byte_end":13885538,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885539,"byte_end":13885542,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885543,"byte_end":13885623,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885624,"byte_end":13885646,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885647,"byte_end":13885650,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885651,"byte_end":13885666,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885667,"byte_end":13885670,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885671,"byte_end":13885678,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885679,"byte_end":13885710,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885711,"byte_end":13885714,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885715,"byte_end":13885733,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885734,"byte_end":13885755,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885756,"byte_end":13885807,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885808,"byte_end":13885845,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885846,"byte_end":13885849,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885850,"byte_end":13885883,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885884,"byte_end":13885938,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885939,"byte_end":13885993,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13885994,"byte_end":13886005,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886006,"byte_end":13886009,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886010,"byte_end":13886043,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886044,"byte_end":13886098,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886099,"byte_end":13886153,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886154,"byte_end":13886165,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886166,"byte_end":13886169,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886170,"byte_end":13886199,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886200,"byte_end":13886229,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886230,"byte_end":13886235,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886236,"byte_end":13886243,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886244,"byte_end":13886247,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886248,"byte_end":13886297,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886298,"byte_end":13886301,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886302,"byte_end":13886324,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886325,"byte_end":13886328,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886329,"byte_end":13886405,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886406,"byte_end":13886484,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886485,"byte_end":13886564,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886565,"byte_end":13886630,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886631,"byte_end":13886634,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886635,"byte_end":13886715,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886716,"byte_end":13886719,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886720,"byte_end":13886794,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886795,"byte_end":13886868,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886869,"byte_end":13886882,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886883,"byte_end":13886886,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886887,"byte_end":13886960,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13886961,"byte_end":13887041,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887042,"byte_end":13887117,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887118,"byte_end":13887121,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887122,"byte_end":13887129,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887130,"byte_end":13887157,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887158,"byte_end":13887205,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887206,"byte_end":13887209,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887210,"byte_end":13887226,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887227,"byte_end":13887230,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887231,"byte_end":13887273,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887274,"byte_end":13887293,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887294,"byte_end":13887320,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887321,"byte_end":13887326,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887327,"byte_end":13887330,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887331,"byte_end":13887348,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887349,"byte_end":13887406,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887407,"byte_end":13887465,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887466,"byte_end":13887518,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887519,"byte_end":13887528,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887529,"byte_end":13887534,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887535,"byte_end":13887538,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887539,"byte_end":13887574,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887575,"byte_end":13887603,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887604,"byte_end":13887609,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887610,"byte_end":13887613,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887614,"byte_end":13887632,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887633,"byte_end":13887654,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887655,"byte_end":13887698,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887699,"byte_end":13887764,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887765,"byte_end":13887768,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887769,"byte_end":13887847,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887848,"byte_end":13887902,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887903,"byte_end":13887906,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887907,"byte_end":13887951,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887952,"byte_end":13887985,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13887986,"byte_end":13888004,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888005,"byte_end":13888054,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::delay_for(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888055,"byte_end":13888118,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888119,"byte_end":13888122,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888123,"byte_end":13888169,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888170,"byte_end":13888243,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888244,"byte_end":13888247,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888248,"byte_end":13888322,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888323,"byte_end":13888363,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888364,"byte_end":13888405,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.broadcast(new_config.clone()).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888406,"byte_end":13888468,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"/                 config = new_config;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888469,"byte_end":13888509,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888510,"byte_end":13888527,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888528,"byte_end":13888541,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888542,"byte_end":13888553,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888554,"byte_end":13888557,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888558,"byte_end":13888591,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888592,"byte_end":13888595,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888596,"byte_end":13888674,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888675,"byte_end":13888729,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888730,"byte_end":13888740,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888741,"byte_end":13888818,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888819,"byte_end":13888897,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888898,"byte_end":13888933,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888934,"byte_end":13888957,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13888958,"byte_end":13889021,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889022,"byte_end":13889058,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889059,"byte_end":13889062,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889063,"byte_end":13889113,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889114,"byte_end":13889193,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889194,"byte_end":13889269,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889270,"byte_end":13889323,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889324,"byte_end":13889370,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889371,"byte_end":13889403,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889404,"byte_end":13889407,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Receive the **initial** configuration value. As this is the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889408,"byte_end":13889486,"line_start":358,"line_end":358,"column_start":1,"column_end":79}},{"value":"/             // first time the config is received from the watch, it will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889487,"byte_end":13889563,"line_start":359,"line_end":359,"column_start":1,"column_end":77}},{"value":"/             // always complete immediatedly.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889564,"byte_end":13889612,"line_start":360,"line_end":360,"column_start":1,"column_end":49}},{"value":"/             let mut conf = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889613,"byte_end":13889669,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889670,"byte_end":13889673,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889674,"byte_end":13889724,"line_start":363,"line_end":363,"column_start":1,"column_end":51}},{"value":"/             let mut delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889725,"byte_end":13889800,"line_start":364,"line_end":364,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889801,"byte_end":13889804,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889805,"byte_end":13889827,"line_start":366,"line_end":366,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889828,"byte_end":13889864,"line_start":367,"line_end":367,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut delay => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889865,"byte_end":13889908,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889909,"byte_end":13889973,"line_start":369,"line_end":369,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13889974,"byte_end":13890031,"line_start":370,"line_end":370,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890032,"byte_end":13890035,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890036,"byte_end":13890091,"line_start":372,"line_end":372,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890092,"byte_end":13890146,"line_start":373,"line_end":373,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890147,"byte_end":13890150,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890151,"byte_end":13890201,"line_start":375,"line_end":375,"column_start":1,"column_end":51}},{"value":"/                         delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890202,"byte_end":13890281,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"/                     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890282,"byte_end":13890307,"line_start":377,"line_end":377,"column_start":1,"column_end":26}},{"value":"/                     new_conf = rx.recv() => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890308,"byte_end":13890357,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"/                         conf = new_conf.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890358,"byte_end":13890411,"line_start":379,"line_end":379,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890412,"byte_end":13890415,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890416,"byte_end":13890493,"line_start":381,"line_end":381,"column_start":1,"column_end":78}},{"value":"/                         // `delay` using the new `timeout` value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890494,"byte_end":13890563,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"/                         delay.reset(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890564,"byte_end":13890629,"line_start":383,"line_end":383,"column_start":1,"column_end":66}},{"value":"/                     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890630,"byte_end":13890655,"line_start":384,"line_end":384,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890656,"byte_end":13890696,"line_start":385,"line_end":385,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890697,"byte_end":13890752,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890753,"byte_end":13890787,"line_start":387,"line_end":387,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890788,"byte_end":13890813,"line_start":388,"line_end":388,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890814,"byte_end":13890835,"line_start":389,"line_end":389,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890836,"byte_end":13890853,"line_start":390,"line_end":390,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890854,"byte_end":13890869,"line_start":391,"line_end":391,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890870,"byte_end":13890873,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890874,"byte_end":13890907,"line_start":393,"line_end":393,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890908,"byte_end":13890917,"line_start":394,"line_end":394,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890918,"byte_end":13890921,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890922,"byte_end":13890963,"line_start":396,"line_end":396,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890964,"byte_end":13890998,"line_start":397,"line_end":397,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13890999,"byte_end":13891008,"line_start":398,"line_end":398,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891009,"byte_end":13891014,"line_start":399,"line_end":399,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891015,"byte_end":13891022,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891023,"byte_end":13891026,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891027,"byte_end":13891072,"line_start":402,"line_end":402,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891073,"byte_end":13891126,"line_start":403,"line_end":403,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891127,"byte_end":13891130,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891131,"byte_end":13891158,"line_start":405,"line_end":405,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891159,"byte_end":13891162,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891163,"byte_end":13891237,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891238,"byte_end":13891312,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts parts but will wait","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891313,"byte_end":13891389,"line_start":409,"line_end":409,"column_start":1,"column_end":77}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891390,"byte_end":13891440,"line_start":410,"line_end":410,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891441,"byte_end":13891444,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891445,"byte_end":13891522,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891523,"byte_end":13891600,"line_start":413,"line_end":413,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891601,"byte_end":13891604,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891605,"byte_end":13891682,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891683,"byte_end":13891738,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891739,"byte_end":13891742,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891743,"byte_end":13891822,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891823,"byte_end":13891901,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891902,"byte_end":13891927,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891928,"byte_end":13891931,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13891932,"byte_end":13892007,"line_start":422,"line_end":422,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892008,"byte_end":13892084,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892085,"byte_end":13892152,"line_start":424,"line_end":424,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892153,"byte_end":13892156,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892157,"byte_end":13892233,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892234,"byte_end":13892310,"line_start":427,"line_end":427,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892311,"byte_end":13892385,"line_start":428,"line_end":428,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892386,"byte_end":13892413,"line_start":429,"line_end":429,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":9188},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894547,"byte_end":13894554,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":9189},{"krate":0,"index":9190},{"krate":0,"index":9191}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893594,"byte_end":13893682,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893683,"byte_end":13893686,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893687,"byte_end":13893694,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893695,"byte_end":13893715,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893716,"byte_end":13893739,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893740,"byte_end":13893769,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893770,"byte_end":13893773,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893774,"byte_end":13893808,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893809,"byte_end":13893832,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893833,"byte_end":13893836,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893837,"byte_end":13893882,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893883,"byte_end":13893928,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893929,"byte_end":13893949,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893950,"byte_end":13893982,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13893983,"byte_end":13894037,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894038,"byte_end":13894083,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894084,"byte_end":13894117,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894118,"byte_end":13894154,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894155,"byte_end":13894191,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894192,"byte_end":13894227,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894228,"byte_end":13894242,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894243,"byte_end":13894254,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894255,"byte_end":13894260,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894261,"byte_end":13894335,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894336,"byte_end":13894374,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894375,"byte_end":13894430,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894431,"byte_end":13894502,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894503,"byte_end":13894510,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894511,"byte_end":13894518,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7372},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13895017,"byte_end":13895020,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894777,"byte_end":13894844,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894849,"byte_end":13894852,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894857,"byte_end":13894945,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894950,"byte_end":13895005,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7373},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13896093,"byte_end":13896097,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13895619,"byte_end":13895679,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13895684,"byte_end":13895687,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13895692,"byte_end":13895768,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13895773,"byte_end":13895798,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13895803,"byte_end":13895806,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13895811,"byte_end":13895904,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13895909,"byte_end":13896002,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13896007,"byte_end":13896075,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":9200},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13898019,"byte_end":13898036,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13897883,"byte_end":13897983,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":7377},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13898284,"byte_end":13898293,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13898074,"byte_end":13898141,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13898146,"byte_end":13898149,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13898154,"byte_end":13898246,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13898251,"byte_end":13898272,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":7385},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":7386},{"krate":0,"index":7389},{"krate":0,"index":7392},{"krate":0,"index":7393},{"krate":0,"index":7396},{"krate":0,"index":7399},{"krate":0,"index":7402},{"krate":0,"index":7405},{"krate":0,"index":7406},{"krate":0,"index":7409},{"krate":0,"index":7412},{"krate":0,"index":7415},{"krate":0,"index":7418},{"krate":0,"index":7419},{"krate":0,"index":7421},{"krate":0,"index":7424},{"krate":0,"index":7427},{"krate":0,"index":7428},{"krate":0,"index":7430},{"krate":0,"index":7431},{"krate":0,"index":7434},{"krate":0,"index":7437},{"krate":0,"index":7440},{"krate":0,"index":7443},{"krate":0,"index":7446},{"krate":0,"index":9207},{"krate":0,"index":9211},{"krate":0,"index":9214},{"krate":0,"index":9220},{"krate":0,"index":9222},{"krate":0,"index":9223},{"krate":0,"index":9226},{"krate":0,"index":9234},{"krate":0,"index":9236},{"krate":0,"index":9237},{"krate":0,"index":7451},{"krate":0,"index":7457},{"krate":0,"index":7462},{"krate":0,"index":7468},{"krate":0,"index":7473},{"krate":0,"index":7477},{"krate":0,"index":7483},{"krate":0,"index":7487},{"krate":0,"index":7490},{"krate":0,"index":7494},{"krate":0,"index":7497},{"krate":0,"index":7500},{"krate":0,"index":7501},{"krate":0,"index":7503},{"krate":0,"index":7505},{"krate":0,"index":7507},{"krate":0,"index":7509},{"krate":0,"index":7511},{"krate":0,"index":7520},{"krate":0,"index":7522},{"krate":0,"index":7525},{"krate":0,"index":7528},{"krate":0,"index":7532},{"krate":0,"index":7556},{"krate":0,"index":7561},{"krate":0,"index":7566},{"krate":0,"index":7571},{"krate":0,"index":9240},{"krate":0,"index":9243},{"krate":0,"index":9247},{"krate":0,"index":7576},{"krate":0,"index":7582},{"krate":0,"index":7588},{"krate":0,"index":7591},{"krate":0,"index":7594},{"krate":0,"index":7599},{"krate":0,"index":7604},{"krate":0,"index":7606},{"krate":0,"index":7607},{"krate":0,"index":7609},{"krate":0,"index":7610}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13898335,"byte_end":13898415,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13898416,"byte_end":13898434,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13898435,"byte_end":13898438,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13898439,"byte_end":13898517,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13898518,"byte_end":13898593,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13898594,"byte_end":13898672,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13898673,"byte_end":13898727,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13898728,"byte_end":13898731,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13898732,"byte_end":13898808,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13898809,"byte_end":13898889,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13898890,"byte_end":13898967,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13898968,"byte_end":13899018,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899019,"byte_end":13899022,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899023,"byte_end":13899101,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899102,"byte_end":13899159,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899160,"byte_end":13899163,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899164,"byte_end":13899242,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899243,"byte_end":13899315,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899316,"byte_end":13899332,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899333,"byte_end":13899336,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899337,"byte_end":13899351,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899352,"byte_end":13899355,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899356,"byte_end":13899436,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899437,"byte_end":13899516,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899517,"byte_end":13899594,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899595,"byte_end":13899673,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899674,"byte_end":13899681,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899682,"byte_end":13899685,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899686,"byte_end":13899763,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899764,"byte_end":13899839,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899840,"byte_end":13899920,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899921,"byte_end":13899924,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899925,"byte_end":13899997,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13899998,"byte_end":13900076,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900077,"byte_end":13900153,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900154,"byte_end":13900213,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900214,"byte_end":13900217,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900218,"byte_end":13900296,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900297,"byte_end":13900371,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900372,"byte_end":13900408,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900409,"byte_end":13900412,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900413,"byte_end":13900492,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900493,"byte_end":13900570,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900571,"byte_end":13900646,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900647,"byte_end":13900678,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900679,"byte_end":13900682,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900683,"byte_end":13900697,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900698,"byte_end":13900701,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900702,"byte_end":13900777,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900778,"byte_end":13900856,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900857,"byte_end":13900934,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900935,"byte_end":13900966,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900967,"byte_end":13900970,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13900971,"byte_end":13901017,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901018,"byte_end":13901086,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901087,"byte_end":13901137,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901138,"byte_end":13901186,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901187,"byte_end":13901255,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901256,"byte_end":13901324,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901325,"byte_end":13901377,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901378,"byte_end":13901381,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901382,"byte_end":13901396,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901397,"byte_end":13901400,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901401,"byte_end":13901416,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901417,"byte_end":13901420,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901421,"byte_end":13901428,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901429,"byte_end":13901460,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901461,"byte_end":13901464,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901465,"byte_end":13901483,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901484,"byte_end":13901505,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901506,"byte_end":13901557,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901558,"byte_end":13901595,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901596,"byte_end":13901599,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901600,"byte_end":13901633,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901634,"byte_end":13901688,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901689,"byte_end":13901743,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901744,"byte_end":13901755,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901756,"byte_end":13901759,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901760,"byte_end":13901793,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901794,"byte_end":13901848,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901849,"byte_end":13901903,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901904,"byte_end":13901915,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901916,"byte_end":13901919,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901920,"byte_end":13901949,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901950,"byte_end":13901979,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901980,"byte_end":13901985,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901986,"byte_end":13901993,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901994,"byte_end":13901997,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13901998,"byte_end":13902014,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902015,"byte_end":13902018,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902019,"byte_end":13902026,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902027,"byte_end":13902058,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902059,"byte_end":13902062,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902063,"byte_end":13902081,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902082,"byte_end":13902103,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902104,"byte_end":13902153,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902154,"byte_end":13902157,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902158,"byte_end":13902187,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902188,"byte_end":13902217,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902218,"byte_end":13902247,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902248,"byte_end":13902251,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902252,"byte_end":13902289,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902290,"byte_end":13902332,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902333,"byte_end":13902336,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902337,"byte_end":13902406,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902407,"byte_end":13902410,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902411,"byte_end":13902460,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902461,"byte_end":13902510,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902511,"byte_end":13902516,"line_start":109,"line_end":109,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":7443},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903713,"byte_end":13903719,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7445}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902920,"byte_end":13902966,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902967,"byte_end":13902970,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13902971,"byte_end":13903031,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903032,"byte_end":13903059,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903060,"byte_end":13903063,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903064,"byte_end":13903078,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903079,"byte_end":13903082,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903083,"byte_end":13903090,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903091,"byte_end":13903122,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903123,"byte_end":13903126,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903127,"byte_end":13903145,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903146,"byte_end":13903167,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903168,"byte_end":13903219,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903220,"byte_end":13903257,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903258,"byte_end":13903261,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903262,"byte_end":13903295,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903296,"byte_end":13903350,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903351,"byte_end":13903405,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903406,"byte_end":13903417,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903418,"byte_end":13903421,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903422,"byte_end":13903455,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903456,"byte_end":13903510,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903511,"byte_end":13903565,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903566,"byte_end":13903577,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903578,"byte_end":13903581,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903582,"byte_end":13903611,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903612,"byte_end":13903641,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903642,"byte_end":13903647,"line_start":152,"line_end":152,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903648,"byte_end":13903655,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903656,"byte_end":13903659,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903660,"byte_end":13903701,"line_start":155,"line_end":155,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7446},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904559,"byte_end":13904567,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7448},{"krate":0,"index":7449},{"krate":0,"index":7450}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903756,"byte_end":13903804,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903805,"byte_end":13903808,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903809,"byte_end":13903875,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903876,"byte_end":13903905,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903906,"byte_end":13903909,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903910,"byte_end":13903924,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903925,"byte_end":13903928,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903929,"byte_end":13903936,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903937,"byte_end":13903968,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903969,"byte_end":13903972,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903973,"byte_end":13903991,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13903992,"byte_end":13904013,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904014,"byte_end":13904065,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904066,"byte_end":13904103,"line_start":173,"line_end":173,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904104,"byte_end":13904107,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904108,"byte_end":13904141,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904142,"byte_end":13904196,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904197,"byte_end":13904251,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904252,"byte_end":13904263,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904264,"byte_end":13904267,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904268,"byte_end":13904301,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904302,"byte_end":13904356,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904357,"byte_end":13904411,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904412,"byte_end":13904423,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904424,"byte_end":13904427,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904428,"byte_end":13904457,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904458,"byte_end":13904487,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904488,"byte_end":13904493,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904494,"byte_end":13904501,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904502,"byte_end":13904505,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904506,"byte_end":13904547,"line_start":190,"line_end":190,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":9207},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905110,"byte_end":13905119,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904813,"byte_end":13904866,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904867,"byte_end":13904870,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904871,"byte_end":13904943,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13904944,"byte_end":13905021,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905022,"byte_end":13905081,"line_start":206,"line_end":206,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":9210},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905123,"byte_end":13905128,"line_start":208,"line_end":208,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::broadcast::SendError::0","value":"T","parent":{"krate":0,"index":9207},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9215},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905458,"byte_end":13905464,"line_start":218,"line_end":218,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":9214},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905361,"byte_end":13905436,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905441,"byte_end":13905453,"line_start":217,"line_end":217,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9217},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905670,"byte_end":13905676,"line_start":224,"line_end":224,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":9214},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905471,"byte_end":13905543,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905548,"byte_end":13905608,"line_start":221,"line_end":221,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905613,"byte_end":13905616,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905621,"byte_end":13905665,"line_start":223,"line_end":223,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":9214},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905345,"byte_end":13905354,"line_start":215,"line_end":215,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"pub enum RecvError { Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":9215},{"krate":0,"index":9217}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905132,"byte_end":13905199,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905200,"byte_end":13905203,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905204,"byte_end":13905256,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905257,"byte_end":13905307,"line_start":213,"line_end":213,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9227},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13906063,"byte_end":13906068,"line_start":235,"line_end":235,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":9226},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905930,"byte_end":13905988,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905993,"byte_end":13906058,"line_start":234,"line_end":234,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9229},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13906172,"byte_end":13906178,"line_start":239,"line_end":239,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":9226},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13906075,"byte_end":13906150,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13906155,"byte_end":13906167,"line_start":238,"line_end":238,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9231},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13906427,"byte_end":13906433,"line_start":246,"line_end":246,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":9226},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13906185,"byte_end":13906259,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13906264,"byte_end":13906332,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13906337,"byte_end":13906365,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13906370,"byte_end":13906373,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13906378,"byte_end":13906422,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":9226},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905911,"byte_end":13905923,"line_start":232,"line_end":232,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":9227},{"krate":0,"index":9229},{"krate":0,"index":9231}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905686,"byte_end":13905757,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905758,"byte_end":13905761,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905762,"byte_end":13905822,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13905823,"byte_end":13905873,"line_start":230,"line_end":230,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":7501},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910734,"byte_end":13910741,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909122,"byte_end":13909198,"line_start":358,"line_end":358,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909199,"byte_end":13909248,"line_start":359,"line_end":359,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909249,"byte_end":13909252,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909253,"byte_end":13909322,"line_start":361,"line_end":361,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909323,"byte_end":13909373,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909374,"byte_end":13909377,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909378,"byte_end":13909452,"line_start":364,"line_end":364,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909453,"byte_end":13909528,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909529,"byte_end":13909597,"line_start":366,"line_end":366,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909598,"byte_end":13909601,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909602,"byte_end":13909678,"line_start":368,"line_end":368,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909679,"byte_end":13909760,"line_start":369,"line_end":369,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909761,"byte_end":13909800,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909801,"byte_end":13909804,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909805,"byte_end":13909851,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909852,"byte_end":13909920,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909921,"byte_end":13909971,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909972,"byte_end":13910024,"line_start":375,"line_end":375,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910025,"byte_end":13910077,"line_start":376,"line_end":376,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910078,"byte_end":13910130,"line_start":377,"line_end":377,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910131,"byte_end":13910134,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910135,"byte_end":13910149,"line_start":379,"line_end":379,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910150,"byte_end":13910153,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910154,"byte_end":13910161,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910162,"byte_end":13910193,"line_start":382,"line_end":382,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910194,"byte_end":13910197,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910198,"byte_end":13910216,"line_start":384,"line_end":384,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910217,"byte_end":13910238,"line_start":385,"line_end":385,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910239,"byte_end":13910290,"line_start":386,"line_end":386,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910291,"byte_end":13910328,"line_start":387,"line_end":387,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910329,"byte_end":13910332,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910333,"byte_end":13910366,"line_start":389,"line_end":389,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910367,"byte_end":13910421,"line_start":390,"line_end":390,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910422,"byte_end":13910476,"line_start":391,"line_end":391,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910477,"byte_end":13910488,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910489,"byte_end":13910492,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910493,"byte_end":13910526,"line_start":394,"line_end":394,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910527,"byte_end":13910581,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910582,"byte_end":13910636,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910637,"byte_end":13910648,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910649,"byte_end":13910652,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910653,"byte_end":13910682,"line_start":399,"line_end":399,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910683,"byte_end":13910712,"line_start":400,"line_end":400,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910713,"byte_end":13910718,"line_start":401,"line_end":401,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13910719,"byte_end":13910726,"line_start":402,"line_end":402,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7513},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913808,"byte_end":13913812,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13911958,"byte_end":13912032,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912037,"byte_end":13912073,"line_start":452,"line_end":452,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912078,"byte_end":13912081,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912086,"byte_end":13912161,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912166,"byte_end":13912232,"line_start":455,"line_end":455,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912237,"byte_end":13912288,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912293,"byte_end":13912296,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912301,"byte_end":13912313,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912318,"byte_end":13912321,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912326,"byte_end":13912400,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912405,"byte_end":13912481,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912486,"byte_end":13912539,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912544,"byte_end":13912547,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912552,"byte_end":13912562,"line_start":464,"line_end":464,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912567,"byte_end":13912570,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912575,"byte_end":13912647,"line_start":466,"line_end":466,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912652,"byte_end":13912727,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912732,"byte_end":13912793,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912798,"byte_end":13912801,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912806,"byte_end":13912879,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912884,"byte_end":13912949,"line_start":471,"line_end":471,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912954,"byte_end":13912972,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912977,"byte_end":13912980,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13912985,"byte_end":13913035,"line_start":474,"line_end":474,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913040,"byte_end":13913100,"line_start":475,"line_end":475,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913105,"byte_end":13913108,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913113,"byte_end":13913127,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913132,"byte_end":13913135,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913140,"byte_end":13913147,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913152,"byte_end":13913183,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913188,"byte_end":13913191,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913196,"byte_end":13913214,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913219,"byte_end":13913240,"line_start":483,"line_end":483,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913245,"byte_end":13913296,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913301,"byte_end":13913338,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913343,"byte_end":13913346,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913351,"byte_end":13913384,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913389,"byte_end":13913443,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913448,"byte_end":13913502,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913507,"byte_end":13913518,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913523,"byte_end":13913526,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913531,"byte_end":13913564,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913569,"byte_end":13913623,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913628,"byte_end":13913682,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913687,"byte_end":13913698,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913703,"byte_end":13913706,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913711,"byte_end":13913740,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913745,"byte_end":13913774,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913779,"byte_end":13913784,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913789,"byte_end":13913796,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7515},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914572,"byte_end":13914581,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13913977,"byte_end":13914054,"line_start":506,"line_end":506,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914059,"byte_end":13914088,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914093,"byte_end":13914096,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914101,"byte_end":13914115,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914120,"byte_end":13914123,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914128,"byte_end":13914135,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914140,"byte_end":13914171,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914176,"byte_end":13914179,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914184,"byte_end":13914202,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914207,"byte_end":13914228,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914233,"byte_end":13914280,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914285,"byte_end":13914288,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914293,"byte_end":13914320,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914325,"byte_end":13914354,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914359,"byte_end":13914362,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914367,"byte_end":13914403,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914408,"byte_end":13914411,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914416,"byte_end":13914445,"line_start":523,"line_end":523,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914450,"byte_end":13914453,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914458,"byte_end":13914503,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914508,"byte_end":13914538,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914543,"byte_end":13914548,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13914553,"byte_end":13914560,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7516},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13916168,"byte_end":13916182,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915016,"byte_end":13915058,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915063,"byte_end":13915066,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915071,"byte_end":13915147,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915152,"byte_end":13915225,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915230,"byte_end":13915250,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915255,"byte_end":13915258,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915263,"byte_end":13915273,"line_start":556,"line_end":556,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915278,"byte_end":13915281,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915286,"byte_end":13915356,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915361,"byte_end":13915429,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915434,"byte_end":13915447,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915452,"byte_end":13915455,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915460,"byte_end":13915512,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915517,"byte_end":13915567,"line_start":563,"line_end":563,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915572,"byte_end":13915618,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915623,"byte_end":13915683,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915688,"byte_end":13915736,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915741,"byte_end":13915744,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915749,"byte_end":13915763,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915768,"byte_end":13915771,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915776,"byte_end":13915783,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915788,"byte_end":13915819,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915824,"byte_end":13915827,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915832,"byte_end":13915850,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915855,"byte_end":13915876,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915881,"byte_end":13915929,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915934,"byte_end":13915937,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915942,"byte_end":13915985,"line_start":577,"line_end":577,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915990,"byte_end":13915993,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13915998,"byte_end":13916036,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13916041,"byte_end":13916044,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13916049,"byte_end":13916092,"line_start":581,"line_end":581,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13916097,"byte_end":13916100,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13916105,"byte_end":13916134,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13916139,"byte_end":13916144,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13916149,"byte_end":13916156,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7534},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924896,"byte_end":13924904,"line_start":831,"line_end":831,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923237,"byte_end":13923310,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923315,"byte_end":13923318,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923323,"byte_end":13923395,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923400,"byte_end":13923424,"line_start":794,"line_end":794,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923429,"byte_end":13923432,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923437,"byte_end":13923517,"line_start":796,"line_end":796,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923522,"byte_end":13923596,"line_start":797,"line_end":797,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923601,"byte_end":13923604,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923609,"byte_end":13923682,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923687,"byte_end":13923761,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923766,"byte_end":13923769,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923774,"byte_end":13923850,"line_start":802,"line_end":802,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923855,"byte_end":13923931,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923936,"byte_end":13924007,"line_start":804,"line_end":804,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924012,"byte_end":13924085,"line_start":805,"line_end":805,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924090,"byte_end":13924163,"line_start":806,"line_end":806,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924168,"byte_end":13924239,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924244,"byte_end":13924296,"line_start":808,"line_end":808,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924301,"byte_end":13924304,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924309,"byte_end":13924361,"line_start":810,"line_end":810,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924366,"byte_end":13924426,"line_start":811,"line_end":811,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924431,"byte_end":13924481,"line_start":812,"line_end":812,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924486,"byte_end":13924489,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924494,"byte_end":13924508,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924513,"byte_end":13924516,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924521,"byte_end":13924528,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924533,"byte_end":13924564,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924569,"byte_end":13924572,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924577,"byte_end":13924595,"line_start":819,"line_end":819,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924600,"byte_end":13924621,"line_start":820,"line_end":820,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924626,"byte_end":13924676,"line_start":821,"line_end":821,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924681,"byte_end":13924684,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924689,"byte_end":13924729,"line_start":823,"line_end":823,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924734,"byte_end":13924737,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924742,"byte_end":13924771,"line_start":825,"line_end":825,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924776,"byte_end":13924779,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924784,"byte_end":13924827,"line_start":827,"line_end":827,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924832,"byte_end":13924862,"line_start":828,"line_end":828,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924867,"byte_end":13924872,"line_start":829,"line_end":829,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13924877,"byte_end":13924884,"line_start":830,"line_end":830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7535},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13925146,"byte_end":13925155,"line_start":838,"line_end":838,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.21\", note = \"use async fn recv()\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13925073,"byte_end":13925134,"line_start":837,"line_end":837,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7553},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13929186,"byte_end":13929190,"line_start":952,"line_end":952,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13926970,"byte_end":13927016,"line_start":888,"line_end":888,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927021,"byte_end":13927024,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927029,"byte_end":13927097,"line_start":890,"line_end":890,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927102,"byte_end":13927134,"line_start":891,"line_end":891,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927139,"byte_end":13927142,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927147,"byte_end":13927217,"line_start":893,"line_end":893,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927222,"byte_end":13927296,"line_start":894,"line_end":894,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927301,"byte_end":13927304,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927309,"byte_end":13927385,"line_start":896,"line_end":896,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927390,"byte_end":13927466,"line_start":897,"line_end":897,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927471,"byte_end":13927539,"line_start":898,"line_end":898,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927544,"byte_end":13927617,"line_start":899,"line_end":899,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927622,"byte_end":13927691,"line_start":900,"line_end":900,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927696,"byte_end":13927741,"line_start":901,"line_end":901,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927746,"byte_end":13927749,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927754,"byte_end":13927804,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927809,"byte_end":13927861,"line_start":904,"line_end":904,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927866,"byte_end":13927869,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927874,"byte_end":13927888,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927893,"byte_end":13927896,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927901,"byte_end":13927908,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927913,"byte_end":13927944,"line_start":909,"line_end":909,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927949,"byte_end":13927952,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927957,"byte_end":13927975,"line_start":911,"line_end":911,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13927980,"byte_end":13928001,"line_start":912,"line_end":912,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928006,"byte_end":13928057,"line_start":913,"line_end":913,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928062,"byte_end":13928099,"line_start":914,"line_end":914,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928104,"byte_end":13928107,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928112,"byte_end":13928145,"line_start":916,"line_end":916,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928150,"byte_end":13928204,"line_start":917,"line_end":917,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928209,"byte_end":13928263,"line_start":918,"line_end":918,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928268,"byte_end":13928279,"line_start":919,"line_end":919,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928284,"byte_end":13928287,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928292,"byte_end":13928325,"line_start":921,"line_end":921,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928330,"byte_end":13928384,"line_start":922,"line_end":922,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928389,"byte_end":13928443,"line_start":923,"line_end":923,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928448,"byte_end":13928459,"line_start":924,"line_end":924,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928464,"byte_end":13928467,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928472,"byte_end":13928501,"line_start":926,"line_end":926,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928506,"byte_end":13928535,"line_start":927,"line_end":927,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928540,"byte_end":13928545,"line_start":928,"line_end":928,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928550,"byte_end":13928557,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928562,"byte_end":13928565,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928570,"byte_end":13928586,"line_start":931,"line_end":931,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928591,"byte_end":13928594,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928599,"byte_end":13928606,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928611,"byte_end":13928642,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928647,"byte_end":13928650,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928655,"byte_end":13928673,"line_start":936,"line_end":936,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928678,"byte_end":13928699,"line_start":937,"line_end":937,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928704,"byte_end":13928753,"line_start":938,"line_end":938,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928758,"byte_end":13928761,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928766,"byte_end":13928795,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928800,"byte_end":13928829,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928834,"byte_end":13928863,"line_start":942,"line_end":942,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928868,"byte_end":13928871,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928876,"byte_end":13928913,"line_start":944,"line_end":944,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928918,"byte_end":13928960,"line_start":945,"line_end":945,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928965,"byte_end":13928968,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13928973,"byte_end":13929042,"line_start":947,"line_end":947,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13929047,"byte_end":13929050,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13929055,"byte_end":13929104,"line_start":949,"line_end":949,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13929109,"byte_end":13929158,"line_start":950,"line_end":950,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13929163,"byte_end":13929168,"line_start":951,"line_end":951,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":9245},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13933782,"byte_end":13933793,"line_start":1110,"line_end":1110,"column_start":16,"column_end":27},"name":"into_stream","qualname":"<Receiver<T>>::into_stream","value":"pub fn into_stream(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Convert the receiver into a `Stream`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":7612},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":7613},{"krate":0,"index":7712},{"krate":0,"index":7796},{"krate":0,"index":7797},{"krate":0,"index":7800},{"krate":0,"index":7803},{"krate":0,"index":7806},{"krate":0,"index":8016},{"krate":0,"index":8084},{"krate":0,"index":8147},{"krate":0,"index":8148},{"krate":0,"index":8151},{"krate":0,"index":8154},{"krate":0,"index":8157},{"krate":0,"index":8188}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13937447,"byte_end":13937516,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13937517,"byte_end":13937540,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13937541,"byte_end":13937544,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13937545,"byte_end":13937620,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13937621,"byte_end":13937699,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ out of the channel. If there is no message to read, the current task will be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13937700,"byte_end":13937780,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ notified when a new value is sent. If the channel is at capacity, the send","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13937781,"byte_end":13937859,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ is rejected and the task will be notified when additional capacity is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13937860,"byte_end":13937933,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ available. In other words, the channel provides backpressure.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13937934,"byte_end":13937999,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938000,"byte_end":13938003,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938004,"byte_end":13938084,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938085,"byte_end":13938163,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938164,"byte_end":13938240,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938241,"byte_end":13938320,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method never does any kind of sleeping.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938321,"byte_end":13938400,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938401,"byte_end":13938472,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938473,"byte_end":13938495,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938496,"byte_end":13938499,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938500,"byte_end":13938519,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938520,"byte_end":13938523,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938524,"byte_end":13938590,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938591,"byte_end":13938671,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938672,"byte_end":13938749,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938750,"byte_end":13938753,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938754,"byte_end":13938824,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938825,"byte_end":13938904,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938905,"byte_end":13938928,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938929,"byte_end":13938932,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938933,"byte_end":13938953,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938954,"byte_end":13938957,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13938958,"byte_end":13939038,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939039,"byte_end":13939119,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939120,"byte_end":13939198,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939199,"byte_end":13939271,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939272,"byte_end":13939346,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939347,"byte_end":13939359,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939360,"byte_end":13939363,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939364,"byte_end":13939411,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939412,"byte_end":13939415,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939416,"byte_end":13939497,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939498,"byte_end":13939533,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939534,"byte_end":13939537,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939538,"byte_end":13939618,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. To call the async","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939619,"byte_end":13939699,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ [`send`][bounded-send] or [`recv`][bounded-recv] methods in sync code, you","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939700,"byte_end":13939778,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ will need to use [`Handle::block_on`], which allow you to execute an async","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939779,"byte_end":13939857,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ method in synchronous code. This is necessary because a bounded channel may","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939858,"byte_end":13939937,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ need to wait for additional capacity to become available.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13939938,"byte_end":13939999,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940000,"byte_end":13940003,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940004,"byte_end":13940084,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940085,"byte_end":13940163,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940164,"byte_end":13940230,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940231,"byte_end":13940313,"line_start":55,"line_end":55,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940314,"byte_end":13940378,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940379,"byte_end":13940382,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940383,"byte_end":13940424,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940425,"byte_end":13940470,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940471,"byte_end":13940524,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940525,"byte_end":13940580,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940581,"byte_end":13940640,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940641,"byte_end":13940701,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940702,"byte_end":13940747,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13940748,"byte_end":13940838,"line_start":65,"line_end":65,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":7742},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13954703,"byte_end":13954709,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7744}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13954578,"byte_end":13954623,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13954624,"byte_end":13954627,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13954628,"byte_end":13954691,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7751},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955218,"byte_end":13955226,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7753}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955090,"byte_end":13955138,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955139,"byte_end":13955142,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955143,"byte_end":13955206,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":7757},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956614,"byte_end":13956621,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955507,"byte_end":13955587,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955588,"byte_end":13955629,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955630,"byte_end":13955633,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955634,"byte_end":13955711,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955712,"byte_end":13955737,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955738,"byte_end":13955741,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955742,"byte_end":13955821,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955822,"byte_end":13955870,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955871,"byte_end":13955874,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955875,"byte_end":13955954,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955955,"byte_end":13956030,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956031,"byte_end":13956097,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956098,"byte_end":13956101,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956102,"byte_end":13956116,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956117,"byte_end":13956120,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956121,"byte_end":13956132,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956133,"byte_end":13956159,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956160,"byte_end":13956163,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956164,"byte_end":13956182,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956183,"byte_end":13956204,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956205,"byte_end":13956255,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956256,"byte_end":13956259,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956260,"byte_end":13956293,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956294,"byte_end":13956322,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956323,"byte_end":13956373,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956374,"byte_end":13956423,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956424,"byte_end":13956451,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956452,"byte_end":13956469,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956470,"byte_end":13956483,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956484,"byte_end":13956495,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956496,"byte_end":13956499,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956500,"byte_end":13956545,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956546,"byte_end":13956582,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956583,"byte_end":13956592,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956593,"byte_end":13956598,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13956599,"byte_end":13956606,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7763},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958303,"byte_end":13958307,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957221,"byte_end":13957267,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957272,"byte_end":13957275,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957280,"byte_end":13957352,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957357,"byte_end":13957411,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957416,"byte_end":13957419,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957424,"byte_end":13957438,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957443,"byte_end":13957446,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957451,"byte_end":13957458,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957463,"byte_end":13957489,"line_start":116,"line_end":116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957494,"byte_end":13957497,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957502,"byte_end":13957520,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957525,"byte_end":13957546,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957551,"byte_end":13957601,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957606,"byte_end":13957609,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957614,"byte_end":13957647,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957652,"byte_end":13957696,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957701,"byte_end":13957712,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957717,"byte_end":13957720,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957725,"byte_end":13957776,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957781,"byte_end":13957823,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957828,"byte_end":13957833,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957838,"byte_end":13957845,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957850,"byte_end":13957853,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957858,"byte_end":13957882,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957887,"byte_end":13957890,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957895,"byte_end":13957902,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957907,"byte_end":13957933,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957938,"byte_end":13957941,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957946,"byte_end":13957964,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957969,"byte_end":13957990,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957995,"byte_end":13958045,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958050,"byte_end":13958053,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958058,"byte_end":13958098,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958103,"byte_end":13958143,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958148,"byte_end":13958151,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958156,"byte_end":13958207,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958212,"byte_end":13958263,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958268,"byte_end":13958273,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958278,"byte_end":13958285,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7770},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958473,"byte_end":13958482,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7771},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959138,"byte_end":13959146,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958575,"byte_end":13958648,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958653,"byte_end":13958656,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958661,"byte_end":13958733,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958738,"byte_end":13958809,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958814,"byte_end":13958867,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958872,"byte_end":13958875,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958880,"byte_end":13958952,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958957,"byte_end":13958981,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958986,"byte_end":13958989,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13958994,"byte_end":13959064,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959069,"byte_end":13959126,"line_start":168,"line_end":168,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":7772},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959464,"byte_end":13959469,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959227,"byte_end":13959291,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959296,"byte_end":13959299,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959304,"byte_end":13959379,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959384,"byte_end":13959452,"line_start":176,"line_end":176,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7778},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961559,"byte_end":13961563,"line_start":244,"line_end":244,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959915,"byte_end":13959966,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959971,"byte_end":13959974,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959979,"byte_end":13960055,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960060,"byte_end":13960136,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960141,"byte_end":13960215,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960220,"byte_end":13960295,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960300,"byte_end":13960369,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960374,"byte_end":13960446,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960451,"byte_end":13960482,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960487,"byte_end":13960490,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960495,"byte_end":13960507,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960512,"byte_end":13960515,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960520,"byte_end":13960593,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960598,"byte_end":13960672,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960677,"byte_end":13960737,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960742,"byte_end":13960745,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960750,"byte_end":13960780,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960785,"byte_end":13960811,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960816,"byte_end":13960819,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960824,"byte_end":13960838,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960843,"byte_end":13960846,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960851,"byte_end":13960921,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960926,"byte_end":13960965,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960970,"byte_end":13960973,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960978,"byte_end":13960989,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13960994,"byte_end":13961020,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961025,"byte_end":13961028,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961033,"byte_end":13961051,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961056,"byte_end":13961077,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961082,"byte_end":13961130,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961135,"byte_end":13961138,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961143,"byte_end":13961176,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961181,"byte_end":13961209,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961214,"byte_end":13961264,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961269,"byte_end":13961318,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961323,"byte_end":13961350,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961355,"byte_end":13961372,"line_start":235,"line_end":235,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961377,"byte_end":13961390,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961395,"byte_end":13961406,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961411,"byte_end":13961414,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961419,"byte_end":13961464,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961469,"byte_end":13961505,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961510,"byte_end":13961519,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961524,"byte_end":13961529,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961534,"byte_end":13961541,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7785},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964296,"byte_end":13964304,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13961984,"byte_end":13962043,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962048,"byte_end":13962051,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962056,"byte_end":13962135,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962140,"byte_end":13962215,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962220,"byte_end":13962298,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962303,"byte_end":13962345,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962350,"byte_end":13962353,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962358,"byte_end":13962430,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962435,"byte_end":13962486,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962491,"byte_end":13962494,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962499,"byte_end":13962511,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962516,"byte_end":13962519,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962524,"byte_end":13962595,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962600,"byte_end":13962676,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962681,"byte_end":13962703,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962708,"byte_end":13962711,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962716,"byte_end":13962789,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962794,"byte_end":13962868,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962873,"byte_end":13962933,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962938,"byte_end":13962941,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962946,"byte_end":13962972,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13962977,"byte_end":13963015,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963020,"byte_end":13963044,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963049,"byte_end":13963079,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963084,"byte_end":13963087,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963092,"byte_end":13963106,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963111,"byte_end":13963114,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963119,"byte_end":13963126,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963131,"byte_end":13963157,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963162,"byte_end":13963165,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963170,"byte_end":13963188,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963193,"byte_end":13963214,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963219,"byte_end":13963265,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963270,"byte_end":13963319,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963324,"byte_end":13963358,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963363,"byte_end":13963366,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963371,"byte_end":13963404,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963409,"byte_end":13963448,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963453,"byte_end":13963492,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963497,"byte_end":13963559,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963564,"byte_end":13963575,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963580,"byte_end":13963583,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963588,"byte_end":13963621,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963626,"byte_end":13963675,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963680,"byte_end":13963727,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963732,"byte_end":13963768,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963773,"byte_end":13963784,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963789,"byte_end":13963792,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963797,"byte_end":13963817,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963822,"byte_end":13963861,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963866,"byte_end":13963911,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963916,"byte_end":13963919,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963924,"byte_end":13963963,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13963968,"byte_end":13964013,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964018,"byte_end":13964021,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964026,"byte_end":13964075,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964080,"byte_end":13964111,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964116,"byte_end":13964178,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964183,"byte_end":13964248,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964253,"byte_end":13964262,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964267,"byte_end":13964272,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964277,"byte_end":13964284,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7786},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13966121,"byte_end":13966133,"line_start":372,"line_end":372,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ mut Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964425,"byte_end":13964505,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964510,"byte_end":13964513,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964518,"byte_end":13964595,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964600,"byte_end":13964678,"line_start":328,"line_end":328,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964683,"byte_end":13964731,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964736,"byte_end":13964739,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964744,"byte_end":13964770,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964775,"byte_end":13964778,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964783,"byte_end":13964795,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964800,"byte_end":13964803,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964808,"byte_end":13964881,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964886,"byte_end":13964943,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13964948,"byte_end":13965029,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965034,"byte_end":13965037,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965042,"byte_end":13965072,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965077,"byte_end":13965103,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965108,"byte_end":13965111,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965116,"byte_end":13965130,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965135,"byte_end":13965138,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965143,"byte_end":13965221,"line_start":344,"line_end":344,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965226,"byte_end":13965297,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965302,"byte_end":13965305,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965310,"byte_end":13965321,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965326,"byte_end":13965352,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965357,"byte_end":13965400,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965405,"byte_end":13965408,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965413,"byte_end":13965431,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965436,"byte_end":13965457,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965462,"byte_end":13965510,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965515,"byte_end":13965518,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965523,"byte_end":13965556,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965561,"byte_end":13965589,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965594,"byte_end":13965680,"line_start":357,"line_end":357,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965685,"byte_end":13965738,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965743,"byte_end":13965770,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965775,"byte_end":13965792,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965797,"byte_end":13965810,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965815,"byte_end":13965826,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965831,"byte_end":13965834,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965839,"byte_end":13965884,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965889,"byte_end":13965925,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/         delay_for(Duration::from_millis(200)).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965930,"byte_end":13965986,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13965991,"byte_end":13966000,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13966005,"byte_end":13966010,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13966015,"byte_end":13966022,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13966027,"byte_end":13966051,"line_start":370,"line_end":370,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":7793},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967917,"byte_end":13967927,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13966836,"byte_end":13966918,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13966923,"byte_end":13966926,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, then `Poll::Pending` is returned and the task is notified when a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13966931,"byte_end":13967023,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ slot becomes available.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967028,"byte_end":13967055,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967060,"byte_end":13967063,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a call to `try_send` will succeed unless","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967068,"byte_end":13967161,"line_start":401,"line_end":401,"column_start":5,"column_end":98}},{"value":"/ the channel has since been closed. To provide this guarantee, the channel reserves one slot","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967166,"byte_end":13967261,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ in the channel for the coming send. This reserved slot is not available to other `Sender`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967266,"byte_end":13967359,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ instances, so you need to be careful to not end up with deadlocks by blocking after calling","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967364,"byte_end":13967459,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ `poll_ready` but before sending an element.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967464,"byte_end":13967511,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967516,"byte_end":13967519,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If, after `poll_ready` succeeds, you decide you do not wish to send an item after all, you","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967524,"byte_end":13967618,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ can use [`disarm`](Sender::disarm) to release the reserved slot.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967623,"byte_end":13967691,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967696,"byte_end":13967699,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Until an item is sent or [`disarm`](Sender::disarm) is called, repeated calls to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967704,"byte_end":13967788,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ `poll_ready` will return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))` if channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967793,"byte_end":13967886,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ is closed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13967891,"byte_end":13967905,"line_start":412,"line_end":412,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":7795},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970483,"byte_end":13970489,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"disarm","qualname":"<Sender<T>>::disarm","value":"pub fn disarm(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Undo a successful call to `poll_ready`.","sig":null,"attributes":[{"value":"/ Undo a successful call to `poll_ready`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968072,"byte_end":13968115,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968120,"byte_end":13968123,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Once a call to `poll_ready` returns `Poll::Ready(Ok(()))`, it holds up one slot in the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968128,"byte_end":13968218,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ channel to make room for the coming send. `disarm` allows you to give up that slot if you","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968223,"byte_end":13968316,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ decide you do not wish to send an item after all. After calling `disarm`, you must call","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968321,"byte_end":13968412,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/ `poll_ready` until it returns `Poll::Ready(Ok(()))` before attempting to send again.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968417,"byte_end":13968505,"line_start":422,"line_end":422,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968510,"byte_end":13968513,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if no slot is reserved for this sender (usually because `poll_ready` was","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968518,"byte_end":13968610,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ not previously called, or did not succeed).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968615,"byte_end":13968662,"line_start":425,"line_end":425,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968667,"byte_end":13968670,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968675,"byte_end":13968691,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968696,"byte_end":13968699,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Since `poll_ready` takes up one of the finite number of slots in a bounded channel, callers","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968704,"byte_end":13968799,"line_start":429,"line_end":429,"column_start":5,"column_end":100}},{"value":"/ need to send an item shortly after `poll_ready` succeeds. If they do not, idle senders may","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968804,"byte_end":13968898,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ take up all the slots of the channel, and prevent active senders from getting any requests","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13968903,"byte_end":13968997,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ through. Consider this code that forwards from one channel to another:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969002,"byte_end":13969076,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969081,"byte_end":13969084,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969089,"byte_end":13969107,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969112,"byte_end":13969122,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969127,"byte_end":13969160,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/   if let Some(item) = ready!(rx.poll_recv(cx)) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969165,"byte_end":13969217,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969222,"byte_end":13969249,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969254,"byte_end":13969268,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969273,"byte_end":13969287,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969292,"byte_end":13969299,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969304,"byte_end":13969309,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969314,"byte_end":13969321,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969326,"byte_end":13969329,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If many such forwarders exist, and they all forward into a single (cloned) `Sender`, then","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969334,"byte_end":13969427,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ any number of forwarders may be waiting for `rx.poll_recv` at the same time. While they do,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969432,"byte_end":13969527,"line_start":446,"line_end":446,"column_start":5,"column_end":100}},{"value":"/ they are effectively each reducing the channel's capacity by 1. If enough of these","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969532,"byte_end":13969618,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ forwarders are idle, forwarders whose `rx` _do_ have elements will be unable to find a spot","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969623,"byte_end":13969718,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ for them through `poll_ready`, and the system will deadlock.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969723,"byte_end":13969787,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969792,"byte_end":13969795,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `disarm` solves this problem by allowing you to give up the reserved slot if you find that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969800,"byte_end":13969894,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ you have to block. We can then fix the code above by writing:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969899,"byte_end":13969964,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969969,"byte_end":13969972,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13969977,"byte_end":13969995,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970000,"byte_end":13970010,"line_start":455,"line_end":455,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970015,"byte_end":13970048,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/   let item = rx.poll_recv(cx);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970053,"byte_end":13970087,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/   if let Poll::Ready(Ok(_)) = item {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970092,"byte_end":13970132,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/     // we're going to send the item below, so don't disarm","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970137,"byte_end":13970199,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970204,"byte_end":13970218,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/     // give up our send slot, we won't need it for a while","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970223,"byte_end":13970285,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/     tx.disarm();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970290,"byte_end":13970310,"line_start":462,"line_end":462,"column_start":5,"column_end":25}},{"value":"/   }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970315,"byte_end":13970322,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/   if let Some(item) = ready!(item) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970327,"byte_end":13970367,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970372,"byte_end":13970399,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970404,"byte_end":13970418,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970423,"byte_end":13970437,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970442,"byte_end":13970449,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970454,"byte_end":13970459,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13970464,"byte_end":13970471,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":7884},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13972481,"byte_end":13972487,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":7883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8108},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996380,"byte_end":13996395,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":8110}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996222,"byte_end":13996276,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996277,"byte_end":13996280,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996281,"byte_end":13996313,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996314,"byte_end":13996368,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":8117},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996973,"byte_end":13996990,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":8119}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996812,"byte_end":13996869,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996870,"byte_end":13996873,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996874,"byte_end":13996906,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996907,"byte_end":13996961,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":8123},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997801,"byte_end":13997818,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997289,"byte_end":13997365,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997366,"byte_end":13997376,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997377,"byte_end":13997380,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997381,"byte_end":13997461,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997462,"byte_end":13997541,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997542,"byte_end":13997555,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997556,"byte_end":13997559,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997560,"byte_end":13997639,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997640,"byte_end":13997716,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997717,"byte_end":13997793,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":8129},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998266,"byte_end":13998275,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8130},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999438,"byte_end":13999442,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998368,"byte_end":13998414,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998419,"byte_end":13998422,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998427,"byte_end":13998499,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998504,"byte_end":13998558,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998563,"byte_end":13998566,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998571,"byte_end":13998585,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998590,"byte_end":13998593,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998598,"byte_end":13998605,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998610,"byte_end":13998636,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998641,"byte_end":13998644,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998649,"byte_end":13998667,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998672,"byte_end":13998693,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998698,"byte_end":13998751,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998756,"byte_end":13998759,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998764,"byte_end":13998797,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998802,"byte_end":13998840,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998845,"byte_end":13998856,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998861,"byte_end":13998864,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998869,"byte_end":13998920,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998925,"byte_end":13998967,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998972,"byte_end":13998977,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998982,"byte_end":13998989,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998994,"byte_end":13998997,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999002,"byte_end":13999026,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999031,"byte_end":13999034,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999039,"byte_end":13999046,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999051,"byte_end":13999077,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999082,"byte_end":13999085,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999090,"byte_end":13999108,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999113,"byte_end":13999134,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999139,"byte_end":13999192,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999197,"byte_end":13999200,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999205,"byte_end":13999239,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999244,"byte_end":13999278,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999283,"byte_end":13999286,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999291,"byte_end":13999342,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999347,"byte_end":13999398,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999403,"byte_end":13999408,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999413,"byte_end":13999420,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8137},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000127,"byte_end":14000135,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999564,"byte_end":13999637,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999642,"byte_end":13999645,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999650,"byte_end":13999722,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999727,"byte_end":13999798,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999803,"byte_end":13999856,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999861,"byte_end":13999864,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999869,"byte_end":13999941,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999946,"byte_end":13999970,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999975,"byte_end":13999978,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13999983,"byte_end":14000053,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000058,"byte_end":14000115,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":8138},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000453,"byte_end":14000458,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000216,"byte_end":14000280,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000285,"byte_end":14000288,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000293,"byte_end":14000368,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000373,"byte_end":14000441,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":8146},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14001581,"byte_end":14001585,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000893,"byte_end":14000967,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000972,"byte_end":14000975,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000980,"byte_end":14001065,"line_start":166,"line_end":166,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14001070,"byte_end":14001151,"line_start":167,"line_end":167,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14001156,"byte_end":14001224,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14001229,"byte_end":14001232,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14001237,"byte_end":14001310,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14001315,"byte_end":14001386,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14001391,"byte_end":14001468,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14001473,"byte_end":14001476,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14001481,"byte_end":14001520,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14001525,"byte_end":14001569,"line_start":175,"line_end":175,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":8157},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","parent":null,"children":[{"krate":0,"index":8158},{"krate":0,"index":8161},{"krate":0,"index":9277},{"krate":0,"index":9281},{"krate":0,"index":8164},{"krate":0,"index":8167},{"krate":0,"index":9284},{"krate":0,"index":9292},{"krate":0,"index":8169},{"krate":0,"index":8171},{"krate":0,"index":8174},{"krate":0,"index":9295},{"krate":0,"index":9298},{"krate":0,"index":8177},{"krate":0,"index":8179},{"krate":0,"index":9300},{"krate":0,"index":9305},{"krate":0,"index":9307},{"krate":0,"index":9308},{"krate":0,"index":8180},{"krate":0,"index":8182},{"krate":0,"index":9310},{"krate":0,"index":9313},{"krate":0,"index":8183},{"krate":0,"index":8185},{"krate":0,"index":8187},{"krate":0,"index":9320},{"krate":0,"index":9328},{"krate":0,"index":9315},{"krate":0,"index":9317}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14001703,"byte_end":14001726,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":9277},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14001830,"byte_end":14001839,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14001766,"byte_end":14001801,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":9280},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14001843,"byte_end":14001848,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":9277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9286},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002392,"byte_end":14002396,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":9284},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002260,"byte_end":14002328,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002333,"byte_end":14002387,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9289},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002497,"byte_end":14002503,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":9284},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002406,"byte_end":14002475,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002480,"byte_end":14002492,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":9284},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002238,"byte_end":14002250,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":9286},{"krate":0,"index":9289}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002092,"byte_end":14002163,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002164,"byte_end":14002211,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":9295},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003141,"byte_end":14003150,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003079,"byte_end":14003112,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9301},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003655,"byte_end":14003660,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":9300},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003527,"byte_end":14003594,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003599,"byte_end":14003650,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9303},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003780,"byte_end":14003786,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":9300},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003666,"byte_end":14003728,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003733,"byte_end":14003775,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":9300},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003508,"byte_end":14003520,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":9301},{"krate":0,"index":9303}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003361,"byte_end":14003431,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003432,"byte_end":14003470,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":9310},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14004277,"byte_end":14004288,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).\n","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14004176,"byte_end":14004248,"line_start":99,"line_end":99,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9322},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14004894,"byte_end":14004901,"line_start":125,"line_end":125,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":9320},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9325},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14005014,"byte_end":14005020,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":9320},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9320},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14004732,"byte_end":14004748,"line_start":122,"line_end":122,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> { Timeout(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":9322},{"krate":0,"index":9325}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":23137,"byte_end":23161,"line_start":324,"line_end":324,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":8212},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009934,"byte_end":14009939,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":8214},{"krate":0,"index":8215}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14005681,"byte_end":14005719,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14005720,"byte_end":14005723,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14005724,"byte_end":14005802,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14005803,"byte_end":14005879,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14005880,"byte_end":14005904,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14005905,"byte_end":14005908,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14005909,"byte_end":14005950,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14005951,"byte_end":14005954,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14005955,"byte_end":14006035,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006036,"byte_end":14006115,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006116,"byte_end":14006179,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006180,"byte_end":14006183,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006184,"byte_end":14006263,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006264,"byte_end":14006344,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006345,"byte_end":14006423,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006424,"byte_end":14006503,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006504,"byte_end":14006582,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006583,"byte_end":14006663,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006664,"byte_end":14006677,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006678,"byte_end":14006681,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006682,"byte_end":14006761,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006762,"byte_end":14006838,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006839,"byte_end":14006916,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006917,"byte_end":14006950,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006951,"byte_end":14006954,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14006955,"byte_end":14007030,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007031,"byte_end":14007109,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007110,"byte_end":14007152,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007153,"byte_end":14007156,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007157,"byte_end":14007184,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007185,"byte_end":14007233,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007234,"byte_end":14007312,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007313,"byte_end":14007316,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007317,"byte_end":14007332,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007333,"byte_end":14007336,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007337,"byte_end":14007355,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007356,"byte_end":14007383,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007384,"byte_end":14007407,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007408,"byte_end":14007411,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007412,"byte_end":14007430,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007431,"byte_end":14007452,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007453,"byte_end":14007497,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007498,"byte_end":14007537,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007538,"byte_end":14007541,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007542,"byte_end":14007575,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007576,"byte_end":14007622,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007623,"byte_end":14007646,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007647,"byte_end":14007658,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007659,"byte_end":14007662,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007663,"byte_end":14007705,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007706,"byte_end":14007725,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007726,"byte_end":14007731,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007732,"byte_end":14007739,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007740,"byte_end":14007743,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007744,"byte_end":14007747,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007748,"byte_end":14007766,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007767,"byte_end":14007794,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007795,"byte_end":14007818,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007819,"byte_end":14007822,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007823,"byte_end":14007841,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007842,"byte_end":14007863,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007864,"byte_end":14007908,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007909,"byte_end":14007912,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007913,"byte_end":14007936,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007937,"byte_end":14007983,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14007984,"byte_end":14008021,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008022,"byte_end":14008054,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008055,"byte_end":14008112,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008113,"byte_end":14008144,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008145,"byte_end":14008186,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008187,"byte_end":14008204,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008205,"byte_end":14008220,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008221,"byte_end":14008230,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008231,"byte_end":14008234,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008235,"byte_end":14008249,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008250,"byte_end":14008292,"line_start":84,"line_end":84,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008293,"byte_end":14008315,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008316,"byte_end":14008329,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008330,"byte_end":14008339,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008340,"byte_end":14008374,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008375,"byte_end":14008380,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008381,"byte_end":14008388,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008389,"byte_end":14008465,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008466,"byte_end":14008539,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008540,"byte_end":14008555,"line_start":93,"line_end":93,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008556,"byte_end":14008631,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008632,"byte_end":14008708,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008709,"byte_end":14008761,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008762,"byte_end":14008765,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008766,"byte_end":14008844,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008845,"byte_end":14008925,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14008926,"byte_end":14009002,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009003,"byte_end":14009080,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009081,"byte_end":14009159,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009160,"byte_end":14009240,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009241,"byte_end":14009321,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009322,"byte_end":14009391,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009392,"byte_end":14009395,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009396,"byte_end":14009475,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009476,"byte_end":14009555,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009556,"byte_end":14009634,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009635,"byte_end":14009696,"line_start":110,"line_end":110,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009697,"byte_end":14009700,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009701,"byte_end":14009728,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009729,"byte_end":14009766,"line_start":113,"line_end":113,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009767,"byte_end":14009801,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009802,"byte_end":14009851,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009852,"byte_end":14009889,"line_start":116,"line_end":116,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14009890,"byte_end":14009922,"line_start":117,"line_end":117,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":8216},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010368,"byte_end":14010378,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":8219}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010007,"byte_end":14010038,"line_start":123,"line_end":123,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010039,"byte_end":14010042,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010043,"byte_end":14010122,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010123,"byte_end":14010198,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010199,"byte_end":14010232,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010233,"byte_end":14010236,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010237,"byte_end":14010315,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010316,"byte_end":14010356,"line_start":130,"line_end":130,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":8220},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011165,"byte_end":14011180,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":8222}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010423,"byte_end":14010461,"line_start":135,"line_end":135,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010462,"byte_end":14010465,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010466,"byte_end":14010547,"line_start":137,"line_end":137,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010548,"byte_end":14010628,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010629,"byte_end":14010703,"line_start":139,"line_end":139,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010704,"byte_end":14010765,"line_start":140,"line_end":140,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010766,"byte_end":14010769,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010770,"byte_end":14010849,"line_start":142,"line_end":142,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010850,"byte_end":14010928,"line_start":143,"line_end":143,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010929,"byte_end":14010997,"line_start":144,"line_end":144,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14010998,"byte_end":14011001,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011002,"byte_end":14011080,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011081,"byte_end":14011121,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011122,"byte_end":14011125,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011126,"byte_end":14011153,"line_start":149,"line_end":149,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":9331},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011888,"byte_end":14011900,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011680,"byte_end":14011737,"line_start":162,"line_end":162,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011738,"byte_end":14011741,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011742,"byte_end":14011814,"line_start":164,"line_end":164,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011815,"byte_end":14011818,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011819,"byte_end":14011859,"line_start":166,"line_end":166,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":8236},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013116,"byte_end":14013119,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14012913,"byte_end":14012971,"line_start":203,"line_end":203,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14012976,"byte_end":14012979,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14012984,"byte_end":14012998,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013003,"byte_end":14013006,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013011,"byte_end":14013018,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013023,"byte_end":14013050,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013055,"byte_end":14013058,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013063,"byte_end":14013092,"line_start":210,"line_end":210,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013097,"byte_end":14013104,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8237},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013744,"byte_end":14013748,"line_start":239,"line_end":239,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013284,"byte_end":14013330,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013335,"byte_end":14013381,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013386,"byte_end":14013457,"line_start":224,"line_end":224,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013462,"byte_end":14013465,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013470,"byte_end":14013484,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013489,"byte_end":14013492,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013497,"byte_end":14013504,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013509,"byte_end":14013536,"line_start":229,"line_end":229,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013541,"byte_end":14013544,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013549,"byte_end":14013567,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013572,"byte_end":14013593,"line_start":232,"line_end":232,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013598,"byte_end":14013632,"line_start":233,"line_end":233,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013637,"byte_end":14013640,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013645,"byte_end":14013684,"line_start":235,"line_end":235,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013689,"byte_end":14013704,"line_start":236,"line_end":236,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013709,"byte_end":14013714,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013719,"byte_end":14013726,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8240},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014775,"byte_end":14014785,"line_start":270,"line_end":270,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013854,"byte_end":14013928,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14013933,"byte_end":14014000,"line_start":245,"line_end":245,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014005,"byte_end":14014029,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014034,"byte_end":14014037,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014042,"byte_end":14014115,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014120,"byte_end":14014193,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014198,"byte_end":14014269,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014274,"byte_end":14014349,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014354,"byte_end":14014396,"line_start":252,"line_end":252,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014401,"byte_end":14014404,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014409,"byte_end":14014423,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014428,"byte_end":14014431,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014436,"byte_end":14014443,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014448,"byte_end":14014475,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014480,"byte_end":14014503,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014508,"byte_end":14014511,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014516,"byte_end":14014534,"line_start":260,"line_end":260,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014539,"byte_end":14014560,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014565,"byte_end":14014609,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014614,"byte_end":14014617,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014622,"byte_end":14014675,"line_start":264,"line_end":264,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014680,"byte_end":14014695,"line_start":265,"line_end":265,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014700,"byte_end":14014705,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014710,"byte_end":14014717,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014722,"byte_end":14014725,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14014730,"byte_end":14014757,"line_start":269,"line_end":269,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8247},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015662,"byte_end":14015670,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015194,"byte_end":14015263,"line_start":283,"line_end":283,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015268,"byte_end":14015310,"line_start":284,"line_end":284,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015315,"byte_end":14015318,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015323,"byte_end":14015357,"line_start":286,"line_end":286,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015362,"byte_end":14015376,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015381,"byte_end":14015384,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015389,"byte_end":14015396,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015401,"byte_end":14015428,"line_start":290,"line_end":290,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015433,"byte_end":14015496,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015501,"byte_end":14015504,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015509,"byte_end":14015539,"line_start":293,"line_end":293,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015544,"byte_end":14015547,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015552,"byte_end":14015582,"line_start":295,"line_end":295,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015587,"byte_end":14015609,"line_start":296,"line_end":296,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015614,"byte_end":14015626,"line_start":297,"line_end":297,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015631,"byte_end":14015638,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015643,"byte_end":14015650,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8248},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016791,"byte_end":14016805,"line_start":331,"line_end":331,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015879,"byte_end":14015953,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14015958,"byte_end":14015995,"line_start":308,"line_end":308,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016000,"byte_end":14016003,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016008,"byte_end":14016076,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016081,"byte_end":14016154,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016159,"byte_end":14016235,"line_start":312,"line_end":312,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016240,"byte_end":14016314,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016319,"byte_end":14016367,"line_start":314,"line_end":314,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016372,"byte_end":14016375,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016380,"byte_end":14016414,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016419,"byte_end":14016446,"line_start":317,"line_end":317,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016451,"byte_end":14016465,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016470,"byte_end":14016473,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016478,"byte_end":14016485,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016490,"byte_end":14016517,"line_start":321,"line_end":321,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016522,"byte_end":14016545,"line_start":322,"line_end":322,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016550,"byte_end":14016613,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016618,"byte_end":14016621,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016626,"byte_end":14016666,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016671,"byte_end":14016674,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016679,"byte_end":14016723,"line_start":327,"line_end":327,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016728,"byte_end":14016750,"line_start":328,"line_end":328,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016755,"byte_end":14016767,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14016772,"byte_end":14016779,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8249},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017363,"byte_end":14017373,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017030,"byte_end":14017084,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017089,"byte_end":14017103,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017108,"byte_end":14017111,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017116,"byte_end":14017123,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017128,"byte_end":14017155,"line_start":342,"line_end":342,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017160,"byte_end":14017163,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017168,"byte_end":14017186,"line_start":344,"line_end":344,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017191,"byte_end":14017212,"line_start":345,"line_end":345,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017217,"byte_end":14017251,"line_start":346,"line_end":346,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017256,"byte_end":14017259,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017264,"byte_end":14017299,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017304,"byte_end":14017329,"line_start":349,"line_end":349,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017334,"byte_end":14017339,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017344,"byte_end":14017351,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9336},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022778,"byte_end":14022784,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":9337},{"krate":0,"index":9338}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14019968,"byte_end":14020004,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020005,"byte_end":14020008,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020009,"byte_end":14020085,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020086,"byte_end":14020166,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020167,"byte_end":14020208,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020209,"byte_end":14020212,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020213,"byte_end":14020287,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify()`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020288,"byte_end":14020369,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020370,"byte_end":14020436,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020437,"byte_end":14020440,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020441,"byte_end":14020499,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020500,"byte_end":14020580,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020581,"byte_end":14020661,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify()`] sets the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020662,"byte_end":14020741,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020742,"byte_end":14020792,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020793,"byte_end":14020796,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **before** `notfied().await`, then the next call to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020797,"byte_end":14020876,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020877,"byte_end":14020952,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14020953,"byte_end":14021023,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021024,"byte_end":14021027,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021028,"byte_end":14021108,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021109,"byte_end":14021182,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021183,"byte_end":14021254,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021255,"byte_end":14021258,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021259,"byte_end":14021273,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021274,"byte_end":14021277,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021278,"byte_end":14021294,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021295,"byte_end":14021298,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021299,"byte_end":14021306,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021307,"byte_end":14021335,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021336,"byte_end":14021359,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021360,"byte_end":14021363,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021364,"byte_end":14021382,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021383,"byte_end":14021404,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021405,"byte_end":14021450,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021451,"byte_end":14021488,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021489,"byte_end":14021492,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021493,"byte_end":14021526,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021527,"byte_end":14021564,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021565,"byte_end":14021611,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021612,"byte_end":14021623,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021624,"byte_end":14021627,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021628,"byte_end":14021669,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021670,"byte_end":14021694,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021695,"byte_end":14021700,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021701,"byte_end":14021708,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021709,"byte_end":14021712,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021713,"byte_end":14021738,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021739,"byte_end":14021742,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021743,"byte_end":14021750,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021751,"byte_end":14021779,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021780,"byte_end":14021783,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021784,"byte_end":14021819,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021820,"byte_end":14021845,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021846,"byte_end":14021849,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021850,"byte_end":14021873,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021874,"byte_end":14021909,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021910,"byte_end":14021933,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021934,"byte_end":14021939,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021940,"byte_end":14021943,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021944,"byte_end":14021968,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14021969,"byte_end":14022007,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022008,"byte_end":14022047,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022048,"byte_end":14022082,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022083,"byte_end":14022086,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022087,"byte_end":14022142,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022143,"byte_end":14022176,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022177,"byte_end":14022186,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022187,"byte_end":14022190,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022191,"byte_end":14022230,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022231,"byte_end":14022249,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022250,"byte_end":14022281,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022282,"byte_end":14022360,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022361,"byte_end":14022394,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022395,"byte_end":14022412,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022413,"byte_end":14022416,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022417,"byte_end":14022467,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022468,"byte_end":14022513,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022514,"byte_end":14022527,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022528,"byte_end":14022537,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022538,"byte_end":14022543,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022544,"byte_end":14022551,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022552,"byte_end":14022555,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022556,"byte_end":14022585,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022586,"byte_end":14022627,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022628,"byte_end":14022672,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ [`notify()`]: Notify::notify()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022673,"byte_end":14022707,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14022708,"byte_end":14022749,"line_start":100,"line_end":100,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":8354},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024016,"byte_end":14024019,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023812,"byte_end":14023868,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023873,"byte_end":14023876,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023881,"byte_end":14023895,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023900,"byte_end":14023903,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023908,"byte_end":14023915,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023920,"byte_end":14023948,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023953,"byte_end":14023956,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023961,"byte_end":14023992,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023997,"byte_end":14024004,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8355},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025091,"byte_end":14025099,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"name":"notified","qualname":"<Notify>::notified","value":"pub async fn notified<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024161,"byte_end":14024189,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024194,"byte_end":14024197,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024202,"byte_end":14024278,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify()`], then `notified().await` will complete","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024283,"byte_end":14024357,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024362,"byte_end":14024437,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify()`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024442,"byte_end":14024511,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024516,"byte_end":14024519,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: Notify::notify","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024524,"byte_end":14024556,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024561,"byte_end":14024564,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024569,"byte_end":14024583,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024588,"byte_end":14024591,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024596,"byte_end":14024603,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024608,"byte_end":14024636,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024641,"byte_end":14024664,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024669,"byte_end":14024672,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024677,"byte_end":14024695,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024700,"byte_end":14024721,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024726,"byte_end":14024771,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024776,"byte_end":14024813,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024818,"byte_end":14024821,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024826,"byte_end":14024859,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024864,"byte_end":14024901,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024906,"byte_end":14024952,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024957,"byte_end":14024968,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024973,"byte_end":14024976,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14024981,"byte_end":14025022,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025027,"byte_end":14025051,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025056,"byte_end":14025061,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025066,"byte_end":14025073,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8358},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026595,"byte_end":14026601,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"notify","qualname":"<Notify>::notify","value":"pub fn notify(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025436,"byte_end":14025463,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025468,"byte_end":14025471,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025476,"byte_end":14025547,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025552,"byte_end":14025620,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025625,"byte_end":14025701,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify()`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025706,"byte_end":14025747,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025752,"byte_end":14025755,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025760,"byte_end":14025834,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ `notify` will result in a single permit being stored. The next call to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025839,"byte_end":14025913,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025918,"byte_end":14025990,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14025995,"byte_end":14026009,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026014,"byte_end":14026017,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026022,"byte_end":14026066,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026071,"byte_end":14026074,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026079,"byte_end":14026093,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026098,"byte_end":14026101,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026106,"byte_end":14026113,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026118,"byte_end":14026146,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026151,"byte_end":14026174,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026179,"byte_end":14026182,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026187,"byte_end":14026205,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026210,"byte_end":14026231,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026236,"byte_end":14026281,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026286,"byte_end":14026323,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026328,"byte_end":14026331,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026336,"byte_end":14026369,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026374,"byte_end":14026411,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026416,"byte_end":14026462,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026467,"byte_end":14026478,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026483,"byte_end":14026486,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026491,"byte_end":14026532,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026537,"byte_end":14026561,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026566,"byte_end":14026571,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14026576,"byte_end":14026583,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":8382},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":8383},{"krate":0,"index":8386},{"krate":0,"index":8389},{"krate":0,"index":8392},{"krate":0,"index":8395},{"krate":0,"index":8398},{"krate":0,"index":8401},{"krate":0,"index":8404},{"krate":0,"index":8405},{"krate":0,"index":8408},{"krate":0,"index":8409},{"krate":0,"index":8411},{"krate":0,"index":8412},{"krate":0,"index":8414},{"krate":0,"index":8415},{"krate":0,"index":8416},{"krate":0,"index":8418},{"krate":0,"index":8419},{"krate":0,"index":8421},{"krate":0,"index":8422},{"krate":0,"index":8425},{"krate":0,"index":8428},{"krate":0,"index":9365},{"krate":0,"index":9368},{"krate":0,"index":9371},{"krate":0,"index":9374},{"krate":0,"index":8431},{"krate":0,"index":8441},{"krate":0,"index":8442},{"krate":0,"index":9402},{"krate":0,"index":9405},{"krate":0,"index":9407},{"krate":0,"index":8448},{"krate":0,"index":8450},{"krate":0,"index":8465},{"krate":0,"index":8468},{"krate":0,"index":8472},{"krate":0,"index":8475},{"krate":0,"index":8479},{"krate":0,"index":8503},{"krate":0,"index":8505},{"krate":0,"index":8507},{"krate":0,"index":8511},{"krate":0,"index":8517},{"krate":0,"index":8518},{"krate":0,"index":8519},{"krate":0,"index":8520},{"krate":0,"index":8521},{"krate":0,"index":8535}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14038377,"byte_end":14038447,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":9365},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14038926,"byte_end":14038932,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":9367}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14038779,"byte_end":14038826,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14038827,"byte_end":14038830,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14038831,"byte_end":14038897,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":9371},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039124,"byte_end":14039132,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":9373}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14038975,"byte_end":14039024,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039025,"byte_end":14039028,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039029,"byte_end":14039095,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":8431},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039183,"byte_end":14039188,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":8432},{"krate":0,"index":9377},{"krate":0,"index":9380},{"krate":0,"index":9382},{"krate":0,"index":9383},{"krate":0,"index":9385},{"krate":0,"index":9386},{"krate":0,"index":9389},{"krate":0,"index":9394},{"krate":0,"index":9396},{"krate":0,"index":9397},{"krate":0,"index":9399},{"krate":0,"index":9400},{"krate":0,"index":8435},{"krate":0,"index":8437},{"krate":0,"index":8438},{"krate":0,"index":8440}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039195,"byte_end":14039218,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":9377},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039360,"byte_end":14039369,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039243,"byte_end":14039308,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9390},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039591,"byte_end":14039596,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039524,"byte_end":14039582,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9392},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039685,"byte_end":14039691,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039607,"byte_end":14039676,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":9389},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039501,"byte_end":14039513,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":9390},{"krate":0,"index":9392}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039391,"byte_end":14039451,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":8448},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041688,"byte_end":14041695,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14040873,"byte_end":14040952,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14040953,"byte_end":14040963,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14040964,"byte_end":14040967,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14040968,"byte_end":14041044,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041045,"byte_end":14041123,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041124,"byte_end":14041170,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041171,"byte_end":14041174,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041175,"byte_end":14041221,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041222,"byte_end":14041225,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041226,"byte_end":14041240,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041241,"byte_end":14041244,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041245,"byte_end":14041252,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041253,"byte_end":14041282,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041283,"byte_end":14041286,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041287,"byte_end":14041305,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041306,"byte_end":14041327,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041328,"byte_end":14041370,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041371,"byte_end":14041374,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041375,"byte_end":14041408,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041409,"byte_end":14041449,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041450,"byte_end":14041499,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041500,"byte_end":14041513,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041514,"byte_end":14041525,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041526,"byte_end":14041529,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041530,"byte_end":14041554,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041555,"byte_end":14041602,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041603,"byte_end":14041656,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041657,"byte_end":14041666,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041667,"byte_end":14041672,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14041673,"byte_end":14041680,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":8452},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043731,"byte_end":14043735,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042160,"byte_end":14042235,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042240,"byte_end":14042256,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042261,"byte_end":14042264,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042269,"byte_end":14042348,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042353,"byte_end":14042428,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042433,"byte_end":14042509,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042514,"byte_end":14042586,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042591,"byte_end":14042604,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042609,"byte_end":14042612,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042617,"byte_end":14042693,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042698,"byte_end":14042774,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042779,"byte_end":14042851,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042856,"byte_end":14042929,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042934,"byte_end":14043008,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043013,"byte_end":14043085,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043090,"byte_end":14043127,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043132,"byte_end":14043135,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043140,"byte_end":14043154,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043159,"byte_end":14043162,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043167,"byte_end":14043199,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043204,"byte_end":14043207,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043212,"byte_end":14043219,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043224,"byte_end":14043253,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043258,"byte_end":14043261,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043266,"byte_end":14043284,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043289,"byte_end":14043310,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043315,"byte_end":14043357,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043362,"byte_end":14043365,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043370,"byte_end":14043403,"line_start":172,"line_end":172,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043408,"byte_end":14043448,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043453,"byte_end":14043502,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043507,"byte_end":14043520,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043525,"byte_end":14043536,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043541,"byte_end":14043544,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043549,"byte_end":14043573,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043578,"byte_end":14043625,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043630,"byte_end":14043683,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043688,"byte_end":14043697,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043702,"byte_end":14043707,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14043712,"byte_end":14043719,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8455},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14044136,"byte_end":14044147,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8457},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047389,"byte_end":14047395,"line_start":316,"line_end":316,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045504,"byte_end":14045562,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045567,"byte_end":14045570,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045575,"byte_end":14045649,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045654,"byte_end":14045688,"line_start":252,"line_end":252,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045693,"byte_end":14045696,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045701,"byte_end":14045766,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045771,"byte_end":14045843,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045848,"byte_end":14045851,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045856,"byte_end":14045868,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045873,"byte_end":14045876,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045881,"byte_end":14045929,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045934,"byte_end":14045937,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045942,"byte_end":14045968,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14045973,"byte_end":14046003,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046008,"byte_end":14046011,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046016,"byte_end":14046030,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046035,"byte_end":14046038,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046043,"byte_end":14046058,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046063,"byte_end":14046066,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046071,"byte_end":14046078,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046083,"byte_end":14046112,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046117,"byte_end":14046120,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046125,"byte_end":14046143,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046148,"byte_end":14046169,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046174,"byte_end":14046226,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046231,"byte_end":14046234,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046239,"byte_end":14046272,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046277,"byte_end":14046298,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046303,"byte_end":14046314,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046319,"byte_end":14046322,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046327,"byte_end":14046353,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046358,"byte_end":14046399,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046404,"byte_end":14046409,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046414,"byte_end":14046421,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046426,"byte_end":14046429,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046434,"byte_end":14046456,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046461,"byte_end":14046464,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046469,"byte_end":14046476,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046481,"byte_end":14046510,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046515,"byte_end":14046553,"line_start":288,"line_end":288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046558,"byte_end":14046561,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046566,"byte_end":14046603,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046608,"byte_end":14046611,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046616,"byte_end":14046650,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046655,"byte_end":14046706,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046711,"byte_end":14046736,"line_start":294,"line_end":294,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046741,"byte_end":14046746,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046751,"byte_end":14046754,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046759,"byte_end":14046777,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046782,"byte_end":14046803,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046808,"byte_end":14046854,"line_start":299,"line_end":299,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046859,"byte_end":14046862,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046867,"byte_end":14046900,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046905,"byte_end":14046926,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046931,"byte_end":14046974,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14046979,"byte_end":14047054,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047059,"byte_end":14047076,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047081,"byte_end":14047126,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047131,"byte_end":14047174,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047179,"byte_end":14047196,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047201,"byte_end":14047214,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047219,"byte_end":14047230,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047235,"byte_end":14047238,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047243,"byte_end":14047279,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047284,"byte_end":14047349,"line_start":313,"line_end":313,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047354,"byte_end":14047359,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047364,"byte_end":14047371,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8464},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048265,"byte_end":14048274,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047506,"byte_end":14047580,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047585,"byte_end":14047588,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047593,"byte_end":14047667,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047672,"byte_end":14047706,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047711,"byte_end":14047714,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047719,"byte_end":14047794,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047799,"byte_end":14047802,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047807,"byte_end":14047833,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047838,"byte_end":14047868,"line_start":330,"line_end":330,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047873,"byte_end":14047876,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047881,"byte_end":14047895,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047900,"byte_end":14047903,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047908,"byte_end":14047915,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047920,"byte_end":14047949,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047954,"byte_end":14047957,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047962,"byte_end":14047980,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14047985,"byte_end":14048006,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048011,"byte_end":14048053,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048058,"byte_end":14048061,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048066,"byte_end":14048099,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048104,"byte_end":14048107,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048112,"byte_end":14048129,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048134,"byte_end":14048137,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048142,"byte_end":14048174,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048179,"byte_end":14048231,"line_start":346,"line_end":346,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048236,"byte_end":14048241,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048246,"byte_end":14048253,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8470},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050252,"byte_end":14050257,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048614,"byte_end":14048681,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048686,"byte_end":14048689,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048694,"byte_end":14048768,"line_start":368,"line_end":368,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048773,"byte_end":14048841,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048846,"byte_end":14048912,"line_start":370,"line_end":370,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048917,"byte_end":14048931,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048936,"byte_end":14048939,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048944,"byte_end":14049020,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049025,"byte_end":14049088,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049093,"byte_end":14049096,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049101,"byte_end":14049123,"line_start":376,"line_end":376,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049128,"byte_end":14049164,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049169,"byte_end":14049172,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049177,"byte_end":14049191,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049196,"byte_end":14049199,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049204,"byte_end":14049239,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049244,"byte_end":14049247,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049252,"byte_end":14049259,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049264,"byte_end":14049293,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049298,"byte_end":14049348,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049353,"byte_end":14049356,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049361,"byte_end":14049379,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049384,"byte_end":14049405,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049410,"byte_end":14049456,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049461,"byte_end":14049464,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049469,"byte_end":14049502,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049507,"byte_end":14049510,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049515,"byte_end":14049534,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049539,"byte_end":14049542,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049547,"byte_end":14049579,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049584,"byte_end":14049636,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049641,"byte_end":14049644,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049649,"byte_end":14049678,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049683,"byte_end":14049726,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049731,"byte_end":14049763,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049768,"byte_end":14049777,"line_start":401,"line_end":401,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049782,"byte_end":14049787,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049792,"byte_end":14049799,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049804,"byte_end":14049807,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049812,"byte_end":14049863,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049868,"byte_end":14049871,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049876,"byte_end":14049883,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049888,"byte_end":14049917,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049922,"byte_end":14049925,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049930,"byte_end":14049948,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049953,"byte_end":14049974,"line_start":411,"line_end":411,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14049979,"byte_end":14050025,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050030,"byte_end":14050033,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050038,"byte_end":14050087,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050092,"byte_end":14050095,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050100,"byte_end":14050119,"line_start":416,"line_end":416,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050124,"byte_end":14050127,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050132,"byte_end":14050173,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050178,"byte_end":14050218,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050223,"byte_end":14050228,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050233,"byte_end":14050240,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8471},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14052240,"byte_end":14052248,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050355,"byte_end":14050387,"line_start":427,"line_end":427,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050392,"byte_end":14050395,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050400,"byte_end":14050473,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050478,"byte_end":14050544,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050549,"byte_end":14050573,"line_start":431,"line_end":431,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050578,"byte_end":14050581,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050586,"byte_end":14050652,"line_start":433,"line_end":433,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050657,"byte_end":14050679,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050684,"byte_end":14050687,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050692,"byte_end":14050704,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050709,"byte_end":14050712,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050717,"byte_end":14050768,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050773,"byte_end":14050836,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050841,"byte_end":14050916,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050921,"byte_end":14050935,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050940,"byte_end":14050943,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050948,"byte_end":14050962,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050967,"byte_end":14050970,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14050975,"byte_end":14051025,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051030,"byte_end":14051033,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051038,"byte_end":14051045,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051050,"byte_end":14051079,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051084,"byte_end":14051134,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051139,"byte_end":14051142,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051147,"byte_end":14051165,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051170,"byte_end":14051191,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051196,"byte_end":14051242,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051247,"byte_end":14051250,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051255,"byte_end":14051284,"line_start":455,"line_end":455,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051289,"byte_end":14051334,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051339,"byte_end":14051381,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051386,"byte_end":14051418,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051423,"byte_end":14051432,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051437,"byte_end":14051440,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051445,"byte_end":14051468,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051473,"byte_end":14051507,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051512,"byte_end":14051515,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051520,"byte_end":14051549,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051554,"byte_end":14051606,"line_start":465,"line_end":465,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051611,"byte_end":14051643,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051648,"byte_end":14051657,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051662,"byte_end":14051667,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051672,"byte_end":14051679,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051684,"byte_end":14051687,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051692,"byte_end":14051753,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051758,"byte_end":14051761,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051766,"byte_end":14051773,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051778,"byte_end":14051807,"line_start":474,"line_end":474,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051812,"byte_end":14051862,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051867,"byte_end":14051870,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051875,"byte_end":14051893,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051898,"byte_end":14051919,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051924,"byte_end":14051976,"line_start":479,"line_end":479,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051981,"byte_end":14051984,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14051989,"byte_end":14052006,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14052011,"byte_end":14052014,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14052019,"byte_end":14052048,"line_start":483,"line_end":483,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14052053,"byte_end":14052107,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14052112,"byte_end":14052155,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14052160,"byte_end":14052192,"line_start":486,"line_end":486,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14052197,"byte_end":14052206,"line_start":487,"line_end":487,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14052211,"byte_end":14052216,"line_start":488,"line_end":488,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14052221,"byte_end":14052228,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9469},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120813,"byte_end":14120822,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":9470}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120162,"byte_end":14120227,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120228,"byte_end":14120231,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120232,"byte_end":14120307,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120308,"byte_end":14120384,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120385,"byte_end":14120465,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120466,"byte_end":14120475,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120476,"byte_end":14120479,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120480,"byte_end":14120553,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120554,"byte_end":14120633,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120634,"byte_end":14120712,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120713,"byte_end":14120784,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":9473},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121071,"byte_end":14121086,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":9475},{"krate":0,"index":9476}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120887,"byte_end":14120919,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120920,"byte_end":14120923,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120924,"byte_end":14120975,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120976,"byte_end":14120979,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14120980,"byte_end":14121030,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121031,"byte_end":14121042,"line_start":26,"line_end":26,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9480},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121347,"byte_end":14121367,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":9481},{"krate":0,"index":9482}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121138,"byte_end":14121177,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121178,"byte_end":14121181,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121182,"byte_end":14121239,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121240,"byte_end":14121243,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121244,"byte_end":14121306,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121307,"byte_end":14121318,"line_start":38,"line_end":38,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9485},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121663,"byte_end":14121678,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121416,"byte_end":14121480,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121481,"byte_end":14121484,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121485,"byte_end":14121562,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121563,"byte_end":14121575,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121576,"byte_end":14121579,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14121580,"byte_end":14121634,"line_start":50,"line_end":50,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8844},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122232,"byte_end":14122235,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122157,"byte_end":14122220,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8845},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122411,"byte_end":14122428,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122347,"byte_end":14122399,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":8846},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122675,"byte_end":14122686,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122498,"byte_end":14122540,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122545,"byte_end":14122548,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122553,"byte_end":14122663,"line_start":84,"line_end":84,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":8847},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122806,"byte_end":14122813,"line_start":90,"line_end":90,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122749,"byte_end":14122788,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":8850},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123049,"byte_end":14123060,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122988,"byte_end":14123037,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8851},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123521,"byte_end":14123534,"line_start":114,"line_end":114,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123343,"byte_end":14123382,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123387,"byte_end":14123390,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123395,"byte_end":14123463,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123468,"byte_end":14123471,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123476,"byte_end":14123503,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8854},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123914,"byte_end":14123931,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123732,"byte_end":14123781,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123786,"byte_end":14123789,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123794,"byte_end":14123862,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123867,"byte_end":14123870,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14123875,"byte_end":14123902,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8857},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124446,"byte_end":14124452,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124271,"byte_end":14124341,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124346,"byte_end":14124415,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124420,"byte_end":14124434,"line_start":141,"line_end":141,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":8859},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124707,"byte_end":14124713,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124532,"byte_end":14124602,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124607,"byte_end":14124676,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124681,"byte_end":14124695,"line_start":150,"line_end":150,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":9490},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127765,"byte_end":14127771,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":9492},{"krate":0,"index":9493}],"decl_id":null,"docs":" An asynchronous reader-writer lock","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125235,"byte_end":14125273,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125274,"byte_end":14125277,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125278,"byte_end":14125355,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125356,"byte_end":14125435,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125436,"byte_end":14125515,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125516,"byte_end":14125574,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125575,"byte_end":14125578,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125579,"byte_end":14125657,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125658,"byte_end":14125736,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125737,"byte_end":14125815,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125816,"byte_end":14125881,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125882,"byte_end":14125885,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125886,"byte_end":14125950,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14125951,"byte_end":14126023,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126024,"byte_end":14126104,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126105,"byte_end":14126185,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126186,"byte_end":14126266,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126267,"byte_end":14126336,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126337,"byte_end":14126407,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126408,"byte_end":14126446,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126447,"byte_end":14126450,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126451,"byte_end":14126528,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126529,"byte_end":14126614,"line_start":36,"line_end":36,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126615,"byte_end":14126695,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126696,"byte_end":14126743,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126744,"byte_end":14126816,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126817,"byte_end":14126820,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126821,"byte_end":14126835,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126836,"byte_end":14126839,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126840,"byte_end":14126847,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126848,"byte_end":14126876,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126877,"byte_end":14126880,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126881,"byte_end":14126899,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126900,"byte_end":14126921,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126922,"byte_end":14126956,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126957,"byte_end":14126960,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14126961,"byte_end":14127009,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127010,"byte_end":14127019,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127020,"byte_end":14127059,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127060,"byte_end":14127099,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127100,"byte_end":14127131,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127132,"byte_end":14127163,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127164,"byte_end":14127213,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127214,"byte_end":14127217,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127218,"byte_end":14127269,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127270,"byte_end":14127279,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127280,"byte_end":14127323,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127324,"byte_end":14127344,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127345,"byte_end":14127375,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127376,"byte_end":14127415,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127416,"byte_end":14127421,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127422,"byte_end":14127429,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127430,"byte_end":14127433,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127434,"byte_end":14127468,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127469,"byte_end":14127498,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127499,"byte_end":14127546,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127547,"byte_end":14127596,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127597,"byte_end":14127634,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127635,"byte_end":14127736,"line_start":72,"line_end":72,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":8895},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128146,"byte_end":14128161,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":8898},{"krate":0,"index":8899},{"krate":0,"index":8900}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127905,"byte_end":14127977,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127978,"byte_end":14127990,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127991,"byte_end":14127994,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14127995,"byte_end":14128050,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128051,"byte_end":14128066,"line_start":86,"line_end":86,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128067,"byte_end":14128070,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128071,"byte_end":14128104,"line_start":88,"line_end":88,"column_start":1,"column_end":34}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128105,"byte_end":14128134,"line_start":89,"line_end":89,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":8904},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129479,"byte_end":14129482,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128305,"byte_end":14128373,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128378,"byte_end":14128381,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128386,"byte_end":14128459,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128464,"byte_end":14128484,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128489,"byte_end":14128492,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128497,"byte_end":14128548,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128553,"byte_end":14128623,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128628,"byte_end":14128692,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128697,"byte_end":14128700,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128705,"byte_end":14128777,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128782,"byte_end":14128808,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128813,"byte_end":14128816,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128821,"byte_end":14128930,"line_start":109,"line_end":109,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128935,"byte_end":14128998,"line_start":110,"line_end":110,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129003,"byte_end":14129006,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129011,"byte_end":14129025,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129030,"byte_end":14129033,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129038,"byte_end":14129045,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129050,"byte_end":14129097,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129102,"byte_end":14129105,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129110,"byte_end":14129158,"line_start":117,"line_end":117,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129163,"byte_end":14129183,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129188,"byte_end":14129191,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129196,"byte_end":14129216,"line_start":120,"line_end":120,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129221,"byte_end":14129244,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129249,"byte_end":14129284,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129289,"byte_end":14129292,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129297,"byte_end":14129331,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129336,"byte_end":14129390,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129395,"byte_end":14129398,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129403,"byte_end":14129429,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129434,"byte_end":14129441,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129446,"byte_end":14129453,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129458,"byte_end":14129467,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8907},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14131177,"byte_end":14131184,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129860,"byte_end":14129929,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14129934,"byte_end":14130004,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130009,"byte_end":14130020,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130025,"byte_end":14130028,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130033,"byte_end":14130106,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130111,"byte_end":14130131,"line_start":151,"line_end":151,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130136,"byte_end":14130139,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130144,"byte_end":14130203,"line_start":153,"line_end":153,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130208,"byte_end":14130288,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130293,"byte_end":14130342,"line_start":155,"line_end":155,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130347,"byte_end":14130350,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130355,"byte_end":14130431,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130436,"byte_end":14130462,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130467,"byte_end":14130470,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130475,"byte_end":14130592,"line_start":160,"line_end":160,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130597,"byte_end":14130660,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130665,"byte_end":14130668,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130673,"byte_end":14130687,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130692,"byte_end":14130695,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130700,"byte_end":14130707,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130712,"byte_end":14130759,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130764,"byte_end":14130767,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130772,"byte_end":14130820,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130825,"byte_end":14130845,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130850,"byte_end":14130853,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130858,"byte_end":14130878,"line_start":171,"line_end":171,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130883,"byte_end":14130906,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130911,"byte_end":14130946,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130951,"byte_end":14130954,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130959,"byte_end":14130993,"line_start":175,"line_end":175,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14130998,"byte_end":14131088,"line_start":176,"line_end":176,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14131093,"byte_end":14131096,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14131101,"byte_end":14131127,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14131132,"byte_end":14131139,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14131144,"byte_end":14131151,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14131156,"byte_end":14131165,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8922},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132433,"byte_end":14132449,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":8925},{"krate":0,"index":8926},{"krate":0,"index":8927}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132181,"byte_end":14132257,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132258,"byte_end":14132270,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132271,"byte_end":14132274,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132275,"byte_end":14132332,"line_start":228,"line_end":228,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132333,"byte_end":14132351,"line_start":229,"line_end":229,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132352,"byte_end":14132355,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132356,"byte_end":14132391,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132392,"byte_end":14132421,"line_start":232,"line_end":232,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":8931},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133834,"byte_end":14133837,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockWriteGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockWriteGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132604,"byte_end":14132673,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132678,"byte_end":14132681,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132686,"byte_end":14132760,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132765,"byte_end":14132785,"line_start":243,"line_end":243,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132790,"byte_end":14132793,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132798,"byte_end":14132857,"line_start":245,"line_end":245,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132862,"byte_end":14132935,"line_start":246,"line_end":246,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132940,"byte_end":14132993,"line_start":247,"line_end":247,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132998,"byte_end":14133001,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133006,"byte_end":14133079,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133084,"byte_end":14133110,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133115,"byte_end":14133118,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133123,"byte_end":14133234,"line_start":252,"line_end":252,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133239,"byte_end":14133302,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133307,"byte_end":14133310,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133315,"byte_end":14133329,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133334,"byte_end":14133337,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133342,"byte_end":14133349,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133354,"byte_end":14133402,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133407,"byte_end":14133410,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133415,"byte_end":14133463,"line_start":260,"line_end":260,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133468,"byte_end":14133488,"line_start":261,"line_end":261,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133493,"byte_end":14133496,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133501,"byte_end":14133521,"line_start":263,"line_end":263,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133526,"byte_end":14133549,"line_start":264,"line_end":264,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133554,"byte_end":14133589,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133594,"byte_end":14133597,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133602,"byte_end":14133607,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133612,"byte_end":14133693,"line_start":268,"line_end":268,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133698,"byte_end":14133718,"line_start":269,"line_end":269,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133723,"byte_end":14133728,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133733,"byte_end":14133736,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133741,"byte_end":14133784,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133789,"byte_end":14133796,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133801,"byte_end":14133808,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14133813,"byte_end":14133822,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8934},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135636,"byte_end":14135643,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockWriteGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockWriteGuard`] for a component of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134231,"byte_end":14134298,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134303,"byte_end":14134377,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134382,"byte_end":14134393,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134398,"byte_end":14134401,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134406,"byte_end":14134480,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134485,"byte_end":14134505,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134510,"byte_end":14134513,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134518,"byte_end":14134569,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134574,"byte_end":14134649,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134654,"byte_end":14134718,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134723,"byte_end":14134726,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134731,"byte_end":14134804,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134809,"byte_end":14134839,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134844,"byte_end":14134847,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134852,"byte_end":14134971,"line_start":305,"line_end":305,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14134976,"byte_end":14135039,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135044,"byte_end":14135047,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135052,"byte_end":14135066,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135071,"byte_end":14135074,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135079,"byte_end":14135086,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135091,"byte_end":14135139,"line_start":311,"line_end":311,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135144,"byte_end":14135147,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135152,"byte_end":14135200,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135205,"byte_end":14135225,"line_start":314,"line_end":314,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135230,"byte_end":14135233,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135238,"byte_end":14135258,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135263,"byte_end":14135286,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135291,"byte_end":14135326,"line_start":318,"line_end":318,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135331,"byte_end":14135334,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135339,"byte_end":14135344,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135349,"byte_end":14135388,"line_start":321,"line_end":321,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135393,"byte_end":14135496,"line_start":322,"line_end":322,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135501,"byte_end":14135520,"line_start":323,"line_end":323,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135525,"byte_end":14135530,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135535,"byte_end":14135538,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135543,"byte_end":14135586,"line_start":326,"line_end":326,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135591,"byte_end":14135598,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135603,"byte_end":14135610,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14135615,"byte_end":14135624,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8963},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138746,"byte_end":14138749,"line_start":426,"line_end":426,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138536,"byte_end":14138599,"line_start":417,"line_end":417,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138604,"byte_end":14138607,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138612,"byte_end":14138626,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138631,"byte_end":14138634,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138639,"byte_end":14138646,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138651,"byte_end":14138679,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138684,"byte_end":14138687,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138692,"byte_end":14138722,"line_start":424,"line_end":424,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138727,"byte_end":14138734,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8964},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139964,"byte_end":14139968,"line_start":467,"line_end":467,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138926,"byte_end":14138997,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139002,"byte_end":14139048,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139053,"byte_end":14139056,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139061,"byte_end":14139130,"line_start":439,"line_end":439,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139135,"byte_end":14139211,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139216,"byte_end":14139240,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139245,"byte_end":14139248,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139253,"byte_end":14139267,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139272,"byte_end":14139275,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139280,"byte_end":14139287,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139292,"byte_end":14139315,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139320,"byte_end":14139348,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139353,"byte_end":14139356,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139361,"byte_end":14139379,"line_start":449,"line_end":449,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139384,"byte_end":14139405,"line_start":450,"line_end":450,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139410,"byte_end":14139454,"line_start":451,"line_end":451,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139459,"byte_end":14139493,"line_start":452,"line_end":452,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139498,"byte_end":14139501,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139506,"byte_end":14139540,"line_start":454,"line_end":454,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139545,"byte_end":14139571,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139576,"byte_end":14139579,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139584,"byte_end":14139617,"line_start":457,"line_end":457,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139622,"byte_end":14139692,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139697,"byte_end":14139737,"line_start":459,"line_end":459,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139742,"byte_end":14139772,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139777,"byte_end":14139833,"line_start":461,"line_end":461,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139838,"byte_end":14139841,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139846,"byte_end":14139904,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139909,"byte_end":14139925,"line_start":464,"line_end":464,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139930,"byte_end":14139934,"line_start":465,"line_end":465,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14139939,"byte_end":14139946,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8968},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14141056,"byte_end":14141061,"line_start":502,"line_end":502,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140415,"byte_end":14140490,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140495,"byte_end":14140541,"line_start":481,"line_end":481,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140546,"byte_end":14140549,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140554,"byte_end":14140624,"line_start":483,"line_end":483,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140629,"byte_end":14140667,"line_start":484,"line_end":484,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140672,"byte_end":14140675,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140680,"byte_end":14140753,"line_start":486,"line_end":486,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140758,"byte_end":14140775,"line_start":487,"line_end":487,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140780,"byte_end":14140783,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140788,"byte_end":14140802,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140807,"byte_end":14140810,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140815,"byte_end":14140822,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140827,"byte_end":14140855,"line_start":492,"line_end":492,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140860,"byte_end":14140863,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140868,"byte_end":14140886,"line_start":494,"line_end":494,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140891,"byte_end":14140912,"line_start":495,"line_end":495,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140917,"byte_end":14140949,"line_start":496,"line_end":496,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140954,"byte_end":14140957,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14140962,"byte_end":14140999,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14141004,"byte_end":14141017,"line_start":499,"line_end":499,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14141022,"byte_end":14141026,"line_start":500,"line_end":500,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14141031,"byte_end":14141038,"line_start":501,"line_end":501,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8972},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14141590,"byte_end":14141600,"line_start":516,"line_end":516,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14141525,"byte_end":14141578,"line_start":515,"line_end":515,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":9066},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":9067},{"krate":0,"index":9070},{"krate":0,"index":9073},{"krate":0,"index":9076},{"krate":0,"index":9079},{"krate":0,"index":9082},{"krate":0,"index":9083},{"krate":0,"index":9084},{"krate":0,"index":9086},{"krate":0,"index":9087},{"krate":0,"index":9089},{"krate":0,"index":9090},{"krate":0,"index":9093},{"krate":0,"index":9096},{"krate":0,"index":9099},{"krate":0,"index":9102},{"krate":0,"index":9105},{"krate":0,"index":9106},{"krate":0,"index":9107},{"krate":0,"index":9109},{"krate":0,"index":9110},{"krate":0,"index":9112},{"krate":0,"index":9113},{"krate":0,"index":9116},{"krate":0,"index":9497},{"krate":0,"index":9501},{"krate":0,"index":9504},{"krate":0,"index":9507},{"krate":0,"index":9510},{"krate":0,"index":9514},{"krate":0,"index":9119},{"krate":0,"index":9524},{"krate":0,"index":9530},{"krate":0,"index":9128},{"krate":0,"index":9533},{"krate":0,"index":9536},{"krate":0,"index":9538},{"krate":0,"index":9540},{"krate":0,"index":9543},{"krate":0,"index":9129},{"krate":0,"index":9130},{"krate":0,"index":9134},{"krate":0,"index":9139},{"krate":0,"index":9146},{"krate":0,"index":9151},{"krate":0,"index":9154},{"krate":0,"index":9157},{"krate":0,"index":9165},{"krate":0,"index":9167},{"krate":0,"index":9170},{"krate":0,"index":9174},{"krate":0,"index":9177},{"krate":0,"index":9179},{"krate":0,"index":9181},{"krate":0,"index":9182},{"krate":0,"index":9185}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155099,"byte_end":14155178,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155179,"byte_end":14155189,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155190,"byte_end":14155193,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155194,"byte_end":14155270,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155271,"byte_end":14155345,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155346,"byte_end":14155349,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155350,"byte_end":14155361,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155362,"byte_end":14155365,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155366,"byte_end":14155433,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ the producer and sender halves of the channel. The channel is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155434,"byte_end":14155499,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/ created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155500,"byte_end":14155565,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ be ready upon creation and will yield either this initial value or","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155566,"byte_end":14155636,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ the latest value that has been sent by `Sender`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155637,"byte_end":14155689,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155690,"byte_end":14155693,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155694,"byte_end":14155761,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155762,"byte_end":14155765,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155766,"byte_end":14155780,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155781,"byte_end":14155784,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155785,"byte_end":14155792,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155793,"byte_end":14155820,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155821,"byte_end":14155824,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155825,"byte_end":14155889,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155890,"byte_end":14155941,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155942,"byte_end":14155945,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155946,"byte_end":14155979,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14155980,"byte_end":14156033,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156034,"byte_end":14156085,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156086,"byte_end":14156099,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156100,"byte_end":14156111,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156112,"byte_end":14156115,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156116,"byte_end":14156147,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156148,"byte_end":14156160,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156161,"byte_end":14156168,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156169,"byte_end":14156176,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156177,"byte_end":14156180,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156181,"byte_end":14156194,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156195,"byte_end":14156198,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156199,"byte_end":14156273,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ handles have been dropped. This indicates that there is no further interest","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156274,"byte_end":14156353,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ in the values being produced and work can be stopped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156354,"byte_end":14156411,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156412,"byte_end":14156415,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156416,"byte_end":14156435,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156436,"byte_end":14156439,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156440,"byte_end":14156520,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156521,"byte_end":14156600,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156601,"byte_end":14156673,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156674,"byte_end":14156677,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156678,"byte_end":14156720,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156721,"byte_end":14156767,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156768,"byte_end":14156826,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156827,"byte_end":14156871,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14156872,"byte_end":14156930,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":9497},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157418,"byte_end":14157426,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":9499},{"krate":0,"index":9500}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157252,"byte_end":14157318,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157319,"byte_end":14157322,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157323,"byte_end":14157389,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":9504},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157733,"byte_end":14157739,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":9506}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157568,"byte_end":14157633,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157634,"byte_end":14157637,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157638,"byte_end":14157704,"line_start":79,"line_end":79,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":9510},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14158060,"byte_end":14158063,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":9513}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157777,"byte_end":14157819,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157820,"byte_end":14157823,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157824,"byte_end":14157900,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157901,"byte_end":14157980,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14157981,"byte_end":14158031,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":9119},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14158119,"byte_end":14158124,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":9120},{"krate":0,"index":9518},{"krate":0,"index":9521},{"krate":0,"index":9123},{"krate":0,"index":9126}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14158131,"byte_end":14158152,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":9518},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14158260,"byte_end":14158269,"line_start":102,"line_end":102,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":9520}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14158177,"byte_end":14158223,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":9130},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14160048,"byte_end":14160055,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T: Clone>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159280,"byte_end":14159356,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159357,"byte_end":14159360,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159361,"byte_end":14159443,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159444,"byte_end":14159520,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159521,"byte_end":14159557,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159558,"byte_end":14159561,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159562,"byte_end":14159576,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159577,"byte_end":14159580,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159581,"byte_end":14159588,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159589,"byte_end":14159616,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159617,"byte_end":14159620,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159621,"byte_end":14159685,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159686,"byte_end":14159737,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159738,"byte_end":14159741,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159742,"byte_end":14159775,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159776,"byte_end":14159829,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159830,"byte_end":14159881,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159882,"byte_end":14159895,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159896,"byte_end":14159907,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159908,"byte_end":14159911,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159912,"byte_end":14159943,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159944,"byte_end":14159956,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159957,"byte_end":14159964,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159965,"byte_end":14159972,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159973,"byte_end":14159976,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14159977,"byte_end":14160006,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14160007,"byte_end":14160040,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":9136},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14161224,"byte_end":14161230,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14160762,"byte_end":14160817,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14160822,"byte_end":14160825,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14160830,"byte_end":14160906,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14160911,"byte_end":14160987,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14160992,"byte_end":14161023,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14161028,"byte_end":14161031,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14161036,"byte_end":14161050,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14161055,"byte_end":14161058,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14161063,"byte_end":14161070,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14161075,"byte_end":14161102,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14161107,"byte_end":14161110,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14161115,"byte_end":14161157,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14161162,"byte_end":14161200,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14161205,"byte_end":14161212,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9137},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14161390,"byte_end":14161403,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"pub fn poll_recv_ref<'a>(&'a mut Self, &mut Context) -> Poll<Option<Ref>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9141},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14163124,"byte_end":14163128,"line_start":282,"line_end":282,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162042,"byte_end":14162102,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162107,"byte_end":14162110,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If this is the first time the function is called on a `Receiver`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162115,"byte_end":14162183,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ instance, then the function completes immediately with the **current**","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162188,"byte_end":14162262,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ value held by the channel. On the next call, the function waits until","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162267,"byte_end":14162340,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ a new value is sent in the channel.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162345,"byte_end":14162384,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162389,"byte_end":14162392,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the `Sender` half is dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162397,"byte_end":14162452,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162457,"byte_end":14162460,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162465,"byte_end":14162479,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162484,"byte_end":14162487,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162492,"byte_end":14162499,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162504,"byte_end":14162531,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162536,"byte_end":14162539,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162544,"byte_end":14162562,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162567,"byte_end":14162588,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162593,"byte_end":14162644,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162649,"byte_end":14162652,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162657,"byte_end":14162698,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"hello\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162703,"byte_end":14162734,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162739,"byte_end":14162742,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162747,"byte_end":14162780,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         tx.broadcast(\"goodbye\").unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162785,"byte_end":14162830,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162835,"byte_end":14162846,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162851,"byte_end":14162854,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Waits for the new task to spawn and send the value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162859,"byte_end":14162921,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162926,"byte_end":14162967,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"goodbye\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162972,"byte_end":14163005,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14163010,"byte_end":14163013,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14163018,"byte_end":14163050,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     assert!(v.is_none());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14163055,"byte_end":14163084,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14163089,"byte_end":14163094,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14163099,"byte_end":14163106,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9159},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14164194,"byte_end":14164203,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"pub fn broadcast(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcasts a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcasts a new value via the channel, notifying all receivers.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14164114,"byte_end":14164182,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":9160},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14165034,"byte_end":14165040,"line_start":348,"line_end":348,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14164823,"byte_end":14164869,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14164874,"byte_end":14164877,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14164882,"byte_end":14164956,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14164961,"byte_end":14165016,"line_start":347,"line_end":347,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":9545},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":9549},{"krate":0,"index":9553},{"krate":0,"index":9562},{"krate":0,"index":9565},{"krate":0,"index":9566},{"krate":0,"index":9569},{"krate":0,"index":9572},{"krate":0,"index":9582},{"krate":0,"index":9585},{"krate":0,"index":9599}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21598,"byte_end":21625,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"/ Asynchronous green-threads.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14166786,"byte_end":14166817,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14166818,"byte_end":14166821,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14166822,"byte_end":14166844,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14166845,"byte_end":14166848,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14166849,"byte_end":14166930,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14166931,"byte_end":14167011,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167012,"byte_end":14167092,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167093,"byte_end":14167167,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167168,"byte_end":14167243,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167244,"byte_end":14167266,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167267,"byte_end":14167270,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167271,"byte_end":14167306,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167307,"byte_end":14167310,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167311,"byte_end":14167385,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167386,"byte_end":14167465,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167466,"byte_end":14167538,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167539,"byte_end":14167614,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167615,"byte_end":14167668,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167669,"byte_end":14167672,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167673,"byte_end":14167750,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167751,"byte_end":14167824,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167825,"byte_end":14167904,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167905,"byte_end":14167983,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14167984,"byte_end":14168056,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168057,"byte_end":14168132,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168133,"byte_end":14168207,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168208,"byte_end":14168283,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168284,"byte_end":14168314,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168315,"byte_end":14168318,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168319,"byte_end":14168397,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168398,"byte_end":14168473,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168474,"byte_end":14168551,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168552,"byte_end":14168631,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168632,"byte_end":14168710,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168711,"byte_end":14168786,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168787,"byte_end":14168862,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168863,"byte_end":14168924,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168925,"byte_end":14168928,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168929,"byte_end":14168953,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14168954,"byte_end":14169018,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169019,"byte_end":14169079,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169080,"byte_end":14169169,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169170,"byte_end":14169258,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169259,"byte_end":14169262,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169263,"byte_end":14169288,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169289,"byte_end":14169292,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169293,"byte_end":14169360,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169361,"byte_end":14169364,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169365,"byte_end":14169381,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169382,"byte_end":14169385,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169386,"byte_end":14169465,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169466,"byte_end":14169545,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169546,"byte_end":14169625,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169626,"byte_end":14169693,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169694,"byte_end":14169697,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169698,"byte_end":14169705,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169706,"byte_end":14169726,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169727,"byte_end":14169730,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169731,"byte_end":14169753,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169754,"byte_end":14169777,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169778,"byte_end":14169814,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169815,"byte_end":14169822,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169823,"byte_end":14169830,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169831,"byte_end":14169838,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169839,"byte_end":14169842,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169843,"byte_end":14169922,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14169923,"byte_end":14170001,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170002,"byte_end":14170036,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170037,"byte_end":14170040,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170041,"byte_end":14170048,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170049,"byte_end":14170069,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170070,"byte_end":14170073,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170074,"byte_end":14170154,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170155,"byte_end":14170189,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170190,"byte_end":14170204,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170205,"byte_end":14170227,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170228,"byte_end":14170235,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170236,"byte_end":14170239,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170240,"byte_end":14170250,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170251,"byte_end":14170254,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170255,"byte_end":14170299,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170300,"byte_end":14170329,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170330,"byte_end":14170369,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170370,"byte_end":14170382,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170383,"byte_end":14170390,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170391,"byte_end":14170398,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170399,"byte_end":14170402,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170403,"byte_end":14170483,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170484,"byte_end":14170560,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170561,"byte_end":14170573,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170574,"byte_end":14170577,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170578,"byte_end":14170585,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170586,"byte_end":14170606,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170607,"byte_end":14170610,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170611,"byte_end":14170649,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170650,"byte_end":14170684,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170685,"byte_end":14170726,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170727,"byte_end":14170734,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170735,"byte_end":14170738,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170739,"byte_end":14170797,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170798,"byte_end":14170831,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170832,"byte_end":14170839,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170840,"byte_end":14170847,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170848,"byte_end":14170851,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170852,"byte_end":14170925,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ feature flag is enabled.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170926,"byte_end":14170954,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170955,"byte_end":14170958,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14170959,"byte_end":14171000,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171001,"byte_end":14171034,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171035,"byte_end":14171081,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171082,"byte_end":14171125,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171126,"byte_end":14171168,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171169,"byte_end":14171210,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171211,"byte_end":14171214,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171215,"byte_end":14171244,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171245,"byte_end":14171248,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171249,"byte_end":14171329,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171330,"byte_end":14171409,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171410,"byte_end":14171489,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171490,"byte_end":14171530,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171531,"byte_end":14171534,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171535,"byte_end":14171609,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171610,"byte_end":14171690,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171691,"byte_end":14171694,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171695,"byte_end":14171718,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171719,"byte_end":14171722,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171723,"byte_end":14171803,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171804,"byte_end":14171870,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171871,"byte_end":14171938,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14171939,"byte_end":14172013,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172014,"byte_end":14172026,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172027,"byte_end":14172030,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172031,"byte_end":14172038,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172039,"byte_end":14172059,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172060,"byte_end":14172063,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172064,"byte_end":14172087,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172088,"byte_end":14172117,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172118,"byte_end":14172180,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172181,"byte_end":14172188,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172189,"byte_end":14172196,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172197,"byte_end":14172204,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172205,"byte_end":14172208,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172209,"byte_end":14172283,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172284,"byte_end":14172351,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172352,"byte_end":14172355,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172356,"byte_end":14172367,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172368,"byte_end":14172390,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172391,"byte_end":14172455,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172456,"byte_end":14172496,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172497,"byte_end":14172559,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172560,"byte_end":14172588,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172589,"byte_end":14172596,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172597,"byte_end":14172600,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172601,"byte_end":14172630,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172631,"byte_end":14172676,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172677,"byte_end":14172689,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172690,"byte_end":14172697,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172698,"byte_end":14172705,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172706,"byte_end":14172709,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172710,"byte_end":14172733,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172734,"byte_end":14172737,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172738,"byte_end":14172818,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172819,"byte_end":14172893,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172894,"byte_end":14172970,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14172971,"byte_end":14173045,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173046,"byte_end":14173125,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173126,"byte_end":14173208,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173209,"byte_end":14173230,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173231,"byte_end":14173234,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173235,"byte_end":14173251,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173252,"byte_end":14173255,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173256,"byte_end":14173263,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173264,"byte_end":14173284,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173285,"byte_end":14173288,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173289,"byte_end":14173312,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173313,"byte_end":14173355,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173356,"byte_end":14173418,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173419,"byte_end":14173447,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173448,"byte_end":14173455,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173456,"byte_end":14173459,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173460,"byte_end":14173505,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173506,"byte_end":14173513,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173514,"byte_end":14173521,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173522,"byte_end":14173525,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173526,"byte_end":14173544,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173545,"byte_end":14173548,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173549,"byte_end":14173623,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173624,"byte_end":14173702,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173703,"byte_end":14173779,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173780,"byte_end":14173837,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173838,"byte_end":14173916,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173917,"byte_end":14173945,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173946,"byte_end":14173949,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173950,"byte_end":14173961,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173962,"byte_end":14173982,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173983,"byte_end":14173986,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14173987,"byte_end":14174025,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174026,"byte_end":14174037,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174038,"byte_end":14174065,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174066,"byte_end":14174084,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174085,"byte_end":14174127,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174128,"byte_end":14174139,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174140,"byte_end":14174143,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174144,"byte_end":14174211,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174212,"byte_end":14174244,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174245,"byte_end":14174281,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174282,"byte_end":14174287,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174288,"byte_end":14174301,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174302,"byte_end":14174309,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174310,"byte_end":14174317,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174318,"byte_end":14174321,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174322,"byte_end":14174379,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174380,"byte_end":14174437,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174438,"byte_end":14174497,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174498,"byte_end":14174547,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":14174548,"byte_end":14174597,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":9556},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\blocking.rs","byte_start":14177197,"byte_end":14177211,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-threaded\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":22068,"byte_end":22099,"line_start":272,"line_end":272,"column_start":13,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":9559},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\blocking.rs","byte_start":14180100,"byte_end":14180114,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"blocking\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":16603,"byte_end":16631,"line_start":15,"line_end":15,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":9602},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\spawn.rs","byte_start":14184286,"byte_end":14184291,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":9604},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\yield_now.rs","byte_start":14185372,"byte_end":14185381,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\yield_now.rs","byte_start":14185291,"byte_end":14185354,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":9612},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","parent":null,"children":[{"krate":0,"index":9613},{"krate":0,"index":9614},{"krate":0,"index":9617},{"krate":0,"index":9730},{"krate":0,"index":9733},{"krate":0,"index":9767},{"krate":0,"index":9768},{"krate":0,"index":9771},{"krate":0,"index":9774},{"krate":0,"index":9777},{"krate":0,"index":10085},{"krate":0,"index":10106},{"krate":0,"index":10109},{"krate":0,"index":10153},{"krate":0,"index":10156},{"krate":0,"index":10197},{"krate":0,"index":10198},{"krate":0,"index":10201},{"krate":0,"index":10204},{"krate":0,"index":10207},{"krate":0,"index":10261},{"krate":0,"index":10262},{"krate":0,"index":10265},{"krate":0,"index":10268},{"krate":0,"index":10271},{"krate":0,"index":10537},{"krate":0,"index":10581},{"krate":0,"index":10582},{"krate":0,"index":10585},{"krate":0,"index":10274},{"krate":0,"index":10354},{"krate":0,"index":10357},{"krate":0,"index":10362}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":23137,"byte_end":23161,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14185913,"byte_end":14185945,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14185946,"byte_end":14185949,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14185950,"byte_end":14186030,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186031,"byte_end":14186043,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186044,"byte_end":14186047,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186048,"byte_end":14186129,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186130,"byte_end":14186144,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186145,"byte_end":14186148,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186149,"byte_end":14186219,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186220,"byte_end":14186300,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186301,"byte_end":14186315,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186316,"byte_end":14186319,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186320,"byte_end":14186399,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186400,"byte_end":14186472,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186473,"byte_end":14186542,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186543,"byte_end":14186546,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186547,"byte_end":14186624,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186625,"byte_end":14186643,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186644,"byte_end":14186647,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186648,"byte_end":14186719,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186720,"byte_end":14186739,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186740,"byte_end":14186743,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186744,"byte_end":14186814,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186815,"byte_end":14186818,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186819,"byte_end":14186833,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186834,"byte_end":14186837,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186838,"byte_end":14186884,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186885,"byte_end":14186888,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186889,"byte_end":14186896,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186897,"byte_end":14186928,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186929,"byte_end":14186932,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186933,"byte_end":14186961,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186962,"byte_end":14186965,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186966,"byte_end":14186969,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186970,"byte_end":14186988,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14186989,"byte_end":14187010,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187011,"byte_end":14187063,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187064,"byte_end":14187104,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187105,"byte_end":14187110,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187111,"byte_end":14187118,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187119,"byte_end":14187122,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187123,"byte_end":14187202,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187203,"byte_end":14187281,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ prelude.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187282,"byte_end":14187294,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187295,"byte_end":14187298,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187299,"byte_end":14187306,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187307,"byte_end":14187348,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187349,"byte_end":14187352,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187353,"byte_end":14187381,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187382,"byte_end":14187405,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187406,"byte_end":14187411,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187412,"byte_end":14187415,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187416,"byte_end":14187438,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187439,"byte_end":14187506,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187507,"byte_end":14187510,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187511,"byte_end":14187532,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187533,"byte_end":14187573,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187574,"byte_end":14187579,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187580,"byte_end":14187587,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187588,"byte_end":14187595,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187596,"byte_end":14187599,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187600,"byte_end":14187676,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187677,"byte_end":14187680,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187681,"byte_end":14187749,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187750,"byte_end":14187822,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187823,"byte_end":14187898,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187899,"byte_end":14187977,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187978,"byte_end":14187981,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14187982,"byte_end":14188060,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188061,"byte_end":14188131,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188132,"byte_end":14188144,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188145,"byte_end":14188148,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188149,"byte_end":14188156,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188157,"byte_end":14188177,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188178,"byte_end":14188181,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188182,"byte_end":14188223,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188224,"byte_end":14188250,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188251,"byte_end":14188310,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188311,"byte_end":14188316,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188317,"byte_end":14188320,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188321,"byte_end":14188339,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188340,"byte_end":14188361,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188362,"byte_end":14188434,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188435,"byte_end":14188459,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188460,"byte_end":14188494,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188495,"byte_end":14188540,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188541,"byte_end":14188550,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188551,"byte_end":14188556,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188557,"byte_end":14188564,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188565,"byte_end":14188568,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188569,"byte_end":14188612,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188613,"byte_end":14188654,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":9617},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","parent":null,"children":[{"krate":0,"index":9618},{"krate":0,"index":9619},{"krate":0,"index":9622},{"krate":0,"index":9625},{"krate":0,"index":9626},{"krate":0,"index":9629},{"krate":0,"index":9632},{"krate":0,"index":9635},{"krate":0,"index":9638},{"krate":0,"index":9641},{"krate":0,"index":9644},{"krate":0,"index":9647},{"krate":0,"index":9650},{"krate":0,"index":9651},{"krate":0,"index":9653},{"krate":0,"index":9656},{"krate":0,"index":9657},{"krate":0,"index":9660},{"krate":0,"index":10383},{"krate":0,"index":10391},{"krate":0,"index":10394},{"krate":0,"index":10399},{"krate":0,"index":10402},{"krate":0,"index":10404},{"krate":0,"index":10406},{"krate":0,"index":10408},{"krate":0,"index":10412},{"krate":0,"index":10415},{"krate":0,"index":10422},{"krate":0,"index":9663},{"krate":0,"index":9664},{"krate":0,"index":9700},{"krate":0,"index":9702},{"krate":0,"index":9705},{"krate":0,"index":9709},{"krate":0,"index":9719},{"krate":0,"index":9722},{"krate":0,"index":9724}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14194805,"byte_end":14194837,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14194838,"byte_end":14194841,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14194842,"byte_end":14194882,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14194883,"byte_end":14194886,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14194887,"byte_end":14194924,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":10383},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14199235,"byte_end":14199245,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":10385},{"krate":0,"index":10386},{"krate":0,"index":10387},{"krate":0,"index":10388},{"krate":0,"index":10389},{"krate":0,"index":10390}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195165,"byte_end":14195197,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195198,"byte_end":14195201,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195202,"byte_end":14195279,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195280,"byte_end":14195320,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195321,"byte_end":14195324,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195325,"byte_end":14195336,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195337,"byte_end":14195340,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195341,"byte_end":14195408,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195409,"byte_end":14195489,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195490,"byte_end":14195568,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195569,"byte_end":14195605,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195606,"byte_end":14195609,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195610,"byte_end":14195680,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll_expired`] is called. If an entry has reached its","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195681,"byte_end":14195767,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195768,"byte_end":14195841,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195842,"byte_end":14195911,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195912,"byte_end":14195915,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195916,"byte_end":14195945,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195946,"byte_end":14195949,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`DelayQueue::poll_expired`]. If no delays have","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14195950,"byte_end":14196040,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196041,"byte_end":14196121,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196122,"byte_end":14196198,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196199,"byte_end":14196211,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196212,"byte_end":14196215,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196216,"byte_end":14196295,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196296,"byte_end":14196373,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196374,"byte_end":14196450,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196451,"byte_end":14196484,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196485,"byte_end":14196488,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196489,"byte_end":14196567,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196568,"byte_end":14196644,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196645,"byte_end":14196723,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196724,"byte_end":14196763,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196764,"byte_end":14196767,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196768,"byte_end":14196788,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196789,"byte_end":14196792,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196793,"byte_end":14196891,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196892,"byte_end":14196989,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14196990,"byte_end":14197031,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197032,"byte_end":14197035,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197036,"byte_end":14197136,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197137,"byte_end":14197202,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197203,"byte_end":14197206,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197207,"byte_end":14197289,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197290,"byte_end":14197317,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197318,"byte_end":14197321,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197322,"byte_end":14197333,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197334,"byte_end":14197337,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197338,"byte_end":14197385,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197386,"byte_end":14197389,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197390,"byte_end":14197408,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197409,"byte_end":14197463,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197464,"byte_end":14197467,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197468,"byte_end":14197491,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197492,"byte_end":14197526,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197527,"byte_end":14197562,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197563,"byte_end":14197591,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197592,"byte_end":14197621,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197622,"byte_end":14197648,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197649,"byte_end":14197652,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197653,"byte_end":14197671,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197672,"byte_end":14197734,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197735,"byte_end":14197777,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197778,"byte_end":14197783,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197784,"byte_end":14197787,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197788,"byte_end":14197817,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197818,"byte_end":14197821,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197822,"byte_end":14197838,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197839,"byte_end":14197898,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197899,"byte_end":14197939,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14197940,"byte_end":14198008,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198009,"byte_end":14198012,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198013,"byte_end":14198066,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198067,"byte_end":14198076,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198077,"byte_end":14198080,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198081,"byte_end":14198138,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198139,"byte_end":14198172,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198173,"byte_end":14198210,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198211,"byte_end":14198220,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198221,"byte_end":14198224,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198225,"byte_end":14198271,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198272,"byte_end":14198340,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198341,"byte_end":14198393,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198394,"byte_end":14198407,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198408,"byte_end":14198417,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198418,"byte_end":14198421,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198422,"byte_end":14198505,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198506,"byte_end":14198583,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198584,"byte_end":14198617,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198618,"byte_end":14198671,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198672,"byte_end":14198685,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198686,"byte_end":14198689,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198690,"byte_end":14198721,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198722,"byte_end":14198731,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198732,"byte_end":14198737,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198738,"byte_end":14198745,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198746,"byte_end":14198749,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198750,"byte_end":14198785,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198786,"byte_end":14198827,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198828,"byte_end":14198851,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198852,"byte_end":14198928,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198929,"byte_end":14198976,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ [`Stream::poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14198977,"byte_end":14199032,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14199033,"byte_end":14199070,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14199071,"byte_end":14199109,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14199110,"byte_end":14199128,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14199129,"byte_end":14199168,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14199169,"byte_end":14199206,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":10394},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14199960,"byte_end":14199967,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":10396},{"krate":0,"index":10397},{"krate":0,"index":10398}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14199742,"byte_end":14199800,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14199801,"byte_end":14199804,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll_expired`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14199805,"byte_end":14199861,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14199862,"byte_end":14199865,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll_expired`]: method@DelayQueue::poll_expired","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14199866,"byte_end":14199931,"line_start":151,"line_end":151,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":10402},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14200435,"byte_end":14200438,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":10403}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14200135,"byte_end":14200181,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14200182,"byte_end":14200185,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14200186,"byte_end":14200267,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14200268,"byte_end":14200303,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14200304,"byte_end":14200307,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14200308,"byte_end":14200345,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14200346,"byte_end":14200399,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":9666},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201416,"byte_end":14201419,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201116,"byte_end":14201154,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201159,"byte_end":14201162,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201167,"byte_end":14201240,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201245,"byte_end":14201248,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201253,"byte_end":14201267,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201272,"byte_end":14201275,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201280,"byte_end":14201291,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201296,"byte_end":14201330,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201335,"byte_end":14201392,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201397,"byte_end":14201404,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9667},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202337,"byte_end":14202350,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201489,"byte_end":14201556,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201561,"byte_end":14201564,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201569,"byte_end":14201640,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201645,"byte_end":14201714,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201719,"byte_end":14201731,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201736,"byte_end":14201739,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201744,"byte_end":14201758,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201763,"byte_end":14201766,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201771,"byte_end":14201782,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201787,"byte_end":14201821,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201826,"byte_end":14201856,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201861,"byte_end":14201864,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201869,"byte_end":14201889,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201894,"byte_end":14201917,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201922,"byte_end":14201982,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201987,"byte_end":14201990,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201995,"byte_end":14202058,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202063,"byte_end":14202087,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202092,"byte_end":14202150,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202155,"byte_end":14202164,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202169,"byte_end":14202172,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202177,"byte_end":14202240,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202245,"byte_end":14202301,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202306,"byte_end":14202313,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202318,"byte_end":14202325,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9668},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204418,"byte_end":14204427,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202649,"byte_end":14202722,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202727,"byte_end":14202736,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202741,"byte_end":14202744,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202749,"byte_end":14202823,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202828,"byte_end":14202848,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202853,"byte_end":14202856,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202861,"byte_end":14202936,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14202941,"byte_end":14203019,"line_start":263,"line_end":263,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203024,"byte_end":14203088,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203093,"byte_end":14203096,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203101,"byte_end":14203176,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203181,"byte_end":14203256,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203261,"byte_end":14203339,"line_start":268,"line_end":268,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203344,"byte_end":14203417,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203422,"byte_end":14203498,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203503,"byte_end":14203537,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203542,"byte_end":14203545,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203550,"byte_end":14203602,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203607,"byte_end":14203610,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203615,"byte_end":14203627,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203632,"byte_end":14203635,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203640,"byte_end":14203700,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203705,"byte_end":14203708,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203713,"byte_end":14203727,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203732,"byte_end":14203735,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203740,"byte_end":14203755,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203760,"byte_end":14203763,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203768,"byte_end":14203779,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203784,"byte_end":14203837,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203842,"byte_end":14203845,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203850,"byte_end":14203870,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203875,"byte_end":14203898,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203903,"byte_end":14203951,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14203956,"byte_end":14203996,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204001,"byte_end":14204061,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204066,"byte_end":14204069,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204074,"byte_end":14204101,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204106,"byte_end":14204150,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204155,"byte_end":14204198,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204203,"byte_end":14204210,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204215,"byte_end":14204222,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204227,"byte_end":14204230,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204235,"byte_end":14204282,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204287,"byte_end":14204322,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204327,"byte_end":14204360,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204365,"byte_end":14204388,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14204393,"byte_end":14204406,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9669},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14205787,"byte_end":14205799,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14205579,"byte_end":14205654,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14205659,"byte_end":14205735,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14205740,"byte_end":14205775,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":9672},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14208203,"byte_end":14208209,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14206416,"byte_end":14206493,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14206498,"byte_end":14206510,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14206515,"byte_end":14206518,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14206523,"byte_end":14206592,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14206597,"byte_end":14206625,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14206630,"byte_end":14206633,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14206638,"byte_end":14206713,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14206718,"byte_end":14206796,"line_start":370,"line_end":370,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14206801,"byte_end":14206865,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14206870,"byte_end":14206873,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14206878,"byte_end":14206953,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14206958,"byte_end":14207033,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207038,"byte_end":14207116,"line_start":375,"line_end":375,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207121,"byte_end":14207194,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207199,"byte_end":14207275,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207280,"byte_end":14207314,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207319,"byte_end":14207322,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207327,"byte_end":14207379,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207384,"byte_end":14207387,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207392,"byte_end":14207404,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207409,"byte_end":14207412,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207417,"byte_end":14207492,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207497,"byte_end":14207510,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207515,"byte_end":14207518,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207523,"byte_end":14207537,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207542,"byte_end":14207545,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207550,"byte_end":14207565,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207570,"byte_end":14207573,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207578,"byte_end":14207589,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207594,"byte_end":14207626,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207631,"byte_end":14207659,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207664,"byte_end":14207667,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207672,"byte_end":14207692,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207697,"byte_end":14207720,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207725,"byte_end":14207773,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207778,"byte_end":14207846,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207851,"byte_end":14207854,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207859,"byte_end":14207886,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207891,"byte_end":14207935,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207940,"byte_end":14207983,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14207988,"byte_end":14207995,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14208000,"byte_end":14208007,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14208012,"byte_end":14208015,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14208020,"byte_end":14208067,"line_start":406,"line_end":406,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14208072,"byte_end":14208107,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14208112,"byte_end":14208145,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14208150,"byte_end":14208173,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14208178,"byte_end":14208191,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9685},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210286,"byte_end":14210292,"line_start":474,"line_end":474,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209432,"byte_end":14209490,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209495,"byte_end":14209498,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209503,"byte_end":14209576,"line_start":448,"line_end":448,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209581,"byte_end":14209654,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209659,"byte_end":14209676,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209681,"byte_end":14209684,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209689,"byte_end":14209701,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209706,"byte_end":14209709,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209714,"byte_end":14209777,"line_start":454,"line_end":454,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209782,"byte_end":14209785,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209790,"byte_end":14209804,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209809,"byte_end":14209812,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209817,"byte_end":14209832,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209837,"byte_end":14209840,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209845,"byte_end":14209856,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209861,"byte_end":14209893,"line_start":461,"line_end":461,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209898,"byte_end":14209926,"line_start":462,"line_end":462,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209931,"byte_end":14209934,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209939,"byte_end":14209959,"line_start":464,"line_end":464,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209964,"byte_end":14209987,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14209992,"byte_end":14210040,"line_start":466,"line_end":466,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210045,"byte_end":14210113,"line_start":467,"line_end":467,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210118,"byte_end":14210121,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210126,"byte_end":14210153,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210158,"byte_end":14210202,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210207,"byte_end":14210250,"line_start":471,"line_end":471,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210255,"byte_end":14210262,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210267,"byte_end":14210274,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9686},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211700,"byte_end":14211708,"line_start":518,"line_end":518,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210586,"byte_end":14210659,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210664,"byte_end":14210667,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210672,"byte_end":14210747,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210752,"byte_end":14210769,"line_start":488,"line_end":488,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210774,"byte_end":14210777,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210782,"byte_end":14210857,"line_start":490,"line_end":490,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210862,"byte_end":14210938,"line_start":491,"line_end":491,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210943,"byte_end":14210958,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210963,"byte_end":14210966,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210971,"byte_end":14210983,"line_start":494,"line_end":494,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210988,"byte_end":14210991,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14210996,"byte_end":14211070,"line_start":496,"line_end":496,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211075,"byte_end":14211106,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211111,"byte_end":14211114,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211119,"byte_end":14211133,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211138,"byte_end":14211141,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211146,"byte_end":14211161,"line_start":501,"line_end":501,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211166,"byte_end":14211169,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211174,"byte_end":14211185,"line_start":503,"line_end":503,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211190,"byte_end":14211243,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211248,"byte_end":14211251,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211256,"byte_end":14211276,"line_start":506,"line_end":506,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211281,"byte_end":14211304,"line_start":507,"line_end":507,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211309,"byte_end":14211357,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211362,"byte_end":14211430,"line_start":509,"line_end":509,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211435,"byte_end":14211438,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211443,"byte_end":14211500,"line_start":511,"line_end":511,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211505,"byte_end":14211508,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211513,"byte_end":14211590,"line_start":513,"line_end":513,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211595,"byte_end":14211598,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211603,"byte_end":14211664,"line_start":515,"line_end":515,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211669,"byte_end":14211676,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14211681,"byte_end":14211688,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9689},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213576,"byte_end":14213581,"line_start":575,"line_end":575,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212426,"byte_end":14212494,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212499,"byte_end":14212513,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212518,"byte_end":14212521,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212526,"byte_end":14212601,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212606,"byte_end":14212626,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212631,"byte_end":14212634,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212639,"byte_end":14212709,"line_start":546,"line_end":546,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212714,"byte_end":14212784,"line_start":547,"line_end":547,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212789,"byte_end":14212817,"line_start":548,"line_end":548,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212822,"byte_end":14212825,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212830,"byte_end":14212842,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212847,"byte_end":14212850,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212855,"byte_end":14212930,"line_start":552,"line_end":552,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212935,"byte_end":14212990,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14212995,"byte_end":14212998,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213003,"byte_end":14213017,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213022,"byte_end":14213025,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213030,"byte_end":14213045,"line_start":557,"line_end":557,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213050,"byte_end":14213053,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213058,"byte_end":14213069,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213074,"byte_end":14213106,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213111,"byte_end":14213139,"line_start":561,"line_end":561,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213144,"byte_end":14213147,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213152,"byte_end":14213172,"line_start":563,"line_end":563,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213177,"byte_end":14213200,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213205,"byte_end":14213253,"line_start":565,"line_end":565,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213258,"byte_end":14213326,"line_start":566,"line_end":566,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213331,"byte_end":14213334,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213339,"byte_end":14213396,"line_start":568,"line_end":568,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213401,"byte_end":14213404,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213409,"byte_end":14213466,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213471,"byte_end":14213474,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213479,"byte_end":14213540,"line_start":572,"line_end":572,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213545,"byte_end":14213552,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213557,"byte_end":14213564,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9690},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214447,"byte_end":14214452,"line_start":606,"line_end":606,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213690,"byte_end":14213731,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213736,"byte_end":14213739,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll_expired`] will return `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213744,"byte_end":14213818,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213823,"byte_end":14213826,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213831,"byte_end":14213897,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213902,"byte_end":14213905,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213910,"byte_end":14213957,"line_start":585,"line_end":585,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213962,"byte_end":14213965,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213970,"byte_end":14213984,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213989,"byte_end":14213992,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14213997,"byte_end":14214008,"line_start":589,"line_end":589,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214013,"byte_end":14214045,"line_start":590,"line_end":590,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214050,"byte_end":14214078,"line_start":591,"line_end":591,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214083,"byte_end":14214086,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214091,"byte_end":14214111,"line_start":593,"line_end":593,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214116,"byte_end":14214139,"line_start":594,"line_end":594,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214144,"byte_end":14214192,"line_start":595,"line_end":595,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214197,"byte_end":14214200,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214205,"byte_end":14214263,"line_start":597,"line_end":597,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214268,"byte_end":14214271,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214276,"byte_end":14214317,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214322,"byte_end":14214325,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214330,"byte_end":14214358,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214363,"byte_end":14214366,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214371,"byte_end":14214411,"line_start":603,"line_end":603,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214416,"byte_end":14214423,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214428,"byte_end":14214435,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9691},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214924,"byte_end":14214932,"line_start":623,"line_end":623,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214607,"byte_end":14214682,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214687,"byte_end":14214690,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214695,"byte_end":14214709,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214714,"byte_end":14214717,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214722,"byte_end":14214733,"line_start":617,"line_end":617,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214738,"byte_end":14214770,"line_start":618,"line_end":618,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214775,"byte_end":14214778,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214783,"byte_end":14214852,"line_start":620,"line_end":620,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214857,"byte_end":14214900,"line_start":621,"line_end":621,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214905,"byte_end":14214912,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9692},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215500,"byte_end":14215503,"line_start":643,"line_end":643,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14214991,"byte_end":14215049,"line_start":627,"line_end":627,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215054,"byte_end":14215057,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215062,"byte_end":14215076,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215081,"byte_end":14215084,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215089,"byte_end":14215100,"line_start":631,"line_end":631,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215105,"byte_end":14215137,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215142,"byte_end":14215170,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215175,"byte_end":14215178,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215183,"byte_end":14215203,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215208,"byte_end":14215231,"line_start":636,"line_end":636,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215236,"byte_end":14215313,"line_start":637,"line_end":637,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215318,"byte_end":14215359,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215364,"byte_end":14215418,"line_start":639,"line_end":639,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215423,"byte_end":14215464,"line_start":640,"line_end":640,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215469,"byte_end":14215476,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215481,"byte_end":14215488,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9693},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216712,"byte_end":14216719,"line_start":680,"line_end":680,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215557,"byte_end":14215628,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215633,"byte_end":14215656,"line_start":648,"line_end":648,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215661,"byte_end":14215664,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215669,"byte_end":14215744,"line_start":650,"line_end":650,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215749,"byte_end":14215825,"line_start":651,"line_end":651,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215830,"byte_end":14215906,"line_start":652,"line_end":652,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215911,"byte_end":14215987,"line_start":653,"line_end":653,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14215992,"byte_end":14216015,"line_start":654,"line_end":654,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216020,"byte_end":14216023,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216028,"byte_end":14216100,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216105,"byte_end":14216138,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216143,"byte_end":14216146,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216151,"byte_end":14216163,"line_start":659,"line_end":659,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216168,"byte_end":14216171,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216176,"byte_end":14216248,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216253,"byte_end":14216275,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216280,"byte_end":14216283,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216288,"byte_end":14216302,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216307,"byte_end":14216310,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216315,"byte_end":14216322,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216327,"byte_end":14216359,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216364,"byte_end":14216392,"line_start":668,"line_end":668,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216397,"byte_end":14216400,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216405,"byte_end":14216425,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216430,"byte_end":14216453,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216458,"byte_end":14216506,"line_start":672,"line_end":672,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216511,"byte_end":14216514,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216519,"byte_end":14216580,"line_start":674,"line_end":674,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216585,"byte_end":14216617,"line_start":675,"line_end":675,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216622,"byte_end":14216625,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216630,"byte_end":14216676,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216681,"byte_end":14216688,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216693,"byte_end":14216700,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9694},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217435,"byte_end":14217443,"line_start":704,"line_end":704,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216802,"byte_end":14216856,"line_start":684,"line_end":684,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216861,"byte_end":14216864,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216869,"byte_end":14216943,"line_start":686,"line_end":686,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14216948,"byte_end":14217004,"line_start":687,"line_end":687,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217009,"byte_end":14217012,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217017,"byte_end":14217031,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217036,"byte_end":14217039,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217044,"byte_end":14217051,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217056,"byte_end":14217088,"line_start":692,"line_end":692,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217093,"byte_end":14217121,"line_start":693,"line_end":693,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217126,"byte_end":14217129,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217134,"byte_end":14217154,"line_start":695,"line_end":695,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217159,"byte_end":14217182,"line_start":696,"line_end":696,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217187,"byte_end":14217235,"line_start":697,"line_end":697,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217240,"byte_end":14217280,"line_start":698,"line_end":698,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217285,"byte_end":14217288,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217293,"byte_end":14217353,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217358,"byte_end":14217399,"line_start":701,"line_end":701,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217404,"byte_end":14217411,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14217416,"byte_end":14217423,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9726},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14222106,"byte_end":14222113,"line_start":877,"line_end":877,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14222051,"byte_end":14222094,"line_start":876,"line_end":876,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":9727},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14222222,"byte_end":14222229,"line_start":882,"line_end":882,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14222159,"byte_end":14222210,"line_start":881,"line_end":881,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":9728},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14222347,"byte_end":14222357,"line_start":887,"line_end":887,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14222287,"byte_end":14222335,"line_start":886,"line_end":886,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":9729},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14222468,"byte_end":14222476,"line_start":892,"line_end":892,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14222400,"byte_end":14222456,"line_start":891,"line_end":891,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":9757},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223054,"byte_end":14223065,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14222680,"byte_end":14222718,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14222719,"byte_end":14222722,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14222723,"byte_end":14222798,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14222799,"byte_end":14222876,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14222877,"byte_end":14222912,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14222913,"byte_end":14222916,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14222917,"byte_end":14222935,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14222936,"byte_end":14222939,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14222940,"byte_end":14223016,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223017,"byte_end":14223046,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":9758},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224131,"byte_end":14224140,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223204,"byte_end":14223243,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223244,"byte_end":14223247,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223248,"byte_end":14223323,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223324,"byte_end":14223359,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223360,"byte_end":14223363,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223364,"byte_end":14223439,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223440,"byte_end":14223517,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223518,"byte_end":14223553,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223554,"byte_end":14223557,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223558,"byte_end":14223621,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223622,"byte_end":14223625,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223626,"byte_end":14223644,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223645,"byte_end":14223648,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223649,"byte_end":14223725,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223726,"byte_end":14223755,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223756,"byte_end":14223759,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223760,"byte_end":14223774,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223775,"byte_end":14223778,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223779,"byte_end":14223826,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223827,"byte_end":14223830,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223831,"byte_end":14223838,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223839,"byte_end":14223882,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223883,"byte_end":14223886,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223887,"byte_end":14223905,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223906,"byte_end":14223927,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223928,"byte_end":14223980,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14223981,"byte_end":14224021,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224022,"byte_end":14224027,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224028,"byte_end":14224035,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224036,"byte_end":14224039,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224040,"byte_end":14224081,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":10425},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224400,"byte_end":14224405,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":10426}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224218,"byte_end":14224273,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224274,"byte_end":14224303,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224321,"byte_end":14224388,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9761},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224845,"byte_end":14224853,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224775,"byte_end":14224833,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":9762},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14225057,"byte_end":14225067,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224922,"byte_end":14224967,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224972,"byte_end":14224975,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224980,"byte_end":14225045,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":9763},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14225456,"byte_end":14225461,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14225135,"byte_end":14225185,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14225190,"byte_end":14225193,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14225198,"byte_end":14225272,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14225277,"byte_end":14225344,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14225349,"byte_end":14225352,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14225357,"byte_end":14225425,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14225430,"byte_end":14225444,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":10484},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260024,"byte_end":14260029,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14258911,"byte_end":14258962,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14258963,"byte_end":14258966,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14258967,"byte_end":14259028,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259029,"byte_end":14259032,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259033,"byte_end":14259107,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259108,"byte_end":14259187,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259188,"byte_end":14259263,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259264,"byte_end":14259339,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259340,"byte_end":14259368,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259369,"byte_end":14259372,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259373,"byte_end":14259450,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259451,"byte_end":14259529,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259530,"byte_end":14259606,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259607,"byte_end":14259687,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259688,"byte_end":14259765,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259766,"byte_end":14259847,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259848,"byte_end":14259930,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259931,"byte_end":14259934,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14259935,"byte_end":14259995,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":10094},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260230,"byte_end":14260238,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260167,"byte_end":14260218,"line_start":36,"line_end":36,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":10095},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260370,"byte_end":14260381,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260287,"byte_end":14260358,"line_start":41,"line_end":41,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":10096},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260569,"byte_end":14260580,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260503,"byte_end":14260557,"line_start":49,"line_end":49,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":10097},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260717,"byte_end":14260731,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260631,"byte_end":14260705,"line_start":54,"line_end":54,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":10098},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260922,"byte_end":14260929,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260855,"byte_end":14260910,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":10099},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14261065,"byte_end":14261075,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260977,"byte_end":14261053,"line_start":67,"line_end":67,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":10504},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262289,"byte_end":14262296,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":10505}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262093,"byte_end":14262153,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262154,"byte_end":14262216,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10120},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262543,"byte_end":14262546,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262350,"byte_end":14262396,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262401,"byte_end":14262404,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262409,"byte_end":14262423,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262428,"byte_end":14262431,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262436,"byte_end":14262443,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262448,"byte_end":14262477,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262482,"byte_end":14262485,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262490,"byte_end":14262519,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262524,"byte_end":14262531,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10121},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262672,"byte_end":14262680,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262596,"byte_end":14262660,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":10122},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262816,"byte_end":14262824,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262754,"byte_end":14262804,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":10123},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263068,"byte_end":14263082,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262883,"byte_end":14262955,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262960,"byte_end":14262963,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262968,"byte_end":14262980,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262985,"byte_end":14262988,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262993,"byte_end":14263056,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":10124},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263773,"byte_end":14263795,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263178,"byte_end":14263253,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263258,"byte_end":14263306,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263311,"byte_end":14263314,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263319,"byte_end":14263333,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263338,"byte_end":14263341,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263346,"byte_end":14263353,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263358,"byte_end":14263410,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263415,"byte_end":14263418,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263423,"byte_end":14263441,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263446,"byte_end":14263467,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263472,"byte_end":14263505,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263510,"byte_end":14263555,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263560,"byte_end":14263597,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263602,"byte_end":14263664,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263669,"byte_end":14263739,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263744,"byte_end":14263749,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263754,"byte_end":14263761,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10125},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264518,"byte_end":14264543,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263907,"byte_end":14263982,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14263987,"byte_end":14264046,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264051,"byte_end":14264054,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264059,"byte_end":14264073,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264078,"byte_end":14264081,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264086,"byte_end":14264093,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264098,"byte_end":14264150,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264155,"byte_end":14264158,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264163,"byte_end":14264181,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264186,"byte_end":14264207,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264212,"byte_end":14264245,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264250,"byte_end":14264295,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264300,"byte_end":14264337,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264342,"byte_end":14264407,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264412,"byte_end":14264484,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264489,"byte_end":14264494,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264499,"byte_end":14264506,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10126},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265314,"byte_end":14265321,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264650,"byte_end":14264720,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264725,"byte_end":14264728,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264733,"byte_end":14264745,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264750,"byte_end":14264753,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264758,"byte_end":14264826,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264831,"byte_end":14264897,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264902,"byte_end":14264929,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264934,"byte_end":14264937,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264942,"byte_end":14264956,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264961,"byte_end":14264964,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264969,"byte_end":14264976,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14264981,"byte_end":14265033,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265038,"byte_end":14265041,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265046,"byte_end":14265064,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265069,"byte_end":14265090,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265095,"byte_end":14265132,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265137,"byte_end":14265185,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265190,"byte_end":14265226,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265231,"byte_end":14265280,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265285,"byte_end":14265290,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265295,"byte_end":14265302,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10127},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265602,"byte_end":14265613,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265385,"byte_end":14265460,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265465,"byte_end":14265536,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265541,"byte_end":14265590,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":10128},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265952,"byte_end":14265963,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265735,"byte_end":14265810,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265815,"byte_end":14265886,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14265891,"byte_end":14265940,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":10186},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269427,"byte_end":14269435,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14267685,"byte_end":14267762,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14267763,"byte_end":14267794,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14267795,"byte_end":14267798,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14267799,"byte_end":14267879,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14267880,"byte_end":14267919,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14267920,"byte_end":14267923,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14267924,"byte_end":14267997,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14267998,"byte_end":14268001,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268002,"byte_end":14268014,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268015,"byte_end":14268018,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268019,"byte_end":14268064,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268065,"byte_end":14268068,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268069,"byte_end":14268083,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268084,"byte_end":14268087,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268088,"byte_end":14268095,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268096,"byte_end":14268134,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268135,"byte_end":14268138,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268139,"byte_end":14268157,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268158,"byte_end":14268179,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268180,"byte_end":14268249,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268250,"byte_end":14268253,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268254,"byte_end":14268284,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268285,"byte_end":14268315,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268316,"byte_end":14268346,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268347,"byte_end":14268350,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268351,"byte_end":14268394,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268395,"byte_end":14268400,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268401,"byte_end":14268408,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268409,"byte_end":14268412,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268413,"byte_end":14268487,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268488,"byte_end":14268491,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268492,"byte_end":14268569,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268570,"byte_end":14268645,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268646,"byte_end":14268722,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268723,"byte_end":14268784,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268785,"byte_end":14268788,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268789,"byte_end":14268867,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268868,"byte_end":14268938,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268939,"byte_end":14268951,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268952,"byte_end":14268955,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268956,"byte_end":14268963,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268964,"byte_end":14268984,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268985,"byte_end":14268988,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14268989,"byte_end":14269030,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269031,"byte_end":14269057,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269058,"byte_end":14269117,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269118,"byte_end":14269123,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269124,"byte_end":14269127,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269128,"byte_end":14269146,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269147,"byte_end":14269168,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269169,"byte_end":14269241,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269242,"byte_end":14269266,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269267,"byte_end":14269301,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269302,"byte_end":14269347,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269348,"byte_end":14269357,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269358,"byte_end":14269363,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269364,"byte_end":14269371,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269372,"byte_end":14269375,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269376,"byte_end":14269419,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":10187},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270324,"byte_end":14270335,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269585,"byte_end":14269658,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269659,"byte_end":14269696,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269697,"byte_end":14269700,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269701,"byte_end":14269781,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269782,"byte_end":14269821,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269822,"byte_end":14269825,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269826,"byte_end":14269838,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269839,"byte_end":14269842,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269843,"byte_end":14269888,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269889,"byte_end":14269892,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269893,"byte_end":14269907,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269908,"byte_end":14269911,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269912,"byte_end":14269919,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269920,"byte_end":14269974,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269975,"byte_end":14269978,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269979,"byte_end":14269997,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14269998,"byte_end":14270019,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270020,"byte_end":14270083,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270084,"byte_end":14270157,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270158,"byte_end":14270161,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270162,"byte_end":14270192,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270193,"byte_end":14270223,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270224,"byte_end":14270254,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270255,"byte_end":14270258,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270259,"byte_end":14270302,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270303,"byte_end":14270308,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270309,"byte_end":14270316,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10523},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270784,"byte_end":14270792,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":10524},{"krate":0,"index":10525}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270533,"byte_end":14270612,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270613,"byte_end":14270616,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type only implements the [`Stream`] trait if the \"stream\" feature is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270617,"byte_end":14270694,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270695,"byte_end":14270707,"line_start":112,"line_end":112,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270708,"byte_end":14270711,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait@crate::stream::Stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270712,"byte_end":14270755,"line_start":114,"line_end":114,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":10189},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271037,"byte_end":14271046,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10190},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14272138,"byte_end":14272142,"line_start":163,"line_end":163,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271533,"byte_end":14271602,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271607,"byte_end":14271610,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271615,"byte_end":14271629,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271634,"byte_end":14271637,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271642,"byte_end":14271649,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271654,"byte_end":14271674,"line_start":147,"line_end":147,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271679,"byte_end":14271682,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271687,"byte_end":14271715,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271720,"byte_end":14271723,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271728,"byte_end":14271746,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271751,"byte_end":14271772,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271777,"byte_end":14271846,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271851,"byte_end":14271854,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271859,"byte_end":14271889,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271894,"byte_end":14271924,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271929,"byte_end":14271959,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271964,"byte_end":14271967,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14271972,"byte_end":14272015,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14272020,"byte_end":14272025,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14272030,"byte_end":14272037,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14272042,"byte_end":14272082,"line_start":162,"line_end":162,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":10240},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273824,"byte_end":14273831,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14272809,"byte_end":14272886,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14272887,"byte_end":14272890,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14272891,"byte_end":14272970,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14272971,"byte_end":14273043,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273044,"byte_end":14273057,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273058,"byte_end":14273061,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273062,"byte_end":14273079,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273080,"byte_end":14273083,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273084,"byte_end":14273162,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273163,"byte_end":14273193,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273194,"byte_end":14273197,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273198,"byte_end":14273278,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273279,"byte_end":14273306,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273307,"byte_end":14273310,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273311,"byte_end":14273325,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273326,"byte_end":14273329,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273330,"byte_end":14273390,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273391,"byte_end":14273394,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273395,"byte_end":14273406,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273407,"byte_end":14273436,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273437,"byte_end":14273466,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273467,"byte_end":14273470,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273471,"byte_end":14273499,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273500,"byte_end":14273503,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273504,"byte_end":14273526,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273527,"byte_end":14273565,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273566,"byte_end":14273593,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273594,"byte_end":14273597,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273598,"byte_end":14273671,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273672,"byte_end":14273738,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273739,"byte_end":14273794,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273795,"byte_end":14273800,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273801,"byte_end":14273808,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14273809,"byte_end":14273816,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":10242},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275053,"byte_end":14275063,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274022,"byte_end":14274094,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274095,"byte_end":14274098,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274099,"byte_end":14274176,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274177,"byte_end":14274232,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274233,"byte_end":14274236,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274237,"byte_end":14274254,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274255,"byte_end":14274258,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274259,"byte_end":14274337,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274338,"byte_end":14274368,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274369,"byte_end":14274372,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274373,"byte_end":14274453,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274454,"byte_end":14274481,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274482,"byte_end":14274485,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274486,"byte_end":14274500,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274501,"byte_end":14274504,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274505,"byte_end":14274565,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274566,"byte_end":14274569,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274570,"byte_end":14274581,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274582,"byte_end":14274625,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274626,"byte_end":14274655,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274656,"byte_end":14274659,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274660,"byte_end":14274688,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274689,"byte_end":14274692,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274693,"byte_end":14274715,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274716,"byte_end":14274754,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274755,"byte_end":14274782,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274783,"byte_end":14274786,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274787,"byte_end":14274865,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274866,"byte_end":14274880,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274881,"byte_end":14274967,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14274968,"byte_end":14275023,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275024,"byte_end":14275029,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275030,"byte_end":14275037,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275038,"byte_end":14275045,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11085},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275438,"byte_end":14275445,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":11087},{"krate":0,"index":11088}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10528},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275602,"byte_end":14275609,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275530,"byte_end":14275562,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":10249},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275960,"byte_end":14275967,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275887,"byte_end":14275948,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":10250},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14276095,"byte_end":14276102,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14276014,"byte_end":14276083,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":10251},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14276231,"byte_end":14276241,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14276161,"byte_end":14276219,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":10570},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294374,"byte_end":14294382,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"pub fn throttle<T>(Duration, T) -> Throttle<T> where T: Stream","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14293800,"byte_end":14293859,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14293860,"byte_end":14293929,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14293930,"byte_end":14293933,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14293934,"byte_end":14293947,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14293948,"byte_end":14293951,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14293952,"byte_end":14293982,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14293983,"byte_end":14294001,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294002,"byte_end":14294030,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294031,"byte_end":14294064,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294065,"byte_end":14294095,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294096,"byte_end":14294099,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294100,"byte_end":14294122,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294123,"byte_end":14294214,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294215,"byte_end":14294218,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294219,"byte_end":14294229,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294230,"byte_end":14294292,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294293,"byte_end":14294344,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294345,"byte_end":14294350,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294351,"byte_end":14294358,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294359,"byte_end":14294366,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11037},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14294877,"byte_end":14294885,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":11039},{"krate":0,"index":11040},{"krate":0,"index":11041},{"krate":0,"index":11042}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":13155976,"byte_end":13155985,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":10574},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295352,"byte_end":14295359,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295245,"byte_end":14295318,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295323,"byte_end":14295340,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":10575},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295668,"byte_end":14295675,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295407,"byte_end":14295485,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295490,"byte_end":14295510,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295515,"byte_end":14295518,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295523,"byte_end":14295603,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295608,"byte_end":14295656,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":10576},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295970,"byte_end":14295980,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295735,"byte_end":14295797,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295802,"byte_end":14295805,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295810,"byte_end":14295887,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295892,"byte_end":14295958,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":10316},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":14292933,"byte_end":14292938,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":10315},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":14292883,"byte_end":14292923,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":10317},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":14292996,"byte_end":14293004,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":10315},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":14292969,"byte_end":14292986,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":10318},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":14293093,"byte_end":14293098,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":10315},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":14293011,"byte_end":14293083,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182194,"byte_end":182200,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":1166},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182103,"byte_end":182132,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182137,"byte_end":182140,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182145,"byte_end":182184,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182230,"byte_end":182236,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":1166},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182207,"byte_end":182220,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":13349741,"byte_end":13349752,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":13350511,"byte_end":13350522,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":13350729,"byte_end":13350740,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":13353362,"byte_end":13353373,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13339061,"byte_end":13339067,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13341928,"byte_end":13341934,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13342333,"byte_end":13342339,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13342475,"byte_end":13342481,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13343642,"byte_end":13343648,"line_start":228,"line_end":228,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13343726,"byte_end":13343732,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13343867,"byte_end":13343872,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13345416,"byte_end":13345425,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13359931,"byte_end":13359942,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13367733,"byte_end":13367744,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13368237,"byte_end":13368248,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13369329,"byte_end":13369340,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13369513,"byte_end":13369524,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371672,"byte_end":13371684,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1670},{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13382554,"byte_end":13382566,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13382591,"byte_end":13382603,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13382622,"byte_end":13382634,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384416,"byte_end":13384424,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1775},{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13385341,"byte_end":13385350,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13385600,"byte_end":13385608,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13386163,"byte_end":13386172,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13387121,"byte_end":13387126,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13387519,"byte_end":13387524,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13387777,"byte_end":13387782,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13387905,"byte_end":13387913,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13387950,"byte_end":13387959,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13387996,"byte_end":13388004,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13388041,"byte_end":13388050,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13388093,"byte_end":13388101,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13388269,"byte_end":13388278,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\seek.rs","byte_start":13388968,"byte_end":13388972,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":13401067,"byte_end":13401068,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13440500,"byte_end":13440501,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13442259,"byte_end":13442260,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13477607,"byte_end":13477608,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13479024,"byte_end":13479033,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13481212,"byte_end":13481221,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2274},{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13482197,"byte_end":13482206,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13483037,"byte_end":13483046,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13483762,"byte_end":13483771,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13485278,"byte_end":13485287,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13487124,"byte_end":13487133,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2340}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13487275,"byte_end":13487284,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2343}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13487996,"byte_end":13488005,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13488535,"byte_end":13488544,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2351},{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13489023,"byte_end":13489032,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2355},{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13490986,"byte_end":13490995,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13493273,"byte_end":13493282,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13494172,"byte_end":13494181,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2417},{"krate":0,"index":2418}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13494663,"byte_end":13494672,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2421},{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13494959,"byte_end":13494968,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496137,"byte_end":13496142,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13497282,"byte_end":13497287,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2469}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13497566,"byte_end":13497571,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2473},{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13498394,"byte_end":13498399,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2478},{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\copy.rs","byte_start":13501442,"byte_end":13501446,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2507},{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":13504556,"byte_end":13504561,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2541},{"krate":0,"index":2542}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":13504890,"byte_end":13504895,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2544},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":13505128,"byte_end":13505133,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\flush.rs","byte_start":13505954,"byte_end":13505959,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2579},{"krate":0,"index":2580}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507139,"byte_end":13507144,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13508396,"byte_end":13508401,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13509148,"byte_end":13509153,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2626},{"krate":0,"index":2627}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13512313,"byte_end":13512325,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13512874,"byte_end":13512886,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13513611,"byte_end":13513623,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2674}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13513783,"byte_end":13513787,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2677}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13514193,"byte_end":13514197,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13515023,"byte_end":13515027,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read.rs","byte_start":13516955,"byte_end":13516959,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_buf.rs","byte_start":13518020,"byte_end":13518027,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2751},{"krate":0,"index":2752}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_exact.rs","byte_start":13519392,"byte_end":13519401,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2782},{"krate":0,"index":2783}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_line.rs","byte_start":13527679,"byte_end":13527687,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2856},{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_end.rs","byte_start":13533607,"byte_end":13533616,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_string.rs","byte_start":13536355,"byte_end":13536367,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2942},{"krate":0,"index":2943}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_until.rs","byte_start":13538807,"byte_end":13538816,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2974},{"krate":0,"index":2975}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\repeat.rs","byte_start":13540650,"byte_end":13540656,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\shutdown.rs","byte_start":13541778,"byte_end":13541786,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3027},{"krate":0,"index":3028}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\sink.rs","byte_start":13543619,"byte_end":13543623,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\sink.rs","byte_start":13544133,"byte_end":13544137,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545102,"byte_end":13545107,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545846,"byte_end":13545851,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3101}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13546630,"byte_end":13546635,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3104},{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13560174,"byte_end":13560186,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3708},{"krate":0,"index":3709}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13560691,"byte_end":13560703,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13562242,"byte_end":13562254,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3720},{"krate":0,"index":3721}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565783,"byte_end":13565795,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3761},{"krate":0,"index":3762}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13547803,"byte_end":13547807,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13549435,"byte_end":13549439,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3152},{"krate":0,"index":3153}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13550096,"byte_end":13550100,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3156},{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write.rs","byte_start":13551657,"byte_end":13551662,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3186},{"krate":0,"index":3187}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_all.rs","byte_start":13552455,"byte_end":13552463,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3216},{"krate":0,"index":3217}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_buf.rs","byte_start":13553971,"byte_end":13553979,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3248},{"krate":0,"index":3249}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569478,"byte_end":13569489,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3997},{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4014}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13580184,"byte_end":13580195,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4016},{"krate":0,"index":4017}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13580510,"byte_end":13580521,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4019},{"krate":0,"index":4020}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13580961,"byte_end":13580972,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4022},{"krate":0,"index":4023}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13581298,"byte_end":13581309,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4025}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13582368,"byte_end":13582376,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4052},{"krate":0,"index":4053}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13583014,"byte_end":13583022,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4055},{"krate":0,"index":4056}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585185,"byte_end":13585193,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4098},{"krate":0,"index":4099}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587648,"byte_end":13587656,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4105}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587976,"byte_end":13587985,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4107},{"krate":0,"index":4108},{"krate":0,"index":4110},{"krate":0,"index":4111}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13588798,"byte_end":13588806,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4113}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13588900,"byte_end":13588909,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4115}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13591997,"byte_end":13592009,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4172}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592212,"byte_end":13592224,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592234,"byte_end":13592247,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4175},{"krate":0,"index":4176},{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595081,"byte_end":13595094,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4182},{"krate":0,"index":4183}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595399,"byte_end":13595413,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4185},{"krate":0,"index":4186}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13596096,"byte_end":13596110,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4188}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13596270,"byte_end":13596284,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4193},{"krate":0,"index":4194}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13597223,"byte_end":13597236,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4196}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13597332,"byte_end":13597346,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4198}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13599481,"byte_end":13599490,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4295},{"krate":0,"index":4300},{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4318},{"krate":0,"index":4319},{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4328},{"krate":0,"index":4329},{"krate":0,"index":4330},{"krate":0,"index":4331},{"krate":0,"index":4333},{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4336}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13624547,"byte_end":13624556,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4346},{"krate":0,"index":4347}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13624992,"byte_end":13625001,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4349},{"krate":0,"index":4350}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13625354,"byte_end":13625363,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4352},{"krate":0,"index":4353}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13625677,"byte_end":13625686,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4355},{"krate":0,"index":4356},{"krate":0,"index":4358},{"krate":0,"index":4359}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13626430,"byte_end":13626439,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4361}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\either.rs","byte_start":13627266,"byte_end":13627272,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4444},{"krate":0,"index":4445},{"krate":0,"index":4446},{"krate":0,"index":4447},{"krate":0,"index":4448},{"krate":0,"index":4449}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\either.rs","byte_start":13628229,"byte_end":13628235,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4453}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\either.rs","byte_start":13628449,"byte_end":13628455,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4457}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4501},{"krate":0,"index":4502},{"krate":0,"index":4504}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4515},{"krate":0,"index":4517}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4520}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4522},{"krate":0,"index":4523}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13630581,"byte_end":13630595,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4646}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13634134,"byte_end":13634139,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4664}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13634826,"byte_end":13634840,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4668}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13635727,"byte_end":13635741,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4672}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13635907,"byte_end":13635914,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4674},{"krate":0,"index":4676}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13636372,"byte_end":13636379,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4678}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13636547,"byte_end":13636550,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4680},{"krate":0,"index":4682},{"krate":0,"index":4687}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13637648,"byte_end":13637654,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4690},{"krate":0,"index":4691}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":13645337,"byte_end":13645343,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":13645368,"byte_end":13645374,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":13645733,"byte_end":13645737,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4779}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":13646515,"byte_end":13646519,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4783},{"krate":0,"index":4785},{"krate":0,"index":4787},{"krate":0,"index":4789},{"krate":0,"index":4791},{"krate":0,"index":4793},{"krate":0,"index":4798},{"krate":0,"index":4800},{"krate":0,"index":4802}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":13652270,"byte_end":13652276,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5312}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13652901,"byte_end":13652910,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835},{"krate":0,"index":4836},{"krate":0,"index":4837},{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4840}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655989,"byte_end":13655998,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4842}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13656241,"byte_end":13656250,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4844}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13656527,"byte_end":13656536,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13656570,"byte_end":13656575,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4847}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\harness.rs","byte_start":13657253,"byte_end":13657260,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4907},{"krate":0,"index":4908},{"krate":0,"index":4909},{"krate":0,"index":4910}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\harness.rs","byte_start":13657737,"byte_end":13657744,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4914},{"krate":0,"index":4925},{"krate":0,"index":4929},{"krate":0,"index":4932},{"krate":0,"index":4935},{"krate":0,"index":4936},{"krate":0,"index":4937},{"krate":0,"index":4938},{"krate":0,"index":4939},{"krate":0,"index":4940},{"krate":0,"index":4942},{"krate":0,"index":4943},{"krate":0,"index":4944},{"krate":0,"index":4946}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\harness.rs","byte_start":13659915,"byte_end":13659920,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4924}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13672224,"byte_end":13672234,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13672271,"byte_end":13672281,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13672297,"byte_end":13672307,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4979}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13672483,"byte_end":13672493,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13672520,"byte_end":13672530,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4984},{"krate":0,"index":4985}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13673756,"byte_end":13673766,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4988}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13674032,"byte_end":13674042,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4991}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\raw.rs","byte_start":13675289,"byte_end":13675296,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5037},{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5042},{"krate":0,"index":5043},{"krate":0,"index":5044},{"krate":0,"index":5045},{"krate":0,"index":5046}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\raw.rs","byte_start":13676827,"byte_end":13676834,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5048}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\raw.rs","byte_start":13676924,"byte_end":13676931,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":13679613,"byte_end":13679618,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5104},{"krate":0,"index":5105},{"krate":0,"index":5106},{"krate":0,"index":5108},{"krate":0,"index":5110},{"krate":0,"index":5112},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5117},{"krate":0,"index":5123},{"krate":0,"index":5125},{"krate":0,"index":5127},{"krate":0,"index":5129},{"krate":0,"index":5136},{"krate":0,"index":5137}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":13688474,"byte_end":13688482,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5140},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5143},{"krate":0,"index":5144},{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":5147},{"krate":0,"index":5148},{"krate":0,"index":5149},{"krate":0,"index":5150},{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5153},{"krate":0,"index":5154},{"krate":0,"index":5155},{"krate":0,"index":5156},{"krate":0,"index":5157},{"krate":0,"index":5158}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":13690359,"byte_end":13690364,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5160}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":13690523,"byte_end":13690531,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5162}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\waker.rs","byte_start":13692349,"byte_end":13692357,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5212},{"krate":0,"index":5213}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\stack.rs","byte_start":13694105,"byte_end":13694118,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5365},{"krate":0,"index":5366},{"krate":0,"index":5368}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\stack.rs","byte_start":13695276,"byte_end":13695280,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5377},{"krate":0,"index":5378}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\stack.rs","byte_start":13695680,"byte_end":13695684,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5382}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13638667,"byte_end":13638671,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13638702,"byte_end":13638706,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13638843,"byte_end":13638851,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13638892,"byte_end":13638900,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13640824,"byte_end":13640828,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5276},{"krate":0,"index":5277}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13641125,"byte_end":13641133,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5391},{"krate":0,"index":5392}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13641384,"byte_end":13641388,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5395}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13641581,"byte_end":13641589,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5398}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13641720,"byte_end":13641724,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5280}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13641893,"byte_end":13641901,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5283},{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13642187,"byte_end":13642191,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5287}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13642431,"byte_end":13642435,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5290}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13642587,"byte_end":13642595,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5293}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13642811,"byte_end":13642815,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5296},{"krate":0,"index":5297},{"krate":0,"index":5298},{"krate":0,"index":5299},{"krate":0,"index":5300}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":13698092,"byte_end":13698104,"line_start":89,"line_end":89,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5479},{"krate":0,"index":5480},{"krate":0,"index":5481}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":13699990,"byte_end":13700002,"line_start":146,"line_end":146,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5483}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":13700088,"byte_end":13700100,"line_start":152,"line_end":152,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5485}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":13700261,"byte_end":13700268,"line_start":160,"line_end":160,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5487},{"krate":0,"index":5488}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":13702711,"byte_end":13702716,"line_start":238,"line_end":238,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5492}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":13705465,"byte_end":13705472,"line_start":325,"line_end":325,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5494}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\schedule.rs","byte_start":13705975,"byte_end":13705987,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5519},{"krate":0,"index":5520},{"krate":0,"index":5521}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\shutdown.rs","byte_start":13706860,"byte_end":13706868,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5534}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\task.rs","byte_start":13708616,"byte_end":13708628,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5557}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\task.rs","byte_start":13708854,"byte_end":13708866,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\task.rs","byte_start":13708896,"byte_end":13708908,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5563},{"krate":0,"index":5564}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5603}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5605}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5607},{"krate":0,"index":5608}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":141852,"byte_end":141859,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5617},{"krate":0,"index":5618}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":146358,"byte_end":146363,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5654}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":149349,"byte_end":149354,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5677}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154851,"byte_end":154857,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5719},{"krate":0,"index":5721}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":160647,"byte_end":160653,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5725}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164217,"byte_end":164232,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164380,"byte_end":164395,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164553,"byte_end":164568,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":13710879,"byte_end":13710885,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5781}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":13711354,"byte_end":13711360,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5783}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":13711676,"byte_end":13711682,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5785},{"krate":0,"index":5786},{"krate":0,"index":5787},{"krate":0,"index":5788},{"krate":0,"index":5789},{"krate":0,"index":5791}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":13712401,"byte_end":13712409,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5793}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":13712478,"byte_end":13712483,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5795},{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5798},{"krate":0,"index":5799},{"krate":0,"index":5800},{"krate":0,"index":5801}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\shell.rs","byte_start":166857,"byte_end":166862,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\shell.rs","byte_start":167468,"byte_end":167474,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\spawner.rs","byte_start":168071,"byte_end":168078,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\spawner.rs","byte_start":168321,"byte_end":168328,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5841}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13719706,"byte_end":13719711,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13719742,"byte_end":13719747,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13719778,"byte_end":13719784,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13719815,"byte_end":13719821,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13720680,"byte_end":13720685,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5928},{"krate":0,"index":5934}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13727219,"byte_end":13727224,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":5941}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13732392,"byte_end":13732397,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5946}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13732493,"byte_end":13732498,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5949}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13732657,"byte_end":13732662,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5952}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13732850,"byte_end":13732856,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957},{"krate":0,"index":5958},{"krate":0,"index":5959},{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13736361,"byte_end":13736367,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5965}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":13740593,"byte_end":13740603,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":13740640,"byte_end":13740650,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":13740666,"byte_end":13740676,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5992},{"krate":0,"index":5993},{"krate":0,"index":5994},{"krate":0,"index":5995}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":13741463,"byte_end":13741473,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6002}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":13742279,"byte_end":13742283,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6034},{"krate":0,"index":6035},{"krate":0,"index":6036},{"krate":0,"index":6037},{"krate":0,"index":6038}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":13746156,"byte_end":13746161,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042},{"krate":0,"index":6043},{"krate":0,"index":6044},{"krate":0,"index":6045},{"krate":0,"index":6046},{"krate":0,"index":6047}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":13747639,"byte_end":13747644,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6049}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":13747817,"byte_end":13747822,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6053}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13753586,"byte_end":13753591,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6267}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13757221,"byte_end":13757227,"line_start":278,"line_end":278,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6148}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13758002,"byte_end":13758009,"line_start":309,"line_end":309,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6153},{"krate":0,"index":6154},{"krate":0,"index":6156},{"krate":0,"index":6157},{"krate":0,"index":6158}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13762275,"byte_end":13762279,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6160},{"krate":0,"index":6161},{"krate":0,"index":6164},{"krate":0,"index":6166},{"krate":0,"index":6167},{"krate":0,"index":6168},{"krate":0,"index":6169},{"krate":0,"index":6170},{"krate":0,"index":6171},{"krate":0,"index":6172},{"krate":0,"index":6173}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13767091,"byte_end":13767097,"line_start":598,"line_end":598,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6178},{"krate":0,"index":6179},{"krate":0,"index":6180}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13767537,"byte_end":13767540,"line_start":614,"line_end":614,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6182},{"krate":0,"index":6184},{"krate":0,"index":6189},{"krate":0,"index":6190}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13770111,"byte_end":13770117,"line_start":692,"line_end":692,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6192},{"krate":0,"index":6194},{"krate":0,"index":6195},{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6198},{"krate":0,"index":6199},{"krate":0,"index":6200},{"krate":0,"index":6201}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":13738419,"byte_end":13738429,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6227},{"krate":0,"index":6228},{"krate":0,"index":6229},{"krate":0,"index":6231}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":13739584,"byte_end":13739594,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6234}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":13739733,"byte_end":13739743,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6236}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":13739846,"byte_end":13739853,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6238},{"krate":0,"index":6240}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":13740274,"byte_end":13740281,"line_start":117,"line_end":117,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6242}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":172931,"byte_end":172937,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":173705,"byte_end":173711,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6312}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":174478,"byte_end":174488,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":175335,"byte_end":175351,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6331}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":175483,"byte_end":175499,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6333}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":177239,"byte_end":177245,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6338},{"krate":0,"index":6339}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":13799700,"byte_end":13799709,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6362}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":13799855,"byte_end":13799864,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":13799903,"byte_end":13799912,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6369},{"krate":0,"index":6370}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":13800863,"byte_end":13800872,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6395}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":13801018,"byte_end":13801027,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":13801066,"byte_end":13801075,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6402},{"krate":0,"index":6403}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\chain.rs","byte_start":13801998,"byte_end":13802003,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6431}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\chain.rs","byte_start":13802183,"byte_end":13802188,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6435},{"krate":0,"index":6436},{"krate":0,"index":6440}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803766,"byte_end":13803773,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6485}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13804057,"byte_end":13804064,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6489},{"krate":0,"index":6490}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13805040,"byte_end":13805046,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13805101,"byte_end":13805107,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6504},{"krate":0,"index":6505},{"krate":0,"index":6506},{"krate":0,"index":6507}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13805496,"byte_end":13805499,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13805545,"byte_end":13805548,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6512},{"krate":0,"index":6513},{"krate":0,"index":6514},{"krate":0,"index":6515}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13805931,"byte_end":13805934,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13805982,"byte_end":13805985,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6520},{"krate":0,"index":6521},{"krate":0,"index":6522},{"krate":0,"index":6523}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13806500,"byte_end":13806506,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13806595,"byte_end":13806601,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6532},{"krate":0,"index":6533},{"krate":0,"index":6534},{"krate":0,"index":6535}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13807679,"byte_end":13807684,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13807732,"byte_end":13807737,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6540},{"krate":0,"index":6541},{"krate":0,"index":6542},{"krate":0,"index":6543}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13808137,"byte_end":13808145,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13808193,"byte_end":13808201,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6548},{"krate":0,"index":6549},{"krate":0,"index":6550},{"krate":0,"index":6551}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809472,"byte_end":13809477,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809508,"byte_end":13809513,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809544,"byte_end":13809549,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13810092,"byte_end":13810097,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6592},{"krate":0,"index":6593},{"krate":0,"index":6594}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":13810711,"byte_end":13810717,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6625}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":13810935,"byte_end":13810941,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6629}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":13811060,"byte_end":13811066,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6633},{"krate":0,"index":6634},{"krate":0,"index":6635}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":13812152,"byte_end":13812161,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6662}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":13812382,"byte_end":13812391,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6666}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":13812513,"byte_end":13812522,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6671},{"krate":0,"index":6672},{"krate":0,"index":6673}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fold.rs","byte_start":13813594,"byte_end":13813604,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6701}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fold.rs","byte_start":13813800,"byte_end":13813810,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6706},{"krate":0,"index":6707}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fuse.rs","byte_start":13814709,"byte_end":13814713,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6730}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fuse.rs","byte_start":13814873,"byte_end":13814877,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6733},{"krate":0,"index":6734},{"krate":0,"index":6735}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13815820,"byte_end":13815824,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816486,"byte_end":13816490,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6759},{"krate":0,"index":6760},{"krate":0,"index":6761}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":13817236,"byte_end":13817239,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6792}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":13817428,"byte_end":13817431,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6796}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":13817552,"byte_end":13817555,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6801},{"krate":0,"index":6802},{"krate":0,"index":6805}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\merge.rs","byte_start":13818400,"byte_end":13818405,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6833}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\merge.rs","byte_start":13818659,"byte_end":13818664,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6837},{"krate":0,"index":6838},{"krate":0,"index":6839}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":13820176,"byte_end":13820180,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":13820214,"byte_end":13820218,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6869}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":13820359,"byte_end":13820363,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6872},{"krate":0,"index":6873}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13820859,"byte_end":13820863,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821490,"byte_end":13821494,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6907},{"krate":0,"index":6908},{"krate":0,"index":6909}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822041,"byte_end":13822048,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822079,"byte_end":13822086,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822117,"byte_end":13822124,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822817,"byte_end":13822824,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6944},{"krate":0,"index":6945},{"krate":0,"index":6946}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828489,"byte_end":13828498,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6977},{"krate":0,"index":6978},{"krate":0,"index":6979},{"krate":0,"index":6982},{"krate":0,"index":6985},{"krate":0,"index":6988},{"krate":0,"index":6989},{"krate":0,"index":6990},{"krate":0,"index":6991},{"krate":0,"index":6992},{"krate":0,"index":6993},{"krate":0,"index":6995}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13835499,"byte_end":13835508,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7000}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13837047,"byte_end":13837056,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":7007}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":13838272,"byte_end":13838276,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7033}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":13838486,"byte_end":13838490,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7036}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":13838623,"byte_end":13838627,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7039},{"krate":0,"index":7040},{"krate":0,"index":7041}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":13839853,"byte_end":13839862,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7069}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":13840083,"byte_end":13840092,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7073}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":13840277,"byte_end":13840286,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7077},{"krate":0,"index":7078},{"krate":0,"index":7079}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":13841635,"byte_end":13841642,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":13841676,"byte_end":13841683,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7109}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":13841890,"byte_end":13841897,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":7114},{"krate":0,"index":7115}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":13842507,"byte_end":13842511,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7144}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":13842721,"byte_end":13842725,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7147}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":13842858,"byte_end":13842862,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7150},{"krate":0,"index":7151},{"krate":0,"index":7153}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":13844381,"byte_end":13844390,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7180}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":13844650,"byte_end":13844659,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7184}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":13844852,"byte_end":13844861,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7188},{"krate":0,"index":7189},{"krate":0,"index":7192}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\timeout.rs","byte_start":13875918,"byte_end":13875925,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7351}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\timeout.rs","byte_start":13876280,"byte_end":13876287,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7354},{"krate":0,"index":7355},{"krate":0,"index":7356}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798930,"byte_end":13798932,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894763,"byte_end":13894770,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7372},{"krate":0,"index":7373}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13898050,"byte_end":13898067,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7377}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13908634,"byte_end":13908640,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7489}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13908767,"byte_end":13908773,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7493}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13908934,"byte_end":13908938,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909008,"byte_end":13909012,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13911786,"byte_end":13911792,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13911829,"byte_end":13911835,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13911873,"byte_end":13911881,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13911918,"byte_end":13911926,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13911942,"byte_end":13911948,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7513},{"krate":0,"index":7515},{"krate":0,"index":7516},{"krate":0,"index":7517}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13917584,"byte_end":13917588,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7521}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13917980,"byte_end":13917986,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7524}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13918166,"byte_end":13918172,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7527}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13918326,"byte_end":13918334,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7530}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923199,"byte_end":13923207,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7534},{"krate":0,"index":7535},{"krate":0,"index":7553}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13926025,"byte_end":13926030,"line_start":857,"line_end":857,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7551}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13929382,"byte_end":13929390,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7558},{"krate":0,"index":7559}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13929840,"byte_end":13929848,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7563}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13931032,"byte_end":13931036,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7569},{"krate":0,"index":7570}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13931878,"byte_end":13931882,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7574},{"krate":0,"index":7575}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13932612,"byte_end":13932620,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9245}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13933932,"byte_end":13933936,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9250},{"krate":0,"index":9251}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13934660,"byte_end":13934664,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7579}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13935462,"byte_end":13935468,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7583},{"krate":0,"index":7584},{"krate":0,"index":7585},{"krate":0,"index":7586},{"krate":0,"index":7587}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13935883,"byte_end":13935889,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7590}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13936033,"byte_end":13936041,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7593}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13936176,"byte_end":13936185,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7597}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13936358,"byte_end":13936367,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7602}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13936658,"byte_end":13936667,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7605}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13936940,"byte_end":13936949,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13936976,"byte_end":13936988,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7608}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13937330,"byte_end":13937342,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\block.rs","byte_start":13943651,"byte_end":13943656,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7685},{"krate":0,"index":7686},{"krate":0,"index":7687},{"krate":0,"index":7688},{"krate":0,"index":7690},{"krate":0,"index":7692},{"krate":0,"index":7693},{"krate":0,"index":7694},{"krate":0,"index":7696},{"krate":0,"index":7697},{"krate":0,"index":7698},{"krate":0,"index":7700},{"krate":0,"index":7701},{"krate":0,"index":7702}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\block.rs","byte_start":13953638,"byte_end":13953644,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7707}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\block.rs","byte_start":13954126,"byte_end":13954132,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7710},{"krate":0,"index":7711}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13954770,"byte_end":13954776,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7747}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13954908,"byte_end":13954914,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7750}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955321,"byte_end":13955329,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7756}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957101,"byte_end":13957109,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7762},{"krate":0,"index":7763},{"krate":0,"index":7770},{"krate":0,"index":7771},{"krate":0,"index":7772}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959537,"byte_end":13959545,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959605,"byte_end":13959613,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9262},{"krate":0,"index":9263}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959801,"byte_end":13959807,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7777},{"krate":0,"index":7778},{"krate":0,"index":7785},{"krate":0,"index":7786},{"krate":0,"index":7793},{"krate":0,"index":7795}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13971197,"byte_end":13971199,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7868}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13971600,"byte_end":13971602,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7876}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13971909,"byte_end":13971918,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7879}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13972180,"byte_end":13972192,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7882}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13973977,"byte_end":13973981,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7904}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13974614,"byte_end":13974622,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7911}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13974888,"byte_end":13974892,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13974941,"byte_end":13974945,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13975424,"byte_end":13975426,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7924},{"krate":0,"index":7925},{"krate":0,"index":7926},{"krate":0,"index":7927}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13976125,"byte_end":13976127,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7930}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13976275,"byte_end":13976277,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7933}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13976455,"byte_end":13976457,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7937}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13976857,"byte_end":13976859,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7941}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13977386,"byte_end":13977388,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7945},{"krate":0,"index":7946},{"krate":0,"index":7948},{"krate":0,"index":7952}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13980508,"byte_end":13980510,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7958}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13980946,"byte_end":13980950,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7966}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13981414,"byte_end":13981418,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7970}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13981967,"byte_end":13981979,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7979}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13983639,"byte_end":13983650,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8006},{"krate":0,"index":8007},{"krate":0,"index":8008},{"krate":0,"index":8009},{"krate":0,"index":8010},{"krate":0,"index":8011},{"krate":0,"index":8013},{"krate":0,"index":8014},{"krate":0,"index":8015}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":13986394,"byte_end":13986396,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8067},{"krate":0,"index":8068},{"krate":0,"index":8069},{"krate":0,"index":8071}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":13992100,"byte_end":13992102,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8074}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":13992379,"byte_end":13992381,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8077},{"krate":0,"index":8078},{"krate":0,"index":8079},{"krate":0,"index":8080}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":13995780,"byte_end":13995782,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8083}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996456,"byte_end":13996471,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8113}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996612,"byte_end":13996627,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8116}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997085,"byte_end":13997102,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8122}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998080,"byte_end":13998097,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8128},{"krate":0,"index":8129},{"krate":0,"index":8130},{"krate":0,"index":8137},{"krate":0,"index":8138}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000569,"byte_end":14000586,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8141},{"krate":0,"index":8142}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000752,"byte_end":14000767,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8145},{"krate":0,"index":8146}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14001877,"byte_end":14001886,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8166}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002046,"byte_end":14002055,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002541,"byte_end":14002553,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002586,"byte_end":14002598,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8173}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002938,"byte_end":14002950,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8176}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003179,"byte_end":14003188,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8178}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003318,"byte_end":14003327,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003813,"byte_end":14003825,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8181}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14004131,"byte_end":14004143,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14004300,"byte_end":14004311,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8184}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14004410,"byte_end":14004421,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8186}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14004551,"byte_end":14004562,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14005066,"byte_end":14005082,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14005119,"byte_end":14005135,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":9319}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011434,"byte_end":14011439,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011493,"byte_end":14011498,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011552,"byte_end":14011562,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011627,"byte_end":14011642,"line_start":160,"line_end":160,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011929,"byte_end":14011941,"line_start":170,"line_end":170,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8232}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14012078,"byte_end":14012090,"line_start":176,"line_end":176,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14012898,"byte_end":14012903,"line_start":202,"line_end":202,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8236},{"krate":0,"index":8237},{"krate":0,"index":8240},{"krate":0,"index":8243},{"krate":0,"index":8247},{"krate":0,"index":8248},{"krate":0,"index":8249}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017476,"byte_end":14017481,"line_start":360,"line_end":360,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8252}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017565,"byte_end":14017570,"line_start":366,"line_end":366,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8255}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017694,"byte_end":14017699,"line_start":375,"line_end":375,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8258}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14018094,"byte_end":14018104,"line_start":391,"line_end":391,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8261}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14018205,"byte_end":14018215,"line_start":397,"line_end":397,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8264},{"krate":0,"index":8265}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14018362,"byte_end":14018372,"line_start":404,"line_end":404,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8268}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14018529,"byte_end":14018539,"line_start":410,"line_end":410,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8271}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14018705,"byte_end":14018715,"line_start":416,"line_end":416,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8274}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14018893,"byte_end":14018908,"line_start":424,"line_end":424,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8277}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14019005,"byte_end":14019020,"line_start":430,"line_end":430,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8280},{"krate":0,"index":8281}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14019163,"byte_end":14019178,"line_start":437,"line_end":437,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8284}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14019331,"byte_end":14019346,"line_start":443,"line_end":443,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8287}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14019508,"byte_end":14019523,"line_start":449,"line_end":449,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":8290}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023487,"byte_end":14023495,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023528,"byte_end":14023536,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023799,"byte_end":14023805,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8354},{"krate":0,"index":8355},{"krate":0,"index":8358}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14027813,"byte_end":14027819,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8360}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14029557,"byte_end":14029565,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8363}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14030075,"byte_end":14030083,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8365},{"krate":0,"index":8366}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14034913,"byte_end":14034921,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8369}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14037879,"byte_end":14037885,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8372},{"krate":0,"index":8373},{"krate":0,"index":8374},{"krate":0,"index":8375},{"krate":0,"index":8376}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039761,"byte_end":14039770,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8436}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039932,"byte_end":14039941,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14040010,"byte_end":14040022,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8439}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14040321,"byte_end":14040333,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042144,"byte_end":14042150,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8452},{"krate":0,"index":8455},{"krate":0,"index":8457},{"krate":0,"index":8464}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048451,"byte_end":14048457,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8467}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048596,"byte_end":14048604,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8470},{"krate":0,"index":8471}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14052995,"byte_end":14053003,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8474}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14053150,"byte_end":14053158,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8477},{"krate":0,"index":8478}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14053621,"byte_end":14053626,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8481},{"krate":0,"index":8482},{"krate":0,"index":8484},{"krate":0,"index":8485},{"krate":0,"index":8487},{"krate":0,"index":8491},{"krate":0,"index":8495},{"krate":0,"index":8497},{"krate":0,"index":8499},{"krate":0,"index":8501}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14057998,"byte_end":14058003,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14058040,"byte_end":14058045,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14058070,"byte_end":14058075,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8509}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14058444,"byte_end":14058449,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8513}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14058844,"byte_end":14058849,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8522},{"krate":0,"index":8523},{"krate":0,"index":8524},{"krate":0,"index":8525},{"krate":0,"index":8526},{"krate":0,"index":8527},{"krate":0,"index":8528},{"krate":0,"index":8529},{"krate":0,"index":8530},{"krate":0,"index":8531},{"krate":0,"index":8532},{"krate":0,"index":8533},{"krate":0,"index":8534}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14060562,"byte_end":14060567,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8536}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14064045,"byte_end":14064054,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8607},{"krate":0,"index":8608},{"krate":0,"index":8609},{"krate":0,"index":8610},{"krate":0,"index":8611},{"krate":0,"index":8612},{"krate":0,"index":8613},{"krate":0,"index":8615},{"krate":0,"index":8616},{"krate":0,"index":8617},{"krate":0,"index":8621}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14073975,"byte_end":14073984,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8625}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14074185,"byte_end":14074191,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8627},{"krate":0,"index":8628}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14075057,"byte_end":14075064,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8630},{"krate":0,"index":8631}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14075742,"byte_end":14075749,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8634},{"krate":0,"index":8635}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14076548,"byte_end":14076555,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8639}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14078197,"byte_end":14078204,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14078251,"byte_end":14078263,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8642}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14078356,"byte_end":14078368,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8644}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14078512,"byte_end":14078524,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14078571,"byte_end":14078586,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8647},{"krate":0,"index":8648}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14079208,"byte_end":14079223,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8650}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14079509,"byte_end":14079524,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14079617,"byte_end":14079623,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8653},{"krate":0,"index":8654},{"krate":0,"index":8655},{"krate":0,"index":8656},{"krate":0,"index":8657}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14084892,"byte_end":14084901,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8737},{"krate":0,"index":8738},{"krate":0,"index":8739},{"krate":0,"index":8742},{"krate":0,"index":8744},{"krate":0,"index":8748},{"krate":0,"index":8749},{"krate":0,"index":8750},{"krate":0,"index":8751},{"krate":0,"index":8756},{"krate":0,"index":8757},{"krate":0,"index":8758},{"krate":0,"index":8759}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14101095,"byte_end":14101104,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8761}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14101183,"byte_end":14101192,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8763}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14101570,"byte_end":14101579,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14101604,"byte_end":14101613,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14101651,"byte_end":14101657,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8768},{"krate":0,"index":8772},{"krate":0,"index":8773},{"krate":0,"index":8777},{"krate":0,"index":8779},{"krate":0,"index":8780}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14108063,"byte_end":14108069,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8783}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14108142,"byte_end":14108148,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8785}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14108570,"byte_end":14108582,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8787}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14108762,"byte_end":14108774,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8790}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14108918,"byte_end":14108930,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14108977,"byte_end":14108992,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8793},{"krate":0,"index":8794}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14109522,"byte_end":14109537,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8796}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14109823,"byte_end":14109838,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14109876,"byte_end":14109882,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8799},{"krate":0,"index":8800},{"krate":0,"index":8801},{"krate":0,"index":8802},{"krate":0,"index":8803},{"krate":0,"index":8804},{"krate":0,"index":8805},{"krate":0,"index":8806},{"krate":0,"index":8807}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14115369,"byte_end":14115377,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8809},{"krate":0,"index":8810},{"krate":0,"index":8811},{"krate":0,"index":8812},{"krate":0,"index":8813},{"krate":0,"index":8814},{"krate":0,"index":8815},{"krate":0,"index":8816},{"krate":0,"index":8817},{"krate":0,"index":8818},{"krate":0,"index":8819},{"krate":0,"index":8820},{"krate":0,"index":8821},{"krate":0,"index":8822},{"krate":0,"index":8823},{"krate":0,"index":8824}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14119040,"byte_end":14119048,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8826}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14119401,"byte_end":14119412,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8828},{"krate":0,"index":8829},{"krate":0,"index":8830},{"krate":0,"index":8831},{"krate":0,"index":8832},{"krate":0,"index":8833},{"krate":0,"index":8834},{"krate":0,"index":8835}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122141,"byte_end":14122150,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8844},{"krate":0,"index":8845},{"krate":0,"index":8846},{"krate":0,"index":8847},{"krate":0,"index":8850},{"krate":0,"index":8851},{"krate":0,"index":8854}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124245,"byte_end":14124260,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8857}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124505,"byte_end":14124525,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8859}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124779,"byte_end":14124794,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8862}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124902,"byte_end":14124922,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8864}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128276,"byte_end":14128291,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8904},{"krate":0,"index":8907}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14131709,"byte_end":14131724,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8913}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14131904,"byte_end":14131919,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8917}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132095,"byte_end":14132110,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8921}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132574,"byte_end":14132590,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8931},{"krate":0,"index":8934}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14136184,"byte_end":14136200,"line_start":349,"line_end":349,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8940}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14136380,"byte_end":14136396,"line_start":358,"line_end":358,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8944}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14136572,"byte_end":14136588,"line_start":367,"line_end":367,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8948}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14137664,"byte_end":14137670,"line_start":402,"line_end":402,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14137724,"byte_end":14137730,"line_start":403,"line_end":403,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14137964,"byte_end":14137979,"line_start":407,"line_end":407,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138037,"byte_end":14138052,"line_start":408,"line_end":408,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138117,"byte_end":14138133,"line_start":409,"line_end":409,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138446,"byte_end":14138462,"line_start":414,"line_end":414,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138520,"byte_end":14138526,"line_start":416,"line_end":416,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8963},{"krate":0,"index":8964},{"krate":0,"index":8968},{"krate":0,"index":8972}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14141714,"byte_end":14141729,"line_start":524,"line_end":524,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8975},{"krate":0,"index":8976}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14141860,"byte_end":14141876,"line_start":532,"line_end":532,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8979},{"krate":0,"index":8980}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14142010,"byte_end":14142026,"line_start":540,"line_end":540,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8983}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14142140,"byte_end":14142146,"line_start":546,"line_end":546,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8986}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14142238,"byte_end":14142244,"line_start":552,"line_end":552,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8989}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":14148519,"byte_end":14148530,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9035},{"krate":0,"index":9036},{"krate":0,"index":9037},{"krate":0,"index":9038},{"krate":0,"index":9042},{"krate":0,"index":9043}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":14154457,"byte_end":14154468,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9046}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":14154554,"byte_end":14154565,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":9048}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":14154698,"byte_end":14154709,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":14154734,"byte_end":14154745,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":14154841,"byte_end":14154846,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9055},{"krate":0,"index":9056}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14158387,"byte_end":14158396,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":9125}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14158576,"byte_end":14158585,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14160744,"byte_end":14160752,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9136},{"krate":0,"index":9137}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162024,"byte_end":14162032,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9141}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14163398,"byte_end":14163406,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":9148},{"krate":0,"index":9149}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14163665,"byte_end":14163673,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9153}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14163976,"byte_end":14163984,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9156}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14164098,"byte_end":14164104,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9159},{"krate":0,"index":9160},{"krate":0,"index":9164}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14165639,"byte_end":14165645,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9169}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14165884,"byte_end":14165887,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9172},{"krate":0,"index":9173}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14166028,"byte_end":14166034,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9176}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14166136,"byte_end":14166143,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9178}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14166366,"byte_end":14166373,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9180}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14166490,"byte_end":14166497,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14166527,"byte_end":14166534,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9183}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14166681,"byte_end":14166688,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9186},{"krate":0,"index":9187}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\yield_now.rs","byte_start":14185507,"byte_end":14185515,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9610},{"krate":0,"index":9611}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\clock.rs","byte_start":14190493,"byte_end":14190498,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10374},{"krate":0,"index":10375},{"krate":0,"index":10376},{"krate":0,"index":10377}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201096,"byte_end":14201106,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":9666},{"krate":0,"index":9667},{"krate":0,"index":9668},{"krate":0,"index":9669},{"krate":0,"index":9672},{"krate":0,"index":9673},{"krate":0,"index":9681},{"krate":0,"index":9685},{"krate":0,"index":9686},{"krate":0,"index":9687},{"krate":0,"index":9689},{"krate":0,"index":9690},{"krate":0,"index":9691},{"krate":0,"index":9692},{"krate":0,"index":9693},{"krate":0,"index":9694},{"krate":0,"index":9695},{"krate":0,"index":9699}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14219100,"byte_end":14219110,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14219138,"byte_end":14219148,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9704}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14219285,"byte_end":14219295,"line_start":768,"line_end":768,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9707},{"krate":0,"index":9708}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14219677,"byte_end":14219682,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9711},{"krate":0,"index":9712},{"krate":0,"index":9713},{"krate":0,"index":9714},{"krate":0,"index":9715},{"krate":0,"index":9716},{"krate":0,"index":9717},{"krate":0,"index":9718}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14221809,"byte_end":14221814,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9721}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14221944,"byte_end":14221947,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":9723}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14222034,"byte_end":14222041,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9726},{"krate":0,"index":9727},{"krate":0,"index":9728},{"krate":0,"index":9729}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224579,"byte_end":14224584,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9760},{"krate":0,"index":9761},{"krate":0,"index":9762},{"krate":0,"index":9763}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14225562,"byte_end":14225567,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9765},{"krate":0,"index":9766}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\atomic_stack.rs","byte_start":14239237,"byte_end":14239248,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9799},{"krate":0,"index":9800},{"krate":0,"index":9801},{"krate":0,"index":9802}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\atomic_stack.rs","byte_start":14241226,"byte_end":14241244,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9804},{"krate":0,"index":9805}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\atomic_stack.rs","byte_start":14241840,"byte_end":14241858,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9807}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":14246096,"byte_end":14246101,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9871},{"krate":0,"index":9872},{"krate":0,"index":9873},{"krate":0,"index":9874},{"krate":0,"index":9875},{"krate":0,"index":9876},{"krate":0,"index":9877},{"krate":0,"index":9878},{"krate":0,"index":9879},{"krate":0,"index":9880},{"krate":0,"index":9881},{"krate":0,"index":9882},{"krate":0,"index":9883},{"krate":0,"index":9884}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":14252769,"byte_end":14252774,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9887}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":14252982,"byte_end":14252987,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":14253012,"byte_end":14253017,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\handle.rs","byte_start":14253394,"byte_end":14253400,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":9911},{"krate":0,"index":9912},{"krate":0,"index":9913}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\handle.rs","byte_start":14254063,"byte_end":14254069,"line_start":35,"line_end":35,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9915}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\registration.rs","byte_start":14254514,"byte_end":14254526,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":9948},{"krate":0,"index":9949},{"krate":0,"index":9950},{"krate":0,"index":9951},{"krate":0,"index":9952}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\registration.rs","byte_start":14255436,"byte_end":14255448,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9955}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\stack.rs","byte_start":14255732,"byte_end":14255737,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":9973}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\stack.rs","byte_start":14255828,"byte_end":14255833,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9975},{"krate":0,"index":9976},{"krate":0,"index":9977},{"krate":0,"index":9978},{"krate":0,"index":9979},{"krate":0,"index":9980},{"krate":0,"index":9981},{"krate":0,"index":9982}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":14230532,"byte_end":14230538,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10052},{"krate":0,"index":10053},{"krate":0,"index":10054},{"krate":0,"index":10055},{"krate":0,"index":10056},{"krate":0,"index":10057},{"krate":0,"index":10058}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":14234235,"byte_end":14234241,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10064},{"krate":0,"index":10065},{"krate":0,"index":10066},{"krate":0,"index":10067},{"krate":0,"index":10068},{"krate":0,"index":10069}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":14236814,"byte_end":14236820,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10075}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":14236936,"byte_end":14236941,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10077},{"krate":0,"index":10078},{"krate":0,"index":10079},{"krate":0,"index":10080},{"krate":0,"index":10081},{"krate":0,"index":10082}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":14238558,"byte_end":14238563,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10084}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260155,"byte_end":14260160,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10094},{"krate":0,"index":10095},{"krate":0,"index":10096},{"krate":0,"index":10097},{"krate":0,"index":10098},{"krate":0,"index":10099},{"krate":0,"index":10100},{"krate":0,"index":10101}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14261527,"byte_end":14261532,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14261559,"byte_end":14261564,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":10104}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262336,"byte_end":14262343,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":10120},{"krate":0,"index":10121},{"krate":0,"index":10122},{"krate":0,"index":10123},{"krate":0,"index":10124},{"krate":0,"index":10125},{"krate":0,"index":10126},{"krate":0,"index":10127},{"krate":0,"index":10128}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266117,"byte_end":14266124,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10130}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266253,"byte_end":14266260,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10132}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266375,"byte_end":14266382,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10134},{"krate":0,"index":10135}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266547,"byte_end":14266554,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10137}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266659,"byte_end":14266666,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10139},{"krate":0,"index":10140}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266807,"byte_end":14266814,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10142},{"krate":0,"index":10143}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266975,"byte_end":14266982,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10145}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14267089,"byte_end":14267096,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":10147}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270978,"byte_end":14270986,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":10189},{"krate":0,"index":10190}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14272281,"byte_end":14272289,"line_start":169,"line_end":169,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":10195},{"krate":0,"index":10196}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275621,"byte_end":14275628,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":10245}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275757,"byte_end":14275764,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":10248},{"krate":0,"index":10249},{"krate":0,"index":10250},{"krate":0,"index":10251}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14276302,"byte_end":14276309,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10254},{"krate":0,"index":10255}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14276887,"byte_end":14276894,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10257}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14277038,"byte_end":14277045,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14277082,"byte_end":14277087,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10260}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295227,"byte_end":14295235,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10574},{"krate":0,"index":10575},{"krate":0,"index":10576}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14296050,"byte_end":14296058,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10579},{"krate":0,"index":10580}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\level.rs","byte_start":14286991,"byte_end":14286996,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":10291},{"krate":0,"index":10293},{"krate":0,"index":10294},{"krate":0,"index":10295},{"krate":0,"index":10296},{"krate":0,"index":10297}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\level.rs","byte_start":14291748,"byte_end":14291753,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":10300}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\mod.rs","byte_start":14278812,"byte_end":14278817,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":10337},{"krate":0,"index":10338},{"krate":0,"index":10339},{"krate":0,"index":10340},{"krate":0,"index":10341},{"krate":0,"index":10343},{"krate":0,"index":10345},{"krate":0,"index":10346},{"krate":0,"index":10347},{"krate":0,"index":10348},{"krate":0,"index":10349},{"krate":0,"index":10350}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\mod.rs","byte_start":14284525,"byte_end":14284529,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":10353}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\bit.rs","byte_start":14296891,"byte_end":14296895,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":10621},{"krate":0,"index":10622},{"krate":0,"index":10623},{"krate":0,"index":10624},{"krate":0,"index":10625},{"krate":0,"index":10626},{"krate":0,"index":10627}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\bit.rs","byte_start":14298369,"byte_end":14298373,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10629}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\addr.rs","byte_start":14305592,"byte_end":14305599,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":10660},{"krate":0,"index":10661},{"krate":0,"index":10662},{"krate":0,"index":10663},{"krate":0,"index":10664},{"krate":0,"index":10665},{"krate":0,"index":10666},{"krate":0,"index":10667}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\generation.rs","byte_start":14308628,"byte_end":14308638,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":10689},{"krate":0,"index":10690},{"krate":0,"index":10691},{"krate":0,"index":10692},{"krate":0,"index":10693}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":14309777,"byte_end":14309782,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10730},{"krate":0,"index":10731},{"krate":0,"index":10733}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":14310124,"byte_end":14310130,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":10737},{"krate":0,"index":10738},{"krate":0,"index":10740},{"krate":0,"index":10743},{"krate":0,"index":10746},{"krate":0,"index":10749}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":14314082,"byte_end":14314087,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10754}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":14314393,"byte_end":14314399,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10758}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\shard.rs","byte_start":14316542,"byte_end":14316547,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":10782},{"krate":0,"index":10785},{"krate":0,"index":10786},{"krate":0,"index":10787},{"krate":0,"index":10788},{"krate":0,"index":10789}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\shard.rs","byte_start":14318226,"byte_end":14318231,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":10792}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\slot.rs","byte_start":14318608,"byte_end":14318612,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":10813},{"krate":0,"index":10814},{"krate":0,"index":10815},{"krate":0,"index":10816},{"krate":0,"index":10817},{"krate":0,"index":10819}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\stack.rs","byte_start":14319583,"byte_end":14319596,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":10843},{"krate":0,"index":10844},{"krate":0,"index":10845}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\stack.rs","byte_start":14320424,"byte_end":14320437,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":10848}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":14299971,"byte_end":14299975,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":14300012,"byte_end":14300016,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":14300039,"byte_end":14300043,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":10873},{"krate":0,"index":10874},{"krate":0,"index":10875},{"krate":0,"index":10876}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":14301558,"byte_end":14301562,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":10879}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":181552,"byte_end":181562,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":181621,"byte_end":181631,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182920,"byte_end":182928,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182965,"byte_end":182973,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":183027,"byte_end":183037,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186041,"byte_end":186051,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186296,"byte_end":186306,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":10924}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186706,"byte_end":186716,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":10932}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186938,"byte_end":186942,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":10936},{"krate":0,"index":10937}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":187389,"byte_end":187397,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":187596,"byte_end":187604,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\rand.rs","byte_start":197676,"byte_end":197684,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\wake.rs","byte_start":199546,"byte_end":199554,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14321249,"byte_end":14321256,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14321293,"byte_end":14321300,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14321338,"byte_end":14321347,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14321533,"byte_end":14321540,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":10995},{"krate":0,"index":10996}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14322174,"byte_end":14322183,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":10999},{"krate":0,"index":11000}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14322315,"byte_end":14322324,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":11003}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14322446,"byte_end":14322455,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":11006}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":203520,"byte_end":203528,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":203778,"byte_end":203786,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":203891,"byte_end":203899,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Inherent","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":204208,"byte_end":204218,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14197,"byte_end":14203,"line_start":348,"line_end":348,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\mod.rs","byte_start":16314,"byte_end":16321,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":85}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14258,"byte_end":14264,"line_start":355,"line_end":355,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14275,"byte_end":14277,"line_start":357,"line_end":357,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":243}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14287,"byte_end":14290,"line_start":358,"line_end":358,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":445}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72960,"byte_end":72963,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3955}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14322,"byte_end":14329,"line_start":363,"line_end":363,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":822}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14379,"byte_end":14386,"line_start":369,"line_end":369,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":836}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14474,"byte_end":14480,"line_start":378,"line_end":378,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":6340}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14509,"byte_end":14513,"line_start":382,"line_end":382,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7363}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892508,"byte_end":13892517,"line_start":435,"line_end":435,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":7385}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892675,"byte_end":13892679,"line_start":442,"line_end":442,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7612}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":13941068,"byte_end":13941073,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":8157}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13892826,"byte_end":13892833,"line_start":450,"line_end":450,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":8382}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":13893147,"byte_end":13893152,"line_start":463,"line_end":463,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":9066}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14577,"byte_end":14581,"line_start":389,"line_end":389,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":9545}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14635,"byte_end":14639,"line_start":394,"line_end":394,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":9612}},{"kind":"Mod","span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":14188782,"byte_end":14188793,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":9617}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":63},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":63},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1302},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1302},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1322},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47547,"byte_end":47556,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":309},"to":{"krate":0,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":46090},"to":{"krate":0,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":10154},"to":{"krate":0,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":46090},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":10154},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":354}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":46090},"to":{"krate":0,"index":354}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":10154},"to":{"krate":0,"index":354}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":46090},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":10154},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":10154},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":10154},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":10154},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":13349741,"byte_end":13349752,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1683},"to":{"krate":0,"index":10675}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":13350511,"byte_end":13350522,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1683},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":13350729,"byte_end":13350740,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":13353362,"byte_end":13353373,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1683},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13339061,"byte_end":13339067,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13341928,"byte_end":13341934,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1498},"to":{"krate":0,"index":809}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13342333,"byte_end":13342339,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1498},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13342475,"byte_end":13342481,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13343642,"byte_end":13343648,"line_start":228,"line_end":228,"column_start":17,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1689},"to":{"krate":0,"index":816}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13343726,"byte_end":13343732,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1689},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13343867,"byte_end":13343872,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":13345416,"byte_end":13345425,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13359931,"byte_end":13359942,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13367733,"byte_end":13367744,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1709},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13368237,"byte_end":13368248,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1709},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13369329,"byte_end":13369340,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1709},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":13369513,"byte_end":13369524,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1709},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13371672,"byte_end":13371684,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13382554,"byte_end":13382566,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1713},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13382591,"byte_end":13382603,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1713},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":13382622,"byte_end":13382634,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1713},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13384416,"byte_end":13384424,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13385341,"byte_end":13385350,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13385600,"byte_end":13385608,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1920},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13386163,"byte_end":13386172,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1923},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13387121,"byte_end":13387126,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13387519,"byte_end":13387524,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13387777,"byte_end":13387782,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1769},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13387905,"byte_end":13387913,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1920},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13387950,"byte_end":13387959,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1923},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13387996,"byte_end":13388004,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1920},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13388041,"byte_end":13388050,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1923},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13388093,"byte_end":13388101,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1920},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":13388269,"byte_end":13388278,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1923},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\seek.rs","byte_start":13388968,"byte_end":13388972,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1928},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":13392034,"byte_end":13392046,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":264},"to":{"krate":0,"index":3282}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":13401067,"byte_end":13401068,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1970},"to":{"krate":0,"index":3282}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13403095,"byte_end":13403104,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":309},"to":{"krate":0,"index":3290}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":13440500,"byte_end":13440501,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2087},"to":{"krate":0,"index":3290}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13441380,"byte_end":13441389,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":354},"to":{"krate":0,"index":2105}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":13442259,"byte_end":13442260,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2108},"to":{"krate":0,"index":2105}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13444317,"byte_end":13444327,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":393},"to":{"krate":0,"index":3342}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":13477607,"byte_end":13477608,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2211},"to":{"krate":0,"index":3342}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13479024,"byte_end":13479033,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":13639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13481212,"byte_end":13481221,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":13639},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13482197,"byte_end":13482206,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":13639},"to":{"krate":0,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13483037,"byte_end":13483046,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":13639},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":13483762,"byte_end":13483771,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":13639},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13485278,"byte_end":13485287,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":13612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13487124,"byte_end":13487133,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":13612},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13487275,"byte_end":13487284,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":13612},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13487996,"byte_end":13488005,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":13612},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13488535,"byte_end":13488544,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":13612},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":13489023,"byte_end":13489032,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":13612},"to":{"krate":0,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13490986,"byte_end":13490995,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":13562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13493273,"byte_end":13493282,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":13562},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13494172,"byte_end":13494181,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":13562},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13494663,"byte_end":13494672,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":13562},"to":{"krate":0,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":13494959,"byte_end":13494968,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":13562},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13496137,"byte_end":13496142,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":13513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13497282,"byte_end":13497287,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":13513},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13497566,"byte_end":13497571,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":13513},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":13498394,"byte_end":13498399,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":13513},"to":{"krate":0,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\copy.rs","byte_start":13501442,"byte_end":13501446,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3392},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":13504556,"byte_end":13504561,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3408},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":13504890,"byte_end":13504895,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3408},"to":{"krate":0,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":13505128,"byte_end":13505133,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3408},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\flush.rs","byte_start":13505954,"byte_end":13505959,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3411},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13507139,"byte_end":13507144,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":13474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13508396,"byte_end":13508401,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":13474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":13509148,"byte_end":13509153,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":13474},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13512313,"byte_end":13512325,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3419},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13512874,"byte_end":13512886,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3419},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13513611,"byte_end":13513623,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3419},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13513783,"byte_end":13513787,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13514193,"byte_end":13514197,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3424},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":13515023,"byte_end":13515027,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3424},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read.rs","byte_start":13516955,"byte_end":13516959,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3432},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_buf.rs","byte_start":13518020,"byte_end":13518027,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3441},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_exact.rs","byte_start":13519392,"byte_end":13519401,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3452},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_line.rs","byte_start":13527679,"byte_end":13527687,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3606},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_end.rs","byte_start":13533607,"byte_end":13533616,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3617},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_string.rs","byte_start":13536355,"byte_end":13536367,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3627},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_until.rs","byte_start":13538807,"byte_end":13538816,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3638},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\repeat.rs","byte_start":13540650,"byte_end":13540656,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3650},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\shutdown.rs","byte_start":13541778,"byte_end":13541786,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3654},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\sink.rs","byte_start":13543619,"byte_end":13543623,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3662},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\sink.rs","byte_start":13544133,"byte_end":13544137,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3662},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545102,"byte_end":13545107,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":12640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13545846,"byte_end":13545851,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":12640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":13546630,"byte_end":13546635,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":12640},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13560174,"byte_end":13560186,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":12593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13560691,"byte_end":13560703,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":12593},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":13562242,"byte_end":13562254,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":12593},"to":{"krate":0,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":13565783,"byte_end":13565795,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":12551},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13547803,"byte_end":13547807,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":12511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13549435,"byte_end":13549439,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":12511},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":13550096,"byte_end":13550100,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":12511},"to":{"krate":0,"index":264}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write.rs","byte_start":13551657,"byte_end":13551662,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3770},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_all.rs","byte_start":13552455,"byte_end":13552463,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_buf.rs","byte_start":13553971,"byte_end":13553979,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3788},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74102,"byte_end":74119,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":527},"to":{"krate":0,"index":472}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":1,"index":10427},"to":{"krate":0,"index":472}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":126}},"from":{"krate":1,"index":10427},"to":{"krate":0,"index":527}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":127}},"from":{"krate":1,"index":10451},"to":{"krate":0,"index":472}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":128}},"from":{"krate":1,"index":10451},"to":{"krate":0,"index":527}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":129}},"from":{"krate":1,"index":10454},"to":{"krate":0,"index":472}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":130}},"from":{"krate":1,"index":10454},"to":{"krate":0,"index":527}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13569478,"byte_end":13569489,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13580184,"byte_end":13580195,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4372},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13580510,"byte_end":13580521,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":133}},"from":{"krate":17,"index":1304},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13580961,"byte_end":13580972,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4372},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":13581298,"byte_end":13581309,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4372},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13582368,"byte_end":13582376,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":13583014,"byte_end":13583022,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4374},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13585185,"byte_end":13585193,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587648,"byte_end":13587656,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4380},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13587976,"byte_end":13587985,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4387},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13588798,"byte_end":13588806,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4380},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":13588900,"byte_end":13588909,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4387},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13591997,"byte_end":13592009,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4403},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592212,"byte_end":13592224,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4403},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13592234,"byte_end":13592247,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595081,"byte_end":13595094,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4394},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13595399,"byte_end":13595413,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13596096,"byte_end":13596110,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4398},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13596270,"byte_end":13596284,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4398},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13597223,"byte_end":13597236,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4394},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":13597332,"byte_end":13597346,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4398},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13599481,"byte_end":13599490,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13624547,"byte_end":13624556,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"kind":{"Impl":{"id":153}},"from":{"krate":17,"index":1246},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13624992,"byte_end":13625001,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":4409},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13625354,"byte_end":13625363,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4409},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13625677,"byte_end":13625686,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4409},"to":{"krate":0,"index":393}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":13626430,"byte_end":13626439,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4409},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\either.rs","byte_start":13627266,"byte_end":13627272,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4432},"to":{"krate":0,"index":809}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\either.rs","byte_start":13628229,"byte_end":13628235,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4432},"to":{"krate":0,"index":816}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\either.rs","byte_start":13628449,"byte_end":13628455,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4432},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4461},"to":{"krate":0,"index":809}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4461},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4465},"to":{"krate":0,"index":816}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4529},"to":{"krate":0,"index":809}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":95507,"byte_end":95511,"line_start":97,"line_end":97,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":816}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":95514,"byte_end":95518,"line_start":97,"line_end":97,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":816}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"kind":{"Impl":{"id":195}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":816}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"kind":{"Impl":{"id":196}},"from":{"krate":5,"index":5986},"to":{"krate":0,"index":816}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":849},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13630581,"byte_end":13630595,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13634134,"byte_end":13634139,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4657},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13634826,"byte_end":13634840,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4622},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13635727,"byte_end":13635741,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4622},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13635907,"byte_end":13635914,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13636372,"byte_end":13636379,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5302},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13636547,"byte_end":13636550,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":204}},"from":{"krate":5,"index":5986},"to":{"krate":0,"index":5266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":13637648,"byte_end":13637654,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4631},"to":{"krate":0,"index":1229}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":13645337,"byte_end":13645343,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4756},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":13645368,"byte_end":13645374,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4756},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":13645733,"byte_end":13645737,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":13646515,"byte_end":13646519,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":13652270,"byte_end":13652276,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13652901,"byte_end":13652910,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13655989,"byte_end":13655998,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":5316},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13656241,"byte_end":13656250,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":5316},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13656527,"byte_end":13656536,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5316},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":13656570,"byte_end":13656575,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":215}},"from":{"krate":1,"index":4047},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\harness.rs","byte_start":13657253,"byte_end":13657260,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\harness.rs","byte_start":13657737,"byte_end":13657744,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\harness.rs","byte_start":13659915,"byte_end":13659920,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4916},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13672224,"byte_end":13672234,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5318},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13672271,"byte_end":13672281,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5318},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13672297,"byte_end":13672307,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13672483,"byte_end":13672493,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5318},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13672520,"byte_end":13672530,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5318},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13673756,"byte_end":13673766,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5318},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":13674032,"byte_end":13674042,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5318},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\raw.rs","byte_start":13675289,"byte_end":13675296,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\raw.rs","byte_start":13676827,"byte_end":13676834,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5025},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\raw.rs","byte_start":13676924,"byte_end":13676931,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5025},"to":{"krate":2,"index":3034}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":13679613,"byte_end":13679618,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":13688474,"byte_end":13688482,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":13690359,"byte_end":13690364,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5088},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":13690523,"byte_end":13690531,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5322},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\waker.rs","byte_start":13692349,"byte_end":13692357,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5202},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\stack.rs","byte_start":13694105,"byte_end":13694118,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\stack.rs","byte_start":13695276,"byte_end":13695280,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5370},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\stack.rs","byte_start":13695680,"byte_end":13695684,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5370},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13638667,"byte_end":13638671,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":5248},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13638702,"byte_end":13638706,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5248},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13638843,"byte_end":13638851,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5256},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13638892,"byte_end":13638900,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5256},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13639025,"byte_end":13639029,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":5266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13639032,"byte_end":13639037,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":5266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13640824,"byte_end":13640828,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13641125,"byte_end":13641133,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13641384,"byte_end":13641388,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":5248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13641581,"byte_end":13641589,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13641720,"byte_end":13641724,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13641893,"byte_end":13641901,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13642187,"byte_end":13642191,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5248},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13642431,"byte_end":13642435,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5248},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13642587,"byte_end":13642595,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5256},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":13642811,"byte_end":13642815,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5248},"to":{"krate":0,"index":1166}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":13698092,"byte_end":13698104,"line_start":89,"line_end":89,"column_start":6,"column_end":18},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":13699990,"byte_end":13700002,"line_start":146,"line_end":146,"column_start":15,"column_end":27},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5451},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":13700088,"byte_end":13700100,"line_start":152,"line_end":152,"column_start":21,"column_end":33},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5451},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":13700261,"byte_end":13700268,"line_start":160,"line_end":160,"column_start":6,"column_end":13},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":13702711,"byte_end":13702716,"line_start":238,"line_end":238,"column_start":6,"column_end":11},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":13705465,"byte_end":13705472,"line_start":325,"line_end":325,"column_start":21,"column_end":28},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5569},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\schedule.rs","byte_start":13705975,"byte_end":13705987,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5516},"to":{"krate":0,"index":5266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\shutdown.rs","byte_start":13706860,"byte_end":13706868,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\task.rs","byte_start":13708616,"byte_end":13708628,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\task.rs","byte_start":13708854,"byte_end":13708866,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5552},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\task.rs","byte_start":13708896,"byte_end":13708908,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5552},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":141852,"byte_end":141859,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":146358,"byte_end":146363,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":953},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":149349,"byte_end":149354,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":945},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":945},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154851,"byte_end":154857,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":160647,"byte_end":160653,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164217,"byte_end":164232,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":998},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164380,"byte_end":164395,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":998},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164553,"byte_end":164568,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":998},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":13710879,"byte_end":13710885,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":13711354,"byte_end":13711360,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5764},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":13711676,"byte_end":13711682,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5764},"to":{"krate":0,"index":809}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":13712401,"byte_end":13712409,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5766},"to":{"krate":0,"index":816}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":13712478,"byte_end":13712483,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\shell.rs","byte_start":166857,"byte_end":166862,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\shell.rs","byte_start":167468,"byte_end":167474,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5810},"to":{"krate":0,"index":1229}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\spawner.rs","byte_start":168071,"byte_end":168078,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\spawner.rs","byte_start":168321,"byte_end":168328,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13719706,"byte_end":13719711,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5902},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13719742,"byte_end":13719747,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5902},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13719778,"byte_end":13719784,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5897},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13719815,"byte_end":13719821,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5897},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13720680,"byte_end":13720685,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13727219,"byte_end":13727224,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13732392,"byte_end":13732397,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5893},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13732493,"byte_end":13732498,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5890},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13732657,"byte_end":13732662,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13732850,"byte_end":13732856,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":13736361,"byte_end":13736367,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5897},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":13740593,"byte_end":13740603,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5983},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":13740640,"byte_end":13740650,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5983},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":13740666,"byte_end":13740676,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":13741463,"byte_end":13741473,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5983},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":13742279,"byte_end":13742283,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":13746156,"byte_end":13746161,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":13747639,"byte_end":13747644,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6246},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":13747817,"byte_end":13747822,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6246},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13753586,"byte_end":13753591,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6263},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13757221,"byte_end":13757227,"line_start":278,"line_end":278,"column_start":6,"column_end":12},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13758002,"byte_end":13758009,"line_start":309,"line_end":309,"column_start":6,"column_end":13},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13762275,"byte_end":13762279,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13767091,"byte_end":13767097,"line_start":598,"line_end":598,"column_start":6,"column_end":12},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13767537,"byte_end":13767540,"line_start":614,"line_end":614,"column_start":25,"column_end":28},"kind":{"Impl":{"id":315}},"from":{"krate":5,"index":5986},"to":{"krate":0,"index":5266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":13770111,"byte_end":13770117,"line_start":692,"line_end":692,"column_start":6,"column_end":12},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":13738419,"byte_end":13738429,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":13739584,"byte_end":13739594,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6224},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":13739733,"byte_end":13739743,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6224},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":13739846,"byte_end":13739853,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":13740274,"byte_end":13740281,"line_start":117,"line_end":117,"column_start":21,"column_end":28},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6274},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":172931,"byte_end":172937,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":173705,"byte_end":173711,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":174478,"byte_end":174488,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":1139},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":175335,"byte_end":175351,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":175483,"byte_end":175499,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6327},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":177239,"byte_end":177245,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":13799700,"byte_end":13799709,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":7236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":13799855,"byte_end":13799864,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":7236},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":13799903,"byte_end":13799912,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":7236},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":13800863,"byte_end":13800872,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":7247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":13801018,"byte_end":13801027,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":7247},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":13801066,"byte_end":13801075,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":7247},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\chain.rs","byte_start":13801998,"byte_end":13802003,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":11663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\chain.rs","byte_start":13802183,"byte_end":13802188,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":11663},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803733,"byte_end":13803747,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":6553},"to":{"krate":0,"index":6480}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13803766,"byte_end":13803773,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":11625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13804057,"byte_end":13804064,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":11625},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13805040,"byte_end":13805046,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":339}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":6480}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13805101,"byte_end":13805107,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":340}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":6553}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13805496,"byte_end":13805499,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":341}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":6480}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13805545,"byte_end":13805548,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":342}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":6553}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13805931,"byte_end":13805934,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":343}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":6480}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13805982,"byte_end":13805985,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":344}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":6553}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13806500,"byte_end":13806506,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":345}},"from":{"krate":2,"index":46098},"to":{"krate":0,"index":6480}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13806595,"byte_end":13806601,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":346}},"from":{"krate":2,"index":46098},"to":{"krate":0,"index":6553}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13807679,"byte_end":13807684,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":347}},"from":{"krate":15,"index":483},"to":{"krate":0,"index":6480}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13807732,"byte_end":13807737,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":348}},"from":{"krate":15,"index":483},"to":{"krate":0,"index":6553}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13808137,"byte_end":13808145,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":349}},"from":{"krate":15,"index":737},"to":{"krate":0,"index":6480}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":13808193,"byte_end":13808201,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":350}},"from":{"krate":15,"index":737},"to":{"krate":0,"index":6553}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809472,"byte_end":13809477,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":7258},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809508,"byte_end":13809513,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":7258},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13809544,"byte_end":13809549,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":7258},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":13810092,"byte_end":13810097,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":7258},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":13810711,"byte_end":13810717,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":11569},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":13810935,"byte_end":13810941,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":11569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":13811060,"byte_end":13811066,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":11569},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":13812152,"byte_end":13812161,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":11524},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":13812382,"byte_end":13812391,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":11524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":13812513,"byte_end":13812522,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":11524},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fold.rs","byte_start":13813594,"byte_end":13813604,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":11475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fold.rs","byte_start":13813800,"byte_end":13813810,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":11475},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fuse.rs","byte_start":13814709,"byte_end":13814713,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":11435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fuse.rs","byte_start":13814873,"byte_end":13814877,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":11435},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13815820,"byte_end":13815824,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7265},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":13816486,"byte_end":13816490,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7265},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":13817236,"byte_end":13817239,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":11381},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":13817428,"byte_end":13817431,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":11381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":13817552,"byte_end":13817555,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":11381},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\merge.rs","byte_start":13818400,"byte_end":13818405,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":11332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\merge.rs","byte_start":13818659,"byte_end":13818664,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":11332},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":13820176,"byte_end":13820180,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":7271},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":13820214,"byte_end":13820218,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":7271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":13820359,"byte_end":13820363,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7271},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13820859,"byte_end":13820863,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":7279},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":13821490,"byte_end":13821494,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7279},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822041,"byte_end":13822048,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7285},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822079,"byte_end":13822086,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":7285},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822117,"byte_end":13822124,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":7285},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":13822817,"byte_end":13822824,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7285},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13828489,"byte_end":13828498,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":7292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13835499,"byte_end":13835508,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":7292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":13837047,"byte_end":13837056,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7292},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":13838272,"byte_end":13838276,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":11295},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":13838486,"byte_end":13838490,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":11295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":13838623,"byte_end":13838627,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":11295},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":13839853,"byte_end":13839862,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":11250},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":13840083,"byte_end":13840092,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":11250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":13840277,"byte_end":13840286,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":11250},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":13841635,"byte_end":13841642,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":7304},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":13841676,"byte_end":13841683,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":7304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":13841890,"byte_end":13841897,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":7304},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":13842507,"byte_end":13842511,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":11213},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":13842721,"byte_end":13842725,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":11213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":13842858,"byte_end":13842862,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":11213},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":13844381,"byte_end":13844390,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":11164},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":13844650,"byte_end":13844659,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":11164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":13844852,"byte_end":13844861,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":11164},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\timeout.rs","byte_start":13875918,"byte_end":13875925,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":11125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\timeout.rs","byte_start":13876280,"byte_end":13876287,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":11125},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13774942,"byte_end":13774948,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":16,"index":96},"to":{"krate":0,"index":7199}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":13798930,"byte_end":13798932,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":7234},"to":{"krate":0,"index":7199}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13894763,"byte_end":13894770,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":9188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":13898050,"byte_end":13898067,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":9200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13908634,"byte_end":13908640,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":7483},"to":{"krate":2,"index":2924}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13908767,"byte_end":13908773,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":7483},"to":{"krate":2,"index":2924}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13908934,"byte_end":13908938,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":7477},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13909008,"byte_end":13909012,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":7477},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13911786,"byte_end":13911792,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":7443},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13911829,"byte_end":13911835,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":7443},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13911873,"byte_end":13911881,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":7446},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13911918,"byte_end":13911926,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":7446},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13911942,"byte_end":13911948,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":7443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13917584,"byte_end":13917588,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":7457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13917980,"byte_end":13917986,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":7443},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13918166,"byte_end":13918172,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":7443},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13918326,"byte_end":13918334,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":7446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13923199,"byte_end":13923207,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":7446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13926025,"byte_end":13926030,"line_start":857,"line_end":857,"column_start":30,"column_end":35},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":7543},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13929382,"byte_end":13929390,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":7446},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13929840,"byte_end":13929848,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":7446},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13931032,"byte_end":13931036,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":7477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13931878,"byte_end":13931882,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":7477},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13932612,"byte_end":13932620,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":7446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13933932,"byte_end":13933936,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":7477},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13934660,"byte_end":13934664,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":7477},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13935462,"byte_end":13935468,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":7468},"to":{"krate":0,"index":1166}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13935883,"byte_end":13935889,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":7443},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13936033,"byte_end":13936041,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":7446},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13936176,"byte_end":13936185,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":7473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13936358,"byte_end":13936367,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":7473},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13936658,"byte_end":13936667,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":9214},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13936940,"byte_end":13936949,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":9214},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13936976,"byte_end":13936988,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":9226},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":13937330,"byte_end":13937342,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":9226},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\block.rs","byte_start":13943651,"byte_end":13943656,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":7654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\block.rs","byte_start":13953638,"byte_end":13953644,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":7668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\block.rs","byte_start":13954126,"byte_end":13954132,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":7668},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13954770,"byte_end":13954776,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":7742},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13954908,"byte_end":13954914,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":7742},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13955321,"byte_end":13955329,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":7751},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13957101,"byte_end":13957109,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":7751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959537,"byte_end":13959545,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":7751},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959605,"byte_end":13959613,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":7751},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":13959801,"byte_end":13959807,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":7742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13971197,"byte_end":13971199,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":7860},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13971600,"byte_end":13971602,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":7869},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13971909,"byte_end":13971918,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":9277},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13972180,"byte_end":13972192,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":9284},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13973977,"byte_end":13973981,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":7893},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13974614,"byte_end":13974622,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":7905},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13974888,"byte_end":13974892,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":7893},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13974941,"byte_end":13974945,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":7893},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13975424,"byte_end":13975426,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":7860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13976125,"byte_end":13976127,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":7860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13976275,"byte_end":13976277,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":7860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13976455,"byte_end":13976457,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":7860},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13976857,"byte_end":13976859,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":7860},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13977386,"byte_end":13977388,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":7869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13980508,"byte_end":13980510,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":7869},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13980946,"byte_end":13980950,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":7893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13981414,"byte_end":13981418,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":7893},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13981967,"byte_end":13981979,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":9264},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":13983639,"byte_end":13983650,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":638},"to":{"krate":0,"index":7883}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":13986394,"byte_end":13986396,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":8054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":13992100,"byte_end":13992102,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":8054},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":13992379,"byte_end":13992381,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":8058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":13995780,"byte_end":13995782,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":8058},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996456,"byte_end":13996471,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":8108},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13996612,"byte_end":13996627,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":8108},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13997085,"byte_end":13997102,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":8117},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":13998080,"byte_end":13998097,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":8117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000569,"byte_end":14000586,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":8117},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":14000752,"byte_end":14000767,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":8108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14001877,"byte_end":14001886,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":9277},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002046,"byte_end":14002055,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":9277},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002541,"byte_end":14002553,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":9284},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002586,"byte_end":14002598,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":9284},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14002938,"byte_end":14002950,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":9284},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003179,"byte_end":14003188,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":9295},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003318,"byte_end":14003327,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":9295},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14003813,"byte_end":14003825,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":9300},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14004131,"byte_end":14004143,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":9300},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14004300,"byte_end":14004311,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":9310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14004410,"byte_end":14004421,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":9310},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14004551,"byte_end":14004562,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":9310},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14005066,"byte_end":14005082,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":9320},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":14005119,"byte_end":14005135,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":9320},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011434,"byte_end":14011439,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":8212},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011493,"byte_end":14011498,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":8212},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011552,"byte_end":14011562,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":8216},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011627,"byte_end":14011642,"line_start":160,"line_end":160,"column_start":25,"column_end":40},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":8220},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14011929,"byte_end":14011941,"line_start":170,"line_end":170,"column_start":23,"column_end":35},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":9331},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14012078,"byte_end":14012090,"line_start":176,"line_end":176,"column_start":16,"column_end":28},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":9331},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14012898,"byte_end":14012903,"line_start":202,"line_end":202,"column_start":17,"column_end":22},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":8212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017476,"byte_end":14017481,"line_start":360,"line_end":360,"column_start":21,"column_end":26},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":8212},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017565,"byte_end":14017570,"line_start":366,"line_end":366,"column_start":21,"column_end":26},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":8212},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14017694,"byte_end":14017699,"line_start":375,"line_end":375,"column_start":29,"column_end":34},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":8212},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14018094,"byte_end":14018104,"line_start":391,"line_end":391,"column_start":26,"column_end":36},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":8216},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14018205,"byte_end":14018215,"line_start":397,"line_end":397,"column_start":27,"column_end":37},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":8216},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14018362,"byte_end":14018372,"line_start":404,"line_end":404,"column_start":30,"column_end":40},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":8216},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14018529,"byte_end":14018539,"line_start":410,"line_end":410,"column_start":45,"column_end":55},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":8216},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14018705,"byte_end":14018715,"line_start":416,"line_end":416,"column_start":49,"column_end":59},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":8216},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14018893,"byte_end":14018908,"line_start":424,"line_end":424,"column_start":26,"column_end":41},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":8220},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14019005,"byte_end":14019020,"line_start":430,"line_end":430,"column_start":27,"column_end":42},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":8220},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14019163,"byte_end":14019178,"line_start":437,"line_end":437,"column_start":30,"column_end":45},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":8220},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14019331,"byte_end":14019346,"line_start":443,"line_end":443,"column_start":45,"column_end":60},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":8220},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":14019508,"byte_end":14019523,"line_start":449,"line_end":449,"column_start":49,"column_end":64},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":8220},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023487,"byte_end":14023495,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":9348},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023528,"byte_end":14023536,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":9348},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14023799,"byte_end":14023805,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":9336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14027813,"byte_end":14027819,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":9336},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14029557,"byte_end":14029565,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":9348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14030075,"byte_end":14030083,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":9348},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14034913,"byte_end":14034921,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":9348},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":14037879,"byte_end":14037885,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":9341},"to":{"krate":0,"index":1166}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039761,"byte_end":14039770,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":9377},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14039932,"byte_end":14039941,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":9377},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14040010,"byte_end":14040022,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":9389},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14040321,"byte_end":14040333,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":9389},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14042144,"byte_end":14042150,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":9365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048451,"byte_end":14048457,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":9365},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14048596,"byte_end":14048604,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":9371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14052995,"byte_end":14053003,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":9371},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14053150,"byte_end":14053158,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":9371},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14053621,"byte_end":14053626,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":8442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14057998,"byte_end":14058003,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":8442},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14058040,"byte_end":14058045,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":8442},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14058070,"byte_end":14058075,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":8442},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14058444,"byte_end":14058449,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":8442},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14058844,"byte_end":14058849,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":9402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":14060562,"byte_end":14060567,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":9402},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14064045,"byte_end":14064054,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":8589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14073975,"byte_end":14073984,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":8589},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14074185,"byte_end":14074191,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":8601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14075057,"byte_end":14075064,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":8595},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14075742,"byte_end":14075749,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":8595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14076548,"byte_end":14076555,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":8595},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14078197,"byte_end":14078204,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":8595},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14078251,"byte_end":14078263,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":9415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14078356,"byte_end":14078368,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":9415},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14078512,"byte_end":14078524,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":9415},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14078571,"byte_end":14078586,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":9408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14079208,"byte_end":14079223,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":9408},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14079509,"byte_end":14079524,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":9408},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":14079617,"byte_end":14079623,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":8601},"to":{"krate":0,"index":1166}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14084892,"byte_end":14084901,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":8721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14101095,"byte_end":14101104,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":8721},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14101183,"byte_end":14101192,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":8721},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14101570,"byte_end":14101579,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":8721},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14101604,"byte_end":14101613,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":8721},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14101651,"byte_end":14101657,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":9420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14108063,"byte_end":14108069,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":9420},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14108142,"byte_end":14108148,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":9420},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14108570,"byte_end":14108582,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":9425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14108762,"byte_end":14108774,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":9425},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14108918,"byte_end":14108930,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":9425},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14108977,"byte_end":14108992,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":9430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14109522,"byte_end":14109537,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":9430},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14109823,"byte_end":14109838,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":9430},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14109876,"byte_end":14109882,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":9437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14115369,"byte_end":14115377,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":9443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14119040,"byte_end":14119048,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":9443},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":14119401,"byte_end":14119412,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":9461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14122141,"byte_end":14122150,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":9469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124245,"byte_end":14124260,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":9473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124505,"byte_end":14124525,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":9480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124779,"byte_end":14124794,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":9473},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":14124902,"byte_end":14124922,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":9480},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14128276,"byte_end":14128291,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":8895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14131709,"byte_end":14131724,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":8895},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14131904,"byte_end":14131919,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":8895},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132095,"byte_end":14132110,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":8895},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14132574,"byte_end":14132590,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":8922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14136184,"byte_end":14136200,"line_start":349,"line_end":349,"column_start":36,"column_end":52},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":8922},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14136380,"byte_end":14136396,"line_start":358,"line_end":358,"column_start":38,"column_end":54},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":8922},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14136572,"byte_end":14136588,"line_start":367,"line_end":367,"column_start":30,"column_end":46},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":8922},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14137664,"byte_end":14137670,"line_start":402,"line_end":402,"column_start":25,"column_end":31},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":9490},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14137724,"byte_end":14137730,"line_start":403,"line_end":403,"column_start":25,"column_end":31},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":9490},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14137964,"byte_end":14137979,"line_start":407,"line_end":407,"column_start":25,"column_end":40},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":8895},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138037,"byte_end":14138052,"line_start":408,"line_end":408,"column_start":25,"column_end":40},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":8895},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138117,"byte_end":14138133,"line_start":409,"line_end":409,"column_start":25,"column_end":41},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":8922},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138446,"byte_end":14138462,"line_start":414,"line_end":414,"column_start":25,"column_end":41},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":8922},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14138520,"byte_end":14138526,"line_start":416,"line_end":416,"column_start":17,"column_end":23},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":9490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14141714,"byte_end":14141729,"line_start":524,"line_end":524,"column_start":32,"column_end":47},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":8895},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14141860,"byte_end":14141876,"line_start":532,"line_end":532,"column_start":32,"column_end":48},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":8922},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14142010,"byte_end":14142026,"line_start":540,"line_end":540,"column_start":35,"column_end":51},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":8922},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14142140,"byte_end":14142146,"line_start":546,"line_end":546,"column_start":21,"column_end":27},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":9490},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":14142238,"byte_end":14142244,"line_start":552,"line_end":552,"column_start":29,"column_end":35},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":9490},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":14148519,"byte_end":14148530,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":9028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":14154457,"byte_end":14154468,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":14154554,"byte_end":14154565,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":14154698,"byte_end":14154709,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":14154734,"byte_end":14154745,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":14154841,"byte_end":14154846,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":594}},"from":{"krate":2,"index":13279},"to":{"krate":0,"index":9051}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14158387,"byte_end":14158396,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":9518},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14158576,"byte_end":14158585,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":9518},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14160744,"byte_end":14160752,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":9497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14162024,"byte_end":14162032,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":9497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14163398,"byte_end":14163406,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":9497},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14163665,"byte_end":14163673,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":9497},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14163976,"byte_end":14163984,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":9497},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14164098,"byte_end":14164104,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":9504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14165639,"byte_end":14165645,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":9504},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14165884,"byte_end":14165887,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":9510},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14166028,"byte_end":14166034,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":9524},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14166136,"byte_end":14166143,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":9533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14166366,"byte_end":14166373,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":9533},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14166490,"byte_end":14166497,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":9533},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14166527,"byte_end":14166534,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":9533},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":14166681,"byte_end":14166688,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":9533},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\yield_now.rs","byte_start":14185507,"byte_end":14185515,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":9607},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\clock.rs","byte_start":14190493,"byte_end":14190498,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":10378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14201096,"byte_end":14201106,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":10383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14219100,"byte_end":14219110,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":10383},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14219138,"byte_end":14219148,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":10383},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14219285,"byte_end":14219295,"line_start":768,"line_end":768,"column_start":34,"column_end":44},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":10383},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14219677,"byte_end":14219682,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":10408},"to":{"krate":0,"index":10315}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14221809,"byte_end":14221814,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":10408},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14221944,"byte_end":14221947,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":10402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":14222034,"byte_end":14222041,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":10394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14224579,"byte_end":14224584,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":10425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":14225562,"byte_end":14225567,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":10425},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\atomic_stack.rs","byte_start":14239237,"byte_end":14239248,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":10429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\atomic_stack.rs","byte_start":14241226,"byte_end":14241244,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":10433},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\atomic_stack.rs","byte_start":14241840,"byte_end":14241858,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":10433},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":14246096,"byte_end":14246101,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":10437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":14252769,"byte_end":14252774,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":10437},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":14252982,"byte_end":14252987,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":10437},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":14253012,"byte_end":14253017,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":10437},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\handle.rs","byte_start":14253394,"byte_end":14253400,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":10462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\handle.rs","byte_start":14254063,"byte_end":14254069,"line_start":35,"line_end":35,"column_start":21,"column_end":27},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":10462},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\registration.rs","byte_start":14254514,"byte_end":14254526,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":10466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\registration.rs","byte_start":14255436,"byte_end":14255448,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":10466},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\stack.rs","byte_start":14255732,"byte_end":14255737,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":10470},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\stack.rs","byte_start":14255828,"byte_end":14255833,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":10470},"to":{"krate":0,"index":10315}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":14230532,"byte_end":14230538,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":10474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":14234235,"byte_end":14234241,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":10474},"to":{"krate":0,"index":809}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":14236814,"byte_end":14236820,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":10474},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":14236936,"byte_end":14236941,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":10043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":14238558,"byte_end":14238563,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":10043},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14260155,"byte_end":14260160,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":10484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14261527,"byte_end":14261532,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":10484},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":14261559,"byte_end":14261564,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":10484},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14262336,"byte_end":14262343,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":10504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266117,"byte_end":14266124,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":10504},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266253,"byte_end":14266260,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":646}},"from":{"krate":1,"index":11375},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266375,"byte_end":14266382,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":10504},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266547,"byte_end":14266554,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":10504},"to":{"krate":2,"index":3122}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266659,"byte_end":14266666,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":10504},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266807,"byte_end":14266814,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":10504},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14266975,"byte_end":14266982,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":10504},"to":{"krate":2,"index":3126}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":14267089,"byte_end":14267096,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":10504},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14270978,"byte_end":14270986,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":10523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":14272281,"byte_end":14272289,"line_start":169,"line_end":169,"column_start":32,"column_end":40},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":10523},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275621,"byte_end":14275628,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":10528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14275757,"byte_end":14275764,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":11085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14276302,"byte_end":14276309,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":11085},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14276887,"byte_end":14276894,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":10528},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14277038,"byte_end":14277045,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":10528},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":14277082,"byte_end":14277087,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":660}},"from":{"krate":1,"index":4047},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14295227,"byte_end":14295235,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":11037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":14296050,"byte_end":14296058,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":11037},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\level.rs","byte_start":14286991,"byte_end":14286996,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":10282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\level.rs","byte_start":14291748,"byte_end":14291753,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":10282},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":14292869,"byte_end":14292876,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3002},"to":{"krate":0,"index":10315}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\mod.rs","byte_start":14278812,"byte_end":14278817,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":10594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\mod.rs","byte_start":14284525,"byte_end":14284529,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":10608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\bit.rs","byte_start":14296891,"byte_end":14296895,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":10880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\bit.rs","byte_start":14298369,"byte_end":14298373,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":10880},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\addr.rs","byte_start":14305592,"byte_end":14305599,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":10886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\entry.rs","byte_start":14308234,"byte_end":14308241,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3002},"to":{"krate":0,"index":10675}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\generation.rs","byte_start":14308628,"byte_end":14308638,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":10901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":14309777,"byte_end":14309782,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":10720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":14310124,"byte_end":14310130,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":10722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":14314082,"byte_end":14314087,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":10720},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":14314393,"byte_end":14314399,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":10722},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\shard.rs","byte_start":14316542,"byte_end":14316547,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":10776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\shard.rs","byte_start":14318226,"byte_end":14318231,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":10776},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\slot.rs","byte_start":14318608,"byte_end":14318612,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":10807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\stack.rs","byte_start":14319583,"byte_end":14319596,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":10840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\stack.rs","byte_start":14320424,"byte_end":14320437,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":10840},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":14299971,"byte_end":14299975,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":10863},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":14300012,"byte_end":14300016,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":10863},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":14300039,"byte_end":14300043,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":10863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":14301558,"byte_end":14301562,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":10863},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":181552,"byte_end":181562,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":181621,"byte_end":181631,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182920,"byte_end":182928,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182965,"byte_end":182973,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":183027,"byte_end":183037,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186041,"byte_end":186051,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186296,"byte_end":186306,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186706,"byte_end":186716,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186938,"byte_end":186942,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":10925},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":187389,"byte_end":187397,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":187596,"byte_end":187604,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\rand.rs","byte_start":197676,"byte_end":197684,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":10938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\wake.rs","byte_start":199224,"byte_end":199228,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1229}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\wake.rs","byte_start":199231,"byte_end":199235,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":1229}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\wake.rs","byte_start":199546,"byte_end":199554,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":10947},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14321249,"byte_end":14321256,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":10977},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14321293,"byte_end":14321300,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":10977},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14321338,"byte_end":14321347,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":10981},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14321533,"byte_end":14321540,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":10977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14322174,"byte_end":14322183,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":10981},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14322315,"byte_end":14322324,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":10981},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":14322446,"byte_end":14322455,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":10981},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":203520,"byte_end":203528,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":11012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":203778,"byte_end":203786,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":11012},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":203891,"byte_end":203899,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":11012},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\takan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":204208,"byte_end":204218,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":11021},"to":{"krate":4294967295,"index":4294967295}}]}